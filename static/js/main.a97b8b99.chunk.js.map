{"version":3,"sources":["analysis/size.js","ui/graph/NodeSize.js","ui/graph/NodeItem.js","ui/tree.js","ui/graph/NodeList.js","ui/graph/GraphExplorer.js","analysis/info.js","analysis/changes.js","analysis/chains.js","ui/ErrorBox.js","ui/graph/NodeCard.js","ui/graph/EdgeLinkButton.js","ui/graph/ChainItem.js","ui/graph/ChainsList.js","ui/graph/ChainsExplorer.js","ui/graph/ChildrenExplorer.js","ui/graph/ParentsExplorer.js","ui/graph/ChangesView.js","ui/ErrorBar.js","ui/WarningBar.js","analysis/webpack.js","App.js","registerServiceWorker.js","index.js","ui/graph/NodeName.js","analysis/dependencies.js","ui/EmptyBox.js","analysis/utils.js","analysis/graph.js"],"names":["calculateTreeSize","graph","node","key","id","cache","Object","dependencies","then","tree","reduce","sum","analysis_graph","size","__webpack_exports__","core_styles","theme","bigger","color","red_default","a","A700","smaller","green_default","_ref","baseGraph","classes","react","react_promise_es","promise","Promise","all","_ref2","_ref3","_slicedToArray","baseTreeSize","treeSize","numeral_default","format","className","Math","abs","pending","graph_NodeItem","styles","root","paddingLeft","checked","onClick","style","selectFromNode","selectToNode","selectNode","children","_ref$secondaryActions","secondaryActions","index_es","dense","disableGutters","ContainerComponent","button","classnames_default","primary","NodeName","hidePackage","tooltip","primaryTypographyProps","noWrap","secondary","NodeSize","map","action","index","defaultGetChildren","row","defaultGetKey","isTreeExpanded","state","_options$getKey","arguments","length","undefined","getKey","expanded","indexOf","toggleTreeRowState","options","expand","current","_options$getKey2","_objectSpread","concat","filter","e","toggleTreeRow","treeOptions","group","name","NodeList_NodeList","search","fuseSelector","lib","_","p","nodes","fuse_default","keys","searchSelector","_this","s","fuse","list","groupSelector","sortGroupsBySize","groups","lodash","kind","info","nodesSelector","flattenTreeToRows","result","_options$getChildren","getChildren","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","push","apply","_toConsumableArray","err","return","_this2","this","_this$props","props","renderItem","renderEmpty","listContainer","es","width","height","rowCount","rowHeight","rowRenderer","setState","divider","noRowsRenderer","_this3","_this$props2","loading","type","onChange","el","target","endAdornment","position","aria-label","placeholder","listProgress","renderList","graph_NodeList","display","flexDirection","justifyContent","flexGrow","outline","GraphExplorer_GraphExplorer","modeId","modeMenuAnchor","modeSelector","modes","defaultMode","getNodes","nodesPromiseSelector","resolve","handleModeMenuOpen","event","currentTarget","handleModeMenuClose","_ref$modes","selected","onNodeSelect","mode","itemProps","assign","EmptyBox","icon","_this$state","currentModeId","anchorEl","open","Boolean","onClose","modeMenuItem","renderTitle","_this$props3","nodesPromise","header","variant","gutterBottom","renderInfo","headerMore","renderModeMenu","marginTop","FILENAME_RE","getModuleInfo","file","String","found","match","pathToPackage","packageName","path","extension","getPackageName","MOCKED_EDGE_KIND","addChange","changes","change","newChanges","lodash__WEBPACK_IMPORTED_MODULE_0__","edge","_graph__WEBPACK_IMPORTED_MODULE_1__","from","to","wasOriginallyEnabled","enabled","applyChanges","fromNode","toNode","errors","message","gatherChains","_callee","toId","visited","currentPath","paths","childId","regenerator_default","wrap","_context","prev","abrupt","sent","idle","t0","finish","stop","_callee2","_context2","ui_ErrorBox","background","palette","error","dark","contrastText","padding","align-items","flex-shrink","margin-right","label","NodeCard_NodeCard","actions","card","onlyPackage","disableActionSpacing","expandOpen","in","graph_NodeCard","flexShrink","marginBottom","edgeButton","left","top","transform","transition","transitions","create","duration","shortest","marginLeft","breakpoints","up","marginRight","EdgeLinkButton_EdgeLinkButton","title","disableFocusListener","placement","enterDelay","graph_EdgeLinkButton","graph_ChainItem","link","chain","through","graph_ChainsList","chains","selectedChain","onChainSelect","usedIds","finalChains","ChainsList_toConsumableArray","_finalChains$index","every","ChainsExplorer_ChainsExplorer","chainsPromiseSelector","_x6","_x7","_x8","_findChains","findChains","_waitingForChainsPromise","renderSelectedChain","onAddChange","onSelectFromNode","onSelectToNode","isFirst","isLast","prevNode","renderChains","chainsList","componentDidUpdate","prevProps","baseGraphChanged","currentFrom","currentTo","prevFrom","prevTo","fromToIdChanged","chainsPromise","_this$props4","catch","selectedChainScroll","overflowY","ChildrenExplorer","allNodesSelector","reselect__WEBPACK_IMPORTED_MODULE_3__","_analysis_graph__WEBPACK_IMPORTED_MODULE_5__","getAllNodes","leafNodesSelector","_analysis_dependencies__WEBPACK_IMPORTED_MODULE_8__","getLeafNodes","directChildrenNodesSelector","getDirectChildrenNodes","childrenNodesSelector","ids","getChildrenNodes","childLeafNodesSelector","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","t1","t2","_x","_x2","getChildLeafNodes","directChildren","react__WEBPACK_IMPORTED_MODULE_1__","_NodeName__WEBPACK_IMPORTED_MODULE_7__","childLeafs","leafs","_GraphExplorer__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","ParentsExplorer","entryNodesSelector","getEntryNodes","directParentNodesSelector","parents","getDirectParentNodes","parentNodesSelector","getParentNodes","parentEntryNodesSelector","getParentEntryNodes","directParents","parentEntries","entries","initialModes","initialAll","initialEntries","initialLeafs","ChangesView","onUpdateChanges","textsToCopy","react__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","fromName","toName","delete","lodash__WEBPACK_IMPORTED_MODULE_1__","_EmptyBox__WEBPACK_IMPORTED_MODULE_6__","react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_2__","text","join","maxHeight","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","alignItems","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_colors_amber__WEBPACK_IMPORTED_MODULE_3___default","readWebpackStats","_readWebpackStats","stats","_args2","_asyncToGenerator","_options$includeAsync","includeAsyncImports","_options$includeChunk","includeChunks","_stats$chunks","chunks","_stats$modules","modules","chunk","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","module","isConcat","isNamespace","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_module","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","chunkId","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","reason","async","names","original","replace","reasons","moduleId","userRequest","t3","t4","App","fromNodeId","toNodeId","showChanges","dropzone","openFile","callback","json","_graph","console","time","_analysis_webpack__WEBPACK_IMPORTED_MODULE_8__","timeEnd","log","warn","handleDrop","reject","reader","FileReader","onload","JSON","parse","onerror","readAsBinaryString","toggleShowChanges","updateChanges","Error","newGraph","_analysis_graph__WEBPACK_IMPORTED_MODULE_9__","_analysis_changes__WEBPACK_IMPORTED_MODULE_11__","_this$state2","resetNodesSelection","_this$state3","NODE_ENV","PUBLIC_URL","REACT_APP_STATS","fetch","_this$state4","container","panes","_ui_graph_ParentsExplorer__WEBPACK_IMPORTED_MODULE_16__","parentsExplorer","_ui_graph_ChainsExplorer__WEBPACK_IMPORTED_MODULE_10__","pathsExplorer","_ui_graph_ChildrenExplorer__WEBPACK_IMPORTED_MODULE_17__","childrenExplorer","_this$state5","react_dropzone__WEBPACK_IMPORTED_MODULE_5__","multiple","activeClassName","rejectClassName","accept","onDrop","disableClick","ref","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_LinearProgress__WEBPACK_IMPORTED_MODULE_4___default","progress","_ui_WarningBar__WEBPACK_IMPORTED_MODULE_12__","_ui_ErrorBar__WEBPACK_IMPORTED_MODULE_13__","renderGraph","openFileMessage","_ui_EmptyBox__WEBPACK_IMPORTED_MODULE_15__","fontSize","href","rel","anchor","_ui_graph_ChangesView__WEBPACK_IMPORTED_MODULE_14__","react_hot_loader__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","minWidth","fontFamily","maxWidth","textTransform","borderBottom","openButton","textAlign","alignSelf","margin","cursor","withTheme","isLocalhost","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","rootEl","document","getElementById","URL","origin","addEventListener","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","react_dom_default","render","react_default","createElement","whiteSpace","overflow","textOverflow","_analysis_info__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_1___default","walkGraph","nodesKey","getDeepNodeChildren","getDeepNodeParents","keepOnlyEntryModules","parentId","keepOnlyLeafModules","margin-bottom","ABORTED","utils_backgroundProcessor","abort","idleReject","fn","setTimeout","createGraph","edges","getNodeId","getEdgeId","getNode","resolveNode","resolveEdgeForNodes","bind","values","addNode","_node","addEdge","_edge","toggleEdge","abortGraph","cloneGraph"],"mappings":"yLAQO,SAASA,EAAkBC,EAAcC,GAC9C,IAAMC,8BAA2BD,EAAKE,IAOtC,OALKH,EAAMI,MAAMF,KACfF,EAAMI,MAAMF,GAAOG,OAAAC,EAAA,EAAAD,CAAoBL,EAAOC,GAAMM,KAAK,SAAAC,GAAA,OACvDA,EAAKC,OAAO,SAACC,EAAKP,GAAN,OAAaO,EAAML,OAAAM,EAAA,EAAAN,CAAQL,EAAOG,GAAIS,MAAMX,EAAKW,SAG1DZ,EAAMI,MAAMF,qZCuCrBW,EAAA,EAAeR,OAAAS,EAAA,WAAAT,CAnCA,SAAAU,GAAA,OACbC,QACEC,MAAOC,EAAAC,EAAIC,MAEbC,SACEJ,MAAOK,EAAAH,EAAMC,QA8BjB,CA1BA,SAAAG,GAA4D,IAAzCC,EAAyCD,EAAzCC,UAAWxB,EAA8BuB,EAA9BvB,MAAOC,EAAuBsB,EAAvBtB,KAAMwB,EAAiBF,EAAjBE,QACzC,OACEC,EAAA,cAACC,EAAA,GACCC,QAASC,QAAQC,KACfN,GAAazB,EAAkByB,EAAWnB,OAAAM,EAAA,EAAAN,CAAQmB,EAAWvB,EAAKE,KAClEJ,EAAkBC,EAAOC,KAE3BM,KAAM,SAAAwB,GAAA,IAAAC,EAAAC,EAAAF,EAAA,GAAEG,EAAFF,EAAA,GAAgBG,EAAhBH,EAAA,UACJN,EAAA,cAAAA,EAAA,cACGU,IAAQnC,EAAKW,MAAMyB,OAAO,UAC1B,MACAD,IAAQD,EAAWlC,EAAKW,MAAMyB,OAAO,UACrB,MAAhBH,GAAwBC,IAAaD,EACpCR,EAAA,sBAAMY,UAAWH,EAAWD,EAAeT,EAAQT,OAASS,EAAQJ,SACjE,KACAc,EAAWD,EAAe,IAAM,IAChCE,IAAQG,KAAKC,IAAIL,EAAWD,IAAeG,OAAO,UAClD,KAED,OAGRI,QAAS,uICkBf,IAAAC,EAAerC,OAAAsC,EAAA,WAAAtC,CA9CA,SAAAU,GAAA,OACb6B,MACEC,YAAa,MA4CjB,CAxCA,SAAAtB,GAcU,IAbRC,EAaQD,EAbRC,UACAxB,EAYQuB,EAZRvB,MACA8C,EAWQvB,EAXRuB,QACAC,EAUQxB,EAVRwB,QACA9C,EASQsB,EATRtB,KAIA+C,GAKQzB,EARR0B,eAQQ1B,EAPR2B,aAOQ3B,EANR4B,WAMQ5B,EALRyB,OAEAvB,GAGQF,EAJR6B,SAIQ7B,EAHRE,SACAa,EAEQf,EAFRe,UAEQe,EAAA9B,EADR+B,wBACQ,IAAAD,OAIR,OACE3B,EAAA,qBAAKsB,MAAOA,GACVtB,EAAA,cAAC6B,EAAA,GACCC,OAAA,EACAC,gBAAA,EACAC,mBAAmB,MACnBC,SAAUZ,EACVA,QAASA,EACTT,UAAWsB,IAAWtB,EAAWb,EAAQmB,OAEzClB,EAAA,cAAC6B,EAAA,GACCM,QAASnC,EAAA,cAACoC,EAAA,GAAS7D,KAAMA,EAAM8D,aAAA,EAAYC,SAAA,IAC3CC,wBAAyBC,QAAQ,EAAMjD,MAAO6B,EAAU,YAAc,WACtEqB,UAAWzC,EAAA,cAAC0C,EAAA,GAAS5C,UAAWA,EAAWxB,MAAOA,EAAOC,KAAMA,MAEhEqD,EAAiBe,IAAI,SAACC,EAAQC,GAAT,OACpB7C,EAAA,cAAC6B,EAAA,GAAwBrD,IAAKqE,GAAQD,s0BCpDhD,IAAME,EAAqB,SAAAC,GAAA,OAAOA,EAAIrB,UAChCsB,EAAgB,SAAAD,GAAA,OAAOA,GAEtB,SAASE,EAAeC,EAAkBH,GAA+C,IAAAI,GAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,OACvFG,cADuF,IAAAJ,EAC9EH,EAD8EG,EAE9F,OAAOD,EAAMM,SAASC,QAAQF,EAAOR,KAAS,EAyCzC,IAAMW,EAAqB,SAACX,GAAD,IAAWY,EAAXP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,aAA0C,SAACF,GAAD,OApBrE,SACLA,EACAH,GAGW,IAFXY,EAEWP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MADXQ,EACWR,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACLO,EAAUZ,EAAeC,EAAOH,EAAKY,GAI3C,GAHc,MAAVC,IACFA,GAAUC,GAERD,IAAWC,EAAS,OAAOX,EALpB,IAAAY,EAMsBH,EAA1BJ,OACD/E,QAPK,IAAAsF,EAMKd,EANLc,GAOQf,GACnB,OACEgB,KAAWb,EADTU,GACgBJ,WAAcN,EAAMM,UAApBQ,QAA8BxF,MAE9BgF,SAAUN,EAAMM,SAASS,OAAO,SAAAC,GAAA,OAAKA,IAAM1F,MAK/D2F,CAAcjB,EAAOH,EAAKY,0wBCb5B,IAgBMS,GAAeb,OAAQ,SAAAc,GAAA,OAASA,EAAMC,OAEtCC,qRACJrB,OACEsB,OAAQ,GACRhB,eAEFiB,aAAe9F,OAAA+F,EAAA,eAAA/F,CACb,SAACgG,EAAGC,GAAJ,OAAUA,EAAEC,OACZ,SAAAA,GACE,OAAO,IAAIC,EAAArF,EAAKoF,GACdE,MAAO,OAAQ,KAAM,cAI3BC,eAAiBrG,OAAA+F,EAAA,eAAA/F,CACfsG,EAAKR,aACL,SAAAS,GAAA,OAAKA,EAAEV,QACP,SAACW,EAAMX,GACL,OAAOA,EAASW,EAAKX,OAAOA,GAAUW,EAAKC,SAG/CC,cAAgB1G,OAAA+F,EAAA,eAAA/F,CACdsG,EAAKD,eACL,SAACL,EAAGC,GAAJ,OAAUA,EAAEU,kBACZ,SAACT,EAAOS,GACN,IAAMC,EAAS5G,OAAA6G,EAAA,QAAA7G,CAAQkG,EAAO,SAAAtG,GAC5B,MAAkB,WAAdA,EAAKkH,KACA9G,OAAA+G,EAAA,EAAA/G,CAAeJ,IAAS,iBAEjC,IAAAyF,OAAWzF,EAAKkH,KAAhB,QAEF,OAAO9G,OAAA6G,EAAA,OAAA7G,CACLA,OAAA6G,EAAA,IAAA7G,CAAI4G,EAAQ,SAAC7D,EAAU4C,GAAX,OACVA,OACA5C,SAAU/C,OAAA6G,EAAA,OAAA7G,CAAO+C,EAAU,QAC3BxC,KAAMP,OAAA6G,EAAA,MAAA7G,CAAM+C,EAAU,QACtB2C,OAAO,KAETiB,EAAmB,SAAAjB,GAAA,OAAUA,EAAMnF,MAAO,YAIhDyG,cAAgBhH,OAAA+F,EAAA,eAAA/F,CACdsG,EAAKI,cACL,SAAAH,GAAA,OAAKA,EAAE1B,UACP,SAAC1E,EAAM0E,GACL,ODxFC,SAASoC,EACd9G,EACAoE,GAEqB,IADrBS,EACqBP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MACfyC,KADeC,EAEsBnC,EAApCoC,mBAFc,IAAAD,EAEAhD,EAFAgD,EAAAE,GAAA,EAAAC,GAAA,EAAAC,OAAA5C,EAAA,IAGrB,QAAA6C,EAAAC,EAAkBtH,EAAlBuH,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwB,KAAbjD,EAAaoD,EAAAM,MAEtB,GADAZ,EAAOa,KAAK3D,GACRE,EAAeC,EAAOH,EAAKY,GAAU,CACvC,IAAMjC,EAAWqE,EAAYhD,GAC7B8C,EAAOa,KAAPC,MAAAd,EAAAe,EAAehB,EAAkBlE,EAAUwB,EAAOS,OAPjC,MAAAkD,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAI,EAAAU,QAAAV,EAAAU,SAAA,WAAAb,EAAA,MAAAC,GAUrB,OAAOL,EC0EID,CAAkB9G,GAAO0E,YAAWY,qEAIlC,IAAA2C,EAAAC,KAAAC,EACkDD,KAAKE,MAA3DnH,EADIkH,EACJlH,QAASD,EADLmH,EACKnH,UAAWxB,EADhB2I,EACgB3I,MAAO6I,EADvBF,EACuBE,WAAYC,EADnCH,EACmCG,YACxCvC,EAAQmC,KAAKrB,cAAcqB,KAAK9D,MAAO8D,KAAKE,OAElD,OACElH,EAAA,qBAAKY,UAAWb,EAAQsH,eACtBrH,EAAA,cAACsH,EAAA,EAAD,KACG,SAAAzH,GAAA,IAAE0H,EAAF1H,EAAE0H,MAAOC,EAAT3H,EAAS2H,OAAT,OACCxH,EAAA,cAACsH,EAAA,GACC1G,UAAWb,EAAQqF,KACnBmC,MAAOA,EACPC,OAAQA,EACRC,SAAU5C,EAAMxB,OAChBqE,UAAW,GACXC,YAAa,SAAAtH,GAAoB,IAAlBwC,EAAkBxC,EAAlBwC,MAAOvB,EAAWjB,EAAXiB,MACd/C,EAAOsG,EAAMhC,GACnB,OAAItE,EAAK8F,MAELrE,EAAA,cAAC6B,EAAA,GACCC,OAAA,EACAE,mBAAmB,MACnBC,QAAA,EACAZ,QAAS,kBAAM0F,EAAKa,SAASlE,EAAmBnF,EAAM6F,KACtDrC,gBAAA,EACAT,MAAOA,EACP9C,IAAKD,EAAK+F,KACVuD,SAAA,GAEA7H,EAAA,cAAC6B,EAAA,GACCM,QAAS5D,EAAK+F,KACd7B,UAAA,GAAAuB,OAActD,IAAQnC,EAAKW,MAAMyB,OAAO,QAAxC,QAAAqD,OACEzF,EAAKmD,SAAS2B,UAGlBrD,EAAA,cAAC6B,EAAA,EAAD,KACGoB,EAAe8D,EAAK7D,MAAO3E,EAAM6F,GAC9B,cACA,gBAKL+C,GAAY5I,OAAMC,IAAKD,EAAKE,GAAIqB,YAAWxB,QAAOgD,WAE3DwG,eAAgBV,wCAQnB,IAAAW,EAAAf,KAAAgB,EAC+BhB,KAAKE,MAApCnH,EADAiI,EACAjI,QAASa,EADToH,EACSpH,UAAWqH,EADpBD,EACoBC,QACpBzD,EAAUwC,KAAK9D,MAAfsB,OACP,OACExE,EAAA,qBAAKY,UAAWsB,IAAWtB,EAAWb,EAAQmB,OAC5ClB,EAAA,cAAC6B,EAAA,GACCjB,UAAWb,EAAQyE,OACnB/F,GAAG,qBACHyJ,KAAK,OACLzB,MAAOjC,EACP2D,SAAU,SAAAC,GAAA,OAAML,EAAKH,UAAUpD,OAAQ4D,EAAGC,OAAO5B,SACjD6B,aACE9D,GACExE,EAAA,cAAC6B,EAAA,GAAe0G,SAAS,OACvBvI,EAAA,cAAC6B,EAAA,GACCtC,MAAM,UACNiJ,aAAW,eACXnH,QAAS,kBAAM0G,EAAKH,UAAUpD,OAAQ,OAEtCxE,EAAA,cAAC6B,EAAA,GAAKtC,MAAM,WAAZ,WAKRkJ,YAAY,WAEbR,EAAUjI,EAAA,cAAC6B,EAAA,GAAejB,UAAWb,EAAQ2I,eAAmB1B,KAAK2B,0NA/HvD3I,EAAA,eAqIvB4I,EAAejK,OAAAsC,EAAA,WAAAtC,CAvJA,SAAAU,GAAA,OACb6B,MACE2H,QAAS,OACTC,cAAe,SACfC,eAAgB,WAElBvE,UACA6C,eACE2B,SAAU,EACVT,SAAU,YAEZnD,MACE6D,QAAS,KA2Ib,CAAkC1E,+vBCnJlC,IAkBM2E,qRACJhG,OAASiG,OAAQ,KAAMC,eAAgB,QAEvCC,aAAe,SAACnE,EAAGN,GAAJ,OAAUA,EAAE0E,MAAMpE,EAAEiE,QAAU,KAAOvE,EAAE0E,MAAM1E,EAAE2E,gBAC9D5D,cAAgB,SAACT,EAAGN,GAAJ,OAAUK,EAAKoE,aAAanE,EAAGN,GAAG4E,cAElDC,qBAAuB9K,OAAA+F,EAAA,eAAA/F,CACrBsG,EAAKU,cAEL,SAAAd,GAAA,OAAS1E,QAAQuJ,QAAQ7E,OAW3B8E,mBAAqB,SAAAC,GACnB3E,EAAK2C,UAAUwB,eAAgBQ,EAAMC,mBAEvCC,oBAAsB,WACpB7E,EAAK2C,UAAUwB,eAAgB,sFAZyB,IAAAW,EAAAlK,EAAzByJ,MAC/B,YADwD,IAAAS,SAAA3G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,OACvC+F,QAIV,MAFGA,OAAQ,8CAYTtE,GAAO,IAAAoC,EAC4CD,KAAKE,MAA1DnH,EADSkH,EACTlH,QAASD,EADAmH,EACAnH,UAAWxB,EADX2I,EACW3I,MAAO0L,EADlB/C,EACkB+C,SAAUC,EAD5BhD,EAC4BgD,aACtCC,EAAOlD,KAAKqC,aAAarC,KAAK9D,MAAO8D,KAAKE,OAEhD,OACElH,EAAA,cAAC4I,GACChI,UAAWb,EAAQqF,KACnBP,MAAOA,MACPoD,QAAkB,MAATpD,EACT/E,UAAWA,EACXxB,MAAOA,EACP0L,SAAUA,EACV1E,kBAAA,EACA6B,WAAY,SAAAgD,GAAA,OACVnK,EAAA,cAACgB,EAADrC,OAAAyL,UACMD,GACJ9I,QAAS,kBAAM4I,EAAaE,EAAU5L,KAAKE,KAC3C2C,UAAS4I,GAAWA,EAASvL,KAAO0L,EAAU5L,KAAKE,OAGvD2I,YAAa,kBAAMpH,EAAA,cAACqK,EAAA,GAASC,KAAMtK,EAAA,cAAC6B,EAAA,EAAD,eAAqBqI,EAAK9C,2DAKlD,IAAAL,EAAAC,KAAAgB,EACuBhB,KAAKE,MAApCnH,EADQiI,EACRjI,QAASuJ,EADDtB,EACCsB,MAAOC,EADRvB,EACQuB,YADRgB,EAEkBvD,KAAK9D,MAA/BkG,EAFQmB,EAERnB,eACDoB,EAHSD,EAEQpB,QACSI,EAChC,OACEvJ,EAAA,cAAC6B,EAAA,GACCpD,GAAG,YACHgM,SAAUrB,EACVsB,KAAMC,QAAQvB,GACdwB,QAAS5D,KAAK8C,qBAEbnL,OAAA6G,EAAA,IAAA7G,CAAI2K,EAAO,SAACY,EAAYzL,GAAb,OACVuB,EAAA,cAAC6B,EAAA,GACCjB,UAAWb,EAAQ8K,aACnBrM,IAAKC,EACLuL,SAAUvL,IAAO+L,EACjBnJ,QAAS,kBAAM0F,EAAKa,UAAUuB,OAAQ1K,EAAI2K,eAAgB,SAEzDc,EAAKY,mDAOP,IAAA/C,EAAAf,KAAA+D,EACsB/D,KAAKE,MAA3BtG,EADAmK,EACAnK,UAAWb,EADXgL,EACWhL,QAEZmK,EAAOlD,KAAKqC,aAAarC,KAAK9D,MAAO8D,KAAKE,OAC1C8D,EAAehE,KAAKyC,qBAAqBzC,KAAK9D,MAAO8D,KAAKE,OAEhE,OACElH,EAAA,qBAAKY,UAAWsB,IAAWtB,EAAWb,EAAQmB,OAC5ClB,EAAA,cAAC6B,EAAA,GACCI,QAAA,EACAF,gBAAA,EACAnB,UAAWb,EAAQkL,OACnB5J,QAAS2F,KAAK2C,oBAEd3J,EAAA,cAAC6B,EAAA,EAAD,KACE7B,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,YAAYhB,EAAKY,eACrC9K,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,aAAaC,cAAA,GAC9BjB,EAAKkB,eAGVpL,EAAA,cAAC6B,EAAA,GAAKtC,MAAM,SAASqB,UAAWb,EAAQsL,YAAxC,cAIDrE,KAAKsE,iBACNtL,EAAA,cAACC,EAAA,GACCC,QAAS8K,EACTnM,KAAM,SAAAgG,GAAA,OAASkD,EAAKY,WAAW9D,IAC/B9D,QAAS,kBAAMgH,EAAKY,WAAW,sNAzGb3I,EAAA,WAgH5Bb,EAAA,EAAeR,OAAAsC,EAAA,WAAAtC,CAlIA,SAAAU,GAAA,OACb6B,MACE2H,QAAS,OACTN,SAAU,WACVO,cAAe,SACfC,eAAgB,WAElB3D,MACE4D,SAAU,GAEZN,cACE6C,UAAW,IAEbV,cACEtD,MAAO,OAoHX,CAAkC2B,qGCvKlC,IAAMsC,EAAc,yGAUb,SAASC,EAAT5L,GAA2D,IAAnC6L,EAAmC7L,EAAnC6L,KAAMpH,EAA6BzE,EAA7ByE,KAAM7F,EAAuBoB,EAAvBpB,GACzC,IAAKiN,EACH,OAAQpH,KAAMA,GAAQqH,OAAOlN,IAAO,aAEtC,IAAMmN,EAAQF,EAAKG,MAAML,GACzB,OAAKI,GAIHE,cAAeF,EAAM,GACrBG,YAAaH,EAAM,GACnBI,KAAMJ,EAAM,GACZtH,KAAMsH,EAAM,GACZK,UAAWL,EAAM,KAPTI,KAAMN,GAWX,SAASQ,EAAT7L,GAA8C,IAArBqL,EAAqBrL,EAArBqL,KAC9B,IAAKA,EAAM,MAAO,GAClB,IAAME,EAAQF,EAAKG,MAAML,GACzB,OAAOI,EAAQA,EAAM,GAAK,yHC1BfO,EAAmB,SAEzB,SAASC,EAAU9N,EAAc+N,EAAiCC,GAEvE,IAAMC,EAAa5N,OAAA6N,EAAA,OAAA7N,CAAO0N,EAAS1N,OAAA6N,EAAA,KAAA7N,CAAK2N,GAAS,SAAU,OAAQ,QACnE,GAAsB,SAAlBA,EAAOA,OAAmB,CAC5B,IAAMG,EAAO9N,OAAA+N,EAAA,EAAA/N,CAAoBL,EAAOgO,EAAOK,KAAML,EAAOM,IACtDC,IAAuBJ,GAAOA,EAAKhH,OAAS0G,EAE9CG,EAAOQ,UAAYD,GACrBN,EAAW7F,KAAK4F,GAGpB,OAAOC,EAGF,SAASQ,EAAazO,EAAc+N,GAAiC,IAAArG,GAAA,EAAAC,GAAA,EAAAC,OAAA5C,EAAA,IAC1E,QAAA6C,EAAAC,EAAqBiG,EAArBhG,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8B,KAAnBsG,EAAmBnG,EAAAM,MAC5B,GAAsB,SAAlB6F,EAAOA,OAAmB,CAC5B,IAAMU,EAAW1O,EAAMuG,MAAMyH,EAAOK,MAC9BM,EAAS3O,EAAMuG,MAAMyH,EAAOM,IAClC,IAAKI,IAAaC,EAAQ,CACxB3O,EAAM4O,OAAOxG,MAAMyG,+DAAiEb,WACpF,SAGF,IAAIG,EAAO9N,OAAA+N,EAAA,EAAA/N,CAAoBL,EAAOgO,EAAOK,KAAML,EAAOM,IACrDH,IACHA,EAAO9N,OAAA+N,EAAA,EAAA/N,CAAQL,GACbqO,KAAML,EAAOK,KACbC,GAAIN,EAAOM,GACXE,QAASR,EAAOQ,QAChBrH,KAAM0G,KAGVxN,OAAA+N,EAAA,EAAA/N,CAAWL,EAAOmO,EAAMH,EAAOQ,WAnBuC,MAAAjG,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAI,EAAAU,QAAAV,EAAAU,SAAA,WAAAb,EAAA,MAAAC,6uBCzB7DkH,6EAAf,SAAAC,EACE/O,EACAC,EACA+O,EACAtB,EACAuB,GALF,IAAAC,EAAAC,EAAAzH,EAAAC,EAAAC,EAAAE,EAAAD,EAAAuH,EAAA7H,EAAA,OAAA8H,EAAAlO,EAAAmO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtH,MAAA,UAOQiH,EAPR5G,EAO0BoF,GAP1BhI,QAOgCzF,EAAKE,KAC/BF,EAAKE,KAAO6O,EARlB,CAAAO,EAAAtH,KAAA,eAAAsH,EAAAE,OAAA,UAQgCP,IARhC,OAUED,EAAQhP,EAAKE,KAAM,EACbgP,KAGFlP,EAAKmD,SAAS+B,QAAQ6J,IAAS,GACjCG,EAAM/G,KAANE,EAAe4G,GAAfxJ,QAA4BsJ,KAfhCtH,GAAA,EAAAC,GAAA,EAAAC,OAAA5C,EAAAuK,EAAAC,KAAA,EAAA1H,EAkBwB7H,EAAKmD,SAlB7B2E,OAAAC,YAAA,WAAAN,GAAAG,EAAAC,EAAAG,QAAAC,KAAA,CAAAqH,EAAAtH,KAAA,YAkBamH,EAlBbvH,EAAAM,OAmBQ8G,EAAQG,GAnBhB,CAAAG,EAAAtH,KAAA,gBAAAsH,EAAAE,OAAA,0BAoBQL,IAAYJ,EApBpB,CAAAO,EAAAtH,KAAA,gBAAAsH,EAAAE,OAAA,8BAAAF,EAAAtH,KAAA,GAqByB6G,EAAa9O,EAAOK,OAAAM,EAAA,EAAAN,CAAQL,EAAOoP,GAAUJ,EAAME,EAAaD,GArBzF,eAqBU1H,EArBVgI,EAAAG,MAsBe3K,OAAS,GAClBoK,EAAM/G,KAANC,MAAA8G,EAAA7G,EAAcf,IAvBpBgI,EAAAtH,KAAA,GAyBUjI,EAAM2P,OAzBhB,QAAAjI,GAAA,EAAA6H,EAAAtH,KAAA,iBAAAsH,EAAAtH,KAAA,iBAAAsH,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAAA5H,GAAA,EAAAC,EAAA2H,EAAAK,GAAA,QAAAL,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAA9H,GAAA,MAAAI,EAAAU,QAAAV,EAAAU,SAAA,WAAA+G,EAAAC,KAAA,IAAA7H,EAAA,CAAA4H,EAAAtH,KAAA,eAAAL,EAAA,eAAA2H,EAAAM,OAAA,mBAAAN,EAAAM,OAAA,mBAAAN,EAAAE,OAAA,SA2BSN,GA3BT,yBAAAI,EAAAO,SAAAf,EAAArG,OAAA,qFA8BO,SAAAqH,EAA0B/P,EAAc0O,EAAgBC,GAAxD,OAAAU,EAAAlO,EAAAmO,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAA/H,MAAA,cAAA+H,EAAAP,OAAA,SACEX,EAAa9O,EAAO0O,EAAUC,EAAOxO,WADvC,wBAAA6P,EAAAF,SAAAC,EAAArH,gCC1BP,IA0BAuH,EAAe5P,OAAAsC,EAAA,WAAAtC,CA1BA,SAAAU,GAAA,OACb6B,MACEsN,WAAYnP,EAAMoP,QAAQC,MAAMC,KAChCpP,MAAOF,EAAMoP,QAAQC,MAAME,aAC3BC,QAAS,GACThG,QAAS,OACTiG,cAAe,SACfC,cAAe,GAEjBzE,MACE0E,eAAgB,KAgBpB,CAZiB,SAAAnP,GAAuC,IAArCE,EAAqCF,EAArCE,QAAS2O,EAA4B7O,EAA5B6O,MAAOhN,EAAqB7B,EAArB6B,SAEjC,YADiB4B,IAAb5B,IAAwBA,EAAWiK,OAAO+C,IAE5C1O,EAAA,qBAAKY,UAAWb,EAAQmB,MACtBlB,EAAA,cAAC6B,EAAA,GAAKjB,UAAWb,EAAQuK,MAAzB,SACAtK,EAAA,sBAAMY,UAAWb,EAAQkP,OACtBjP,EAAA,eAAqB0B,GAAYA,EAAWiK,OAAOjK,oxBCD5D,IAqCMwN,qRACJhM,OACEM,UAAU,+DAEH,IAAAuD,EAAAC,KAAAC,EAC6DD,KAAKE,MAAlEnH,EADAkH,EACAlH,QAASa,EADTqG,EACSrG,UAAWd,EADpBmH,EACoBnH,UAAWxB,EAD/B2I,EAC+B3I,MAAOC,EADtC0I,EACsC1I,KAAMkO,EAD5CxF,EAC4CwF,KAAM0C,EADlDlI,EACkDkI,QAClD3L,EAAYwD,KAAK9D,MAAjBM,SAEP,OACExD,EAAA,qBAAKY,UAAWsB,IAAWtB,EAAWb,EAAQmB,OAC5ClB,EAAA,cAAC6B,EAAA,GAAKjB,UAAWb,EAAQqP,MACvBpP,EAAA,cAAC6B,EAAA,EAAD,KACE7B,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,WAAW1I,QAAA,GAC7BxC,EAAA,cAACoC,EAAA,GAAS7D,KAAMA,EAAM8D,aAAA,EAAYC,SAAA,KAEpCtC,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,cAClBlL,EAAA,cAACoC,EAAA,GAAS7D,KAAMA,EAAM8Q,aAAA,KAExBrP,EAAA,cAAC6B,EAAA,GAAWtC,MAAM,iBAChBS,EAAA,cAAC0C,EAAA,GAAS5C,UAAWA,EAAWxB,MAAOA,EAAOC,KAAMA,MAGxDyB,EAAA,cAAC6B,EAAA,GAAYjB,UAAWb,EAAQoP,QAASG,sBAAA,GACtCH,EACDnP,EAAA,cAAC6B,EAAA,GACCjB,UAAWsB,IAAWnC,EAAQ6D,OAAQJ,GAAYzD,EAAQwP,YAC1DlO,QAAS,kBAAM0F,EAAKa,UAAUpE,UAAWA,MAEzCxD,EAAA,cAAC6B,EAAA,EAAD,sBAGJ7B,EAAA,cAAC6B,EAAA,GAAS2N,GAAIhM,GACZxD,EAAA,cAAC6B,EAAA,EAAD,KACE7B,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,UAAU3L,MAAM,iBAApC,QAGAS,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,QAAQC,cAAA,GACzB5M,EAAK+F,MAERtE,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,UAAU3L,MAAM,iBAApC,MAGAS,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,QAAQC,cAAA,GACzBQ,OAAOpN,EAAKE,KAEdgO,GACCzM,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,UAAU3L,MAAM,iBAApC,aAGAS,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,QAAQC,cAAA,GACzBsB,EAAKhH,MAERzF,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,UAAU3L,MAAM,iBAApC,aAGAS,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,QAAQC,cAAA,GACzBsB,EAAKnI,MAAQ,qNAzDXtE,EAAA,eAqEvByP,EAAe9Q,OAAAsC,EAAA,WAAAtC,CA1GA,SAAAU,GAAA,OACb6B,MACE2H,QAAS,OACTN,SAAU,WACVO,cAAe,SACf4G,WAAY,EACZ1G,SAAU,EACVD,eAAgB,WAElBqG,MACEO,aAAc,GACdpH,SAAU,YAEZqH,YACErH,SAAU,WACVsH,MAAO,GACPC,IAAK,IAEPlM,WACEmM,UAAW,eACXC,WAAY3Q,EAAM4Q,YAAYC,OAAO,aACnCC,SAAU9Q,EAAM4Q,YAAYE,SAASC,WAEvCC,WAAY,UACXhR,EAAMiR,YAAYC,GAAG,SACpBC,aAAc,mGAGlBjB,YACEQ,UAAW,8BA6Ef,CAAkCb,+vBCzHlC,IAIMuB,kOACK,IAAAxJ,EACqCD,KAAKE,MAA1CnH,EADAkH,EACAlH,QAASa,EADTqG,EACSrG,UAAW6L,EADpBxF,EACoBwF,KAAMpL,EAD1B4F,EAC0B5F,QAEjC,OACErB,EAAA,cAAC6B,EAAA,GACC6O,MAAA,GAAA1M,OAAUyI,EAAKK,QAAU,SAAW,OAApC,6BACA6D,sBAAA,EACAC,UAAU,MACVC,WAAY,KAEZ7Q,EAAA,cAAC6B,EAAA,GACCjB,UAAWsB,IAAWtB,EAAWb,EAAQmB,MACzCsH,aAAW,SACXjJ,MAAOkN,EAAKK,QAAU,YAAc,UACpCzL,QAASA,GAETrB,EAAA,cAAC6B,EAAA,EAAD,KAAO4K,EAAKK,QAAU,WAAa,sNAjBhB9M,EAAA,eAwB7B8Q,EAAenS,OAAAsC,EAAA,WAAAtC,CA5BA,SAAAU,GAAA,OACb6B,UA2BF,CAAkCuP,mBCWlC,IAAAM,EAAepS,OAAAsC,EAAA,WAAAtC,CAhCA,SAAAU,GAAA,OACb6B,QACA2D,OACEgE,QAAS,OACTC,cAAe,OAEjBvK,MACEgJ,MAAO,IACPiJ,YAAa,GACbjI,SAAU,YAEZyI,MACEzI,SAAU,WACVsH,MAAO,GACPC,IAAK,KAkBT,CAdA,SAAAjQ,GAAqF,IAAjEvB,EAAiEuB,EAAjEvB,MAAO2S,EAA0DpR,EAA1DoR,MAAOC,EAAmDrR,EAAnDqR,QAAS7P,EAA0CxB,EAA1CwB,QAASC,EAAiCzB,EAAjCyB,MAAgBF,GAAiBvB,EAA1BE,QAA0BF,EAAjBuB,SAClE,OACEpB,EAAA,qBAAKsB,MAAOA,GACVtB,EAAA,cAAC6B,EAAA,GAASC,OAAA,EAAME,mBAAmB,MAAMC,QAAA,EAAOZ,QAASA,EAASU,gBAAA,GAChE/B,EAAA,cAAC6B,EAAA,GACCM,QAAS+O,EAAQ7N,OAASrD,EAAA,cAACoC,EAAA,GAAS7D,KAAMI,OAAAM,EAAA,EAAAN,CAAQL,EAAO4S,EAAQ,MAAU,SAC3EzO,UAAA,GAAAuB,OAAciN,EAAM5N,OAAS,EAA7B,eACAd,wBAAyBC,QAAQ,EAAMjD,MAAO6B,EAAU,YAAc,8WC+BhF,IAAA+P,EAAexS,OAAAsC,EAAA,WAAAtC,CAtDA,SAAAU,GAAA,OACb6B,MACEqH,SAAU,YAEZnD,MACE6D,QAAS,KAiDb,CA7CA,SAAoB/B,GAAc,IACzBnH,EAAqFmH,EAArFnH,QAASa,EAA4EsG,EAA5EtG,UAAWtC,EAAiE4I,EAAjE5I,MAAO8S,EAA0DlK,EAA1DkK,OAAQpE,EAAkD9F,EAAlD8F,SAAUC,EAAwC/F,EAAxC+F,OAAQoE,EAAgCnK,EAAhCmK,cAAeC,EAAiBpK,EAAjBoK,cACrEC,GAAWvE,EAASvO,GAAIwO,EAAOxO,IAC/B+S,EAAcJ,EAAOzO,IAAI,SAAAsO,GAC7B,IAAMC,EAAUvS,OAAA6G,EAAA,WAAA7G,CAAWsS,EAAOM,GAElC,OADAA,EAAQ7K,KAARC,MAAA4K,EAAAE,EAAgBP,KACRA,UAASD,WAGnB,OACEjR,EAAA,qBAAKY,UAAWsB,IAAWtB,EAAWb,EAAQmB,OAC5ClB,EAAA,cAACsH,EAAA,EAAD,KACG,SAAAzH,GAAA,IAAE0H,EAAF1H,EAAE0H,MAAOC,EAAT3H,EAAS2H,OAAT,OACCxH,EAAA,cAACsH,EAAA,GACC1G,UAAWb,EAAQqF,KACnBmC,MAAOA,EACPC,OAAQA,EACRC,SAAU+J,EAAYnO,OACtBqE,UAAW,GACXC,YAAa,SAAAtH,GAAoB,IAAlBwC,EAAkBxC,EAAlBwC,MAAOvB,EAAWjB,EAAXiB,MAAWoQ,EACNF,EAAY3O,GAA9BoO,EADwBS,EACxBT,MAAOC,EADiBQ,EACjBR,QACd,OACElR,EAAA,cAAC+Q,GACCvS,IAAKqE,EACLvE,MAAOA,EACP2S,MAAOA,EACPC,QAASA,EACT7P,QAAS,kBAAMiQ,EAAcL,IAC7B3P,MAAOA,EACPF,QAASiQ,EAAcM,MAAM,SAAClT,EAAIoE,GAAL,OAAeoO,EAAMpO,KAAWpE,OAInEqJ,eAAgB,kBACd9H,EAAA,cAACqK,EAAA,GAASC,KAAMtK,EAAA,cAAC6B,EAAA,EAAD,kBAAhB,kzBCjCd,IAkCM+P,qRACJ1O,OACEmO,cAAe,QAGjBQ,sBAAwBlT,OAAA+F,EAAA,eAAA/F,CACtB,SAAAiG,GAAA,OAAKA,EAAEtG,OACP,SAAAsG,GAAA,OAAKA,EAAEoI,UACP,SAAApI,GAAA,OAAKA,EAAEqI,QACP,SAAC3O,EAAO0O,EAAUC,GAChB,OAAKD,GAAaC,ENzCxB,SAAA6E,EAAAC,EAAAC,GAAA,OAAAC,EAAAtL,MAAAK,KAAA5D,WM0Ca8O,CAAW5T,EAAO0O,EAAUC,GADF,SASrCkF,kCAyBAC,oBAAsB,WAAM,IAAAnL,EACgDhC,EAAKiC,MAAxEpH,EADmBmH,EACnBnH,UAAWxB,EADQ2I,EACR3I,MAAO+T,EADCpL,EACDoL,YAAaC,EADZrL,EACYqL,iBAAkBC,EAD9BtL,EAC8BsL,eACjDlB,EAAiBpM,EAAK/B,MAAtBmO,cACP,IAAKA,EAAe,OAAO,KAC3B,IAAMxM,EAAQlG,OAAAM,EAAA,EAAAN,CAASL,EAAO+S,GAE9B,OAAOxM,EAAMlC,IAAI,SAACpE,EAAYsE,GAC5B,IAAM2P,EAAoB,IAAV3P,EACV4P,EAAS5P,IAAUgC,EAAMxB,OAAS,EACxC,GAAImP,EAAS,OAAO,KACpB,IAAME,EAAW7N,EAAMhC,EAAQ,GACzB4J,EAAO9N,OAAAM,EAAA,EAAAN,CAAoBL,EAAOoU,EAASjU,GAAIF,EAAKE,MACxDkO,KAAM+F,EAASjU,GACfmO,GAAIrO,EAAKE,GACTgH,KAAM,GACNqH,SAAS,GAGX,OACE9M,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACyP,GACC3P,UAAWA,EACXxB,MAAOA,EACPC,KAAMA,EACNkO,KAAMA,EACN0C,QACEnP,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC8Q,GACCrE,KAAMA,EACNpL,QAAS,kBACPgR,GACE/F,OAAQ,OACRK,KAAMF,EAAKE,KACXC,GAAIH,EAAKG,GACTE,SAAUL,EAAKK,aAIrB9M,EAAA,cAAC6B,EAAA,GACC6O,MAAM,wBACNC,sBAAA,EACAE,WAAY,IACZD,UAAU,OAEV5Q,EAAA,cAAC6B,EAAA,GAAWR,QAAS,kBAAMiR,EAAiB/T,EAAKE,MAC/CuB,EAAA,cAAC6B,EAAA,EAAD,8BAGF4Q,GACAzS,EAAA,cAAC6B,EAAA,GACC6O,MAAM,uBACNC,sBAAA,EACAE,WAAY,IACZD,UAAU,OAEV5Q,EAAA,cAAC6B,EAAA,GAAWR,QAAS,kBAAMkR,EAAehU,EAAKE,MAC7CuB,EAAA,cAAC6B,EAAA,EAAD,yCAYpB8Q,aAAe,SAAAvB,GAAU,IAAApJ,EACoB/C,EAAKiC,MAAzC5I,EADgB0J,EAChB1J,MAAO0O,EADShF,EACTgF,SAAUC,EADDjF,EACCiF,OAAQlN,EADTiI,EACSjI,QACzBsR,EAAiBpM,EAAK/B,MAAtBmO,cACP,OAAKA,GAAkBrE,GAAaC,EAElCjN,EAAA,cAACmR,GACCvQ,UAAWb,EAAQ6S,WACnBtU,MAAOA,EACP0O,SAAUA,EACVC,OAAQA,EACRmE,OAAQA,EACRC,cAAeA,EACfC,cAAe,SAAAL,GAAA,OAAShM,EAAK2C,UAAUyJ,cAAeJ,OATP,6EAnGnDjK,KAAK6L,kEAIYC,GAAW,IAAA/L,EAAAC,KACtB+L,EAAmB/L,KAAKE,MAAMpH,YAAcgT,EAAUhT,UADhCiL,EAEuB/D,KAAKE,MAAvC8L,EAFWjI,EAErBiC,SAA+BiG,EAFVlI,EAEEkC,OACbiG,EAA4BJ,EAAtC9F,SAA4BmG,EAAUL,EAAlB7F,OACrBmG,GACHJ,GAAeA,EAAYvU,OAASyU,GAAYA,EAASzU,MACzDwU,GAAaA,EAAUxU,OAAS0U,GAAUA,EAAO1U,IACpD,GAAIsU,GAAoBK,EAAiB,CAGvC,IAAMC,EAAgBrM,KAAK6K,sBAAsB7K,KAAKE,OACtDF,KAAKY,UACHyJ,cAAe,OAEjBrK,KAAKmL,yBAA2BkB,EAC5BL,GAAeC,GAAaI,GAC9BA,EAAcxU,KAAK,SAAAuS,GACbrK,EAAKoL,2BAA6BkB,GACtCtM,EAAKa,UAAUyJ,cAAeD,EAAO,KAAO4B,EAAYvU,GAAIwU,EAAUxU,0CA2FrE,IAAAsJ,EAAAf,KAAAsM,EAC0EtM,KAAKE,MAA/EtG,EADA0S,EACA1S,UAAWb,EADXuT,EACWvT,QAASD,EADpBwT,EACoBxT,UAAWxB,EAD/BgV,EAC+BhV,MAAO0O,EADtCsG,EACsCtG,SAAUC,EADhDqG,EACgDrG,OAAQsF,EADxDe,EACwDf,eACzDc,EAAgBrM,KAAK6K,sBAAsB7K,KAAKE,OAEtD,OACElH,EAAA,qBAAKY,UAAWsB,IAAWtB,EAAWb,EAAQmB,OAC5ClB,EAAA,qBAAKY,UAAWb,EAAQqR,QACtBpR,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,YAApB,qBACAlL,EAAA,cAAC6B,EAAA,GAAWqJ,QAAQ,aAAaC,cAAA,GAAjC,uIAIAnL,EAAA,cAACC,EAAA,GACCC,QAASmT,EACTxU,KAAM,SAAAuS,GAAA,OAAUrJ,EAAK4K,aAAavB,IAClCmC,MAAO,SAAA7E,GAAA,OAAS1O,EAAA,cAACuO,EAAD,KAAWG,IAC3B3N,QAASf,EAAA,cAAC6B,EAAA,GAAejB,UAAWb,EAAQ2I,kBAGhD1I,EAAA,qBAAKY,UAAWb,EAAQsR,eACrBrE,GACChN,EAAA,cAACyP,GACC3P,UAAWA,EACXxB,MAAOA,EACPC,KAAMyO,EACNmC,QACEnC,IAAaC,GACXjN,EAAA,cAAC6B,EAAA,GACC6O,MAAM,uBACNC,sBAAA,EACAE,WAAY,IACZD,UAAU,OAEV5Q,EAAA,cAAC6B,EAAA,GAAWR,QAAS,kBAAMkR,EAAevF,EAASvO,MACjDuB,EAAA,cAAC6B,EAAA,EAAD,kCAOZ7B,EAAA,qBAAKY,UAAWb,EAAQyT,qBAAsBxM,KAAKoL,qOA1KhCpS,EAAA,eAiL7Bb,EAAA,EAAeR,OAAAsC,EAAA,WAAAtC,CAnNA,SAAAU,GAAA,OACb6B,MACE2H,QAAS,OACTN,SAAU,WACVO,cAAe,MACfC,eAAgB,WAGlBqI,QACE7J,MAAO,IACPyB,SAAU,GACVH,QAAS,OACTC,cAAe,SACfC,eAAgB,UAChByH,YAAa,IAEfoC,YACE5J,SAAU,GAEZqI,eACExI,QAAS,OACTC,cAAe,SACfE,SAAU,EACVT,SAAU,WACVhB,MAAO,KAETiM,qBACEC,UAAW,QAEb/K,cACE6C,UAAW,MAqLf,CAAkCqG,63BC5NlC,IAIM8B,qRACJC,iBAAmBhV,OAAAiV,EAAA,eAAAjV,CAAe,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OAAO,SAAAA,GAAA,OAASK,OAAAkV,EAAA,EAAAlV,CAAYL,OAC1EwV,YAAc,kBAAM7O,EAAK0O,iBAAiB1O,EAAK/B,MAAO+B,EAAKiC,UAE3D6M,kBAAoBpV,OAAAiV,EAAA,eAAAjV,CAClB,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OACZ,SAAAA,GAAA,OAASK,OAAAqV,EAAA,EAAArV,CAAoBL,EAAOK,OAAAkV,EAAA,EAAAlV,CAAYL,QAElD2V,aAAe,kBAAMhP,EAAK8O,kBAAkB9O,EAAK/B,MAAO+B,EAAKiC,UAE7DgN,4BAA8BvV,OAAAiV,EAAA,eAAAjV,CAC5B,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OACZ,SAACqG,EAAGC,GAAJ,OAAUA,EAAEqI,QACZ,SAAC3O,EAAO2O,GACN,OAAKA,EACEtO,OAAAkV,EAAA,EAAAlV,CAASL,EAAO2O,EAAOvL,iBAGlCyS,uBAAyB,kBAAMlP,EAAKiP,4BAA4BjP,EAAK/B,MAAO+B,EAAKiC,UAEjFkN,sBAAwBzV,OAAAiV,EAAA,eAAAjV,CACtB,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OACZ,SAACqG,EAAGC,GAAJ,OAAUA,EAAEqI,QACZ,SAAC3O,EAAO0O,GACN,OAAKA,EACErO,OAAAqV,EAAA,EAAArV,CAAoBL,EAAO0O,GAAUnO,KAAK,SAAAwV,GAAA,OAAO1V,OAAAkV,EAAA,EAAAlV,CAASL,EAAO+V,YAG5EC,iBAAmB,kBAAMrP,EAAKmP,sBAAsBnP,EAAK/B,MAAO+B,EAAKiC,UAErEqN,uBAAyB5V,OAAAiV,EAAA,eAAAjV,CACvB,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OACZ2G,EAAKmP,sBAFkB,iBAAAvU,KAAA2U,EAAA/U,EAAAgV,KAGvB,SAAApH,EAAO/O,EAAOuG,GAAd,OAAA2P,EAAA/U,EAAAmO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtH,MAAA,cAAAsH,EAAAK,GACS8F,EAAA,EADTnG,EAAA6G,GAC6BpW,EAD7BuP,EAAAtH,KAAA,EAC0C1B,EAD1C,cAAAgJ,EAAA8G,GAAA9G,EAAAG,KAAAH,EAAAE,OAAA,YAAAF,EAAAK,IAAAL,EAAA6G,GAAA7G,EAAA8G,KAAA,wBAAA9G,EAAAO,SAAAf,EAAArG,0QAHuB,gBAAA4N,EAAAC,GAAA,OAAAhV,EAAA8G,MAAAK,KAAA5D,YAAA,MAOzB0R,kBAAoB,kBAAM7P,EAAKsP,uBAAuBtP,EAAK/B,MAAO+B,EAAKiC,UAEvEoC,OACElJ,KACEoJ,SAAUvE,EAAK6O,YACfhJ,YAAa,iBAAM,aACnBM,WAAY,iBAAM,6BAClBhE,YAAa,iBAAM,kBAErB2N,gBACEvL,SAAUvE,EAAKkP,uBACfrJ,YAAa,iBAAM,mBACnBM,WAAY,WAAM,IACT6B,EAAUhI,EAAKiC,MAAf+F,OACP,OAAKA,EAEH+H,EAAA,cAAAA,EAAA,iDACkCA,EAAA,cAACC,EAAA,GAAS1W,KAAM0O,KAHhC,MAOtB7F,YAAa,iBAAM,sBAErB1F,UACE8H,SAAUvE,EAAKqP,iBACfxJ,YAAa,iBAAM,gBACnBM,WAAY,WAAM,IACT4B,EAAY/H,EAAKiC,MAAjB8F,SACP,OAAKA,EAEHgI,EAAA,cAAAA,EAAA,0CAC2BA,EAAA,cAACC,EAAA,GAAS1W,KAAMyO,KAHvB,MAOxB5F,YAAa,iBAAM,sBAErB8N,YACE1L,SAAUvE,EAAK6P,kBACfhK,YAAa,iBAAM,sBACnBM,WAAY,WAAM,IACT4B,EAAY/H,EAAKiC,MAAjB8F,SACP,OAAKA,EAEHgI,EAAA,cAAAA,EAAA,oDACqCA,EAAA,cAACC,EAAA,GAAS1W,KAAMyO,KAHjC,MAOxB5F,YAAa,iBAAM,qBAErB+N,OACE3L,SAAUvE,EAAKgP,aACfnJ,YAAa,iBAAM,gBACnBM,WAAY,iBAAM,mCAClBhE,YAAa,iBAAM,kFAId,IAAAH,EAC8DD,KAAKE,MAAnEnH,EADAkH,EACAlH,QAASa,EADTqG,EACSrG,UAAWqM,EADpBhG,EACoBgG,OAAQnN,EAD5BmH,EAC4BnH,UAAWxB,EADvC2I,EACuC3I,MAAO2L,EAD9ChD,EAC8CgD,aAErD,OACE+K,EAAA,cAACI,EAAA,GACCxU,UAAWyU,IAAWtV,EAAQmB,KAAMN,GACpC0I,MAAOtC,KAAKsC,MACZC,YAAa,WACbzJ,UAAWA,EACXxB,MAAOA,EACP2L,aAAcA,EACdD,SAAUiD,gNA3Ga+H,EAAA,eAiH/B7V,EAAA,EAAeR,OAAA2W,EAAA,WAAA3W,EApHbuC,SAoHF,CAAkCwS,63BCjHlC,IAIM6B,qRACJ5B,iBAAmBhV,OAAAiV,EAAA,eAAAjV,CAAe,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OAAO,SAAAA,GAAA,OAASK,OAAAkV,EAAA,EAAAlV,CAAYL,OAC1EwV,YAAc,kBAAM7O,EAAK0O,iBAAiB1O,EAAK/B,MAAO+B,EAAKiC,UAE3DsO,mBAAqB7W,OAAAiV,EAAA,eAAAjV,CACnB,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OACZ,SAAAA,GAAA,OAASK,OAAAqV,EAAA,EAAArV,CAAqBL,EAAOK,OAAAkV,EAAA,EAAAlV,CAAYL,QAEnDmX,cAAgB,kBAAMxQ,EAAKuQ,mBAAmBvQ,EAAK/B,MAAO+B,EAAKiC,UAE/D6M,kBAAoBpV,OAAAiV,EAAA,eAAAjV,CAClB,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OACZ,SAAAA,GAAA,OAASK,OAAAqV,EAAA,EAAArV,CAAoBL,EAAOK,OAAAkV,EAAA,EAAAlV,CAAYL,QAElD2V,aAAe,kBAAMhP,EAAK8O,kBAAkB9O,EAAK/B,MAAO+B,EAAKiC,UAE7DwO,0BAA4B/W,OAAAiV,EAAA,eAAAjV,CAC1B,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OACZ,SAACqG,EAAGC,GAAJ,OAAUA,EAAEoI,UACZ,SAAC1O,EAAO0O,GACN,OAAKA,EACErO,OAAAkV,EAAA,EAAAlV,CAASL,EAAO0O,EAAS2I,gBAGpCC,qBAAuB,kBAAM3Q,EAAKyQ,0BAA0BzQ,EAAK/B,MAAO+B,EAAKiC,UAE7E2O,oBAAsBlX,OAAAiV,EAAA,eAAAjV,CACpB,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OACZ,SAACqG,EAAGC,GAAJ,OAAUA,EAAEqI,QACZ,SAAC3O,EAAO2O,GACN,OAAKA,EACEtO,OAAAqV,EAAA,EAAArV,CAAmBL,EAAO2O,GAAQpO,KAAK,SAAAwV,GAAA,OAAO1V,OAAAkV,EAAA,EAAAlV,CAASL,EAAO+V,YAGzEyB,eAAiB,kBAAM7Q,EAAK4Q,oBAAoB5Q,EAAK/B,MAAO+B,EAAKiC,UAEjE6O,yBAA2BpX,OAAAiV,EAAA,eAAAjV,CACzB,SAACgG,EAAGC,GAAJ,OAAUA,EAAEtG,OACZ2G,EAAK4Q,oBAFoB,iBAAAhW,KAAA2U,EAAA/U,EAAAgV,KAGzB,SAAApH,EAAO/O,EAAOuG,GAAd,OAAA2P,EAAA/U,EAAAmO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtH,MAAA,cAAAsH,EAAAK,GACS8F,EAAA,EADTnG,EAAA6G,GAC8BpW,EAD9BuP,EAAAtH,KAAA,EAC2C1B,EAD3C,cAAAgJ,EAAA8G,GAAA9G,EAAAG,KAAAH,EAAAE,OAAA,YAAAF,EAAAK,IAAAL,EAAA6G,GAAA7G,EAAA8G,KAAA,wBAAA9G,EAAAO,SAAAf,EAAArG,0QAHyB,gBAAA4N,EAAAC,GAAA,OAAAhV,EAAA8G,MAAAK,KAAA5D,YAAA,MAO3B4S,oBAAsB,kBAAM/Q,EAAK8Q,yBAAyB9Q,EAAK/B,MAAO+B,EAAKiC,UAE3EoC,OACElJ,KACEoJ,SAAUvE,EAAK6O,YACfhJ,YAAa,iBAAM,aACnBM,WAAY,iBAAM,6BAClBhE,YAAa,iBAAM,kBAErB6O,eACEzM,SAAUvE,EAAK2Q,qBACf9K,YAAa,iBAAM,kBACnBM,WAAY,WAAM,IACT4B,EAAY/H,EAAKiC,MAAjB8F,SACP,OAAKA,EAEHgI,EAAA,cAAAA,EAAA,8CAC+BA,EAAA,cAACC,EAAA,GAAS1W,KAAMyO,KAH3B,MAOxB5F,YAAa,iBAAM,qBAErBuO,SACEnM,SAAUvE,EAAK6Q,eACfhL,YAAa,iBAAM,eACnBM,WAAY,WAAM,IACT6B,EAAUhI,EAAKiC,MAAf+F,OACP,OAAKA,EAEH+H,EAAA,cAAAA,EAAA,uCACwBA,EAAA,cAACC,EAAA,GAAS1W,KAAM0O,KAHtB,MAOtB7F,YAAa,iBAAM,qBAErB8O,eACE1M,SAAUvE,EAAK+Q,oBACflL,YAAa,iBAAM,uBACnBM,WAAY,WAAM,IACT6B,EAAUhI,EAAKiC,MAAf+F,OACP,OAAKA,EAEH+H,EAAA,cAAAA,EAAA,8CAC+BA,EAAA,cAACC,EAAA,GAAS1W,KAAM0O,KAH7B,MAOtB7F,YAAa,iBAAM,qBAErB+O,SACE3M,SAAUvE,EAAKwQ,cACf3K,YAAa,iBAAM,iBACnBM,WAAY,iBAAM,qCAClBhE,YAAa,iBAAM,wBAIvBgP,cACEC,WAAYpR,EAAKqE,MAAMlJ,IACvBkW,eAAgBrR,EAAKqE,MAAM6M,QAC3BI,cACE/M,SAAUvE,EAAKgP,aACfnJ,YAAa,iBAAM,gBACnBM,WAAY,iBAAM,mCAClBhE,YAAa,iBAAM,kFAId,IAAAH,EAEwED,KAAKE,MAA7EnH,EAFAkH,EAEAlH,QAASa,EAFTqG,EAESrG,UAAWoM,EAFpB/F,EAEoB+F,SAAUC,EAF9BhG,EAE8BgG,OAAQnN,EAFtCmH,EAEsCnH,UAAWxB,EAFjD2I,EAEiD3I,MAAO2L,EAFxDhD,EAEwDgD,aAE/D,OACE+K,EAAA,cAACI,EAAA,GACCxU,UAAWyU,IAAWtV,EAAQmB,KAAMN,GACpC0I,MAAO0D,GAAYC,EAASjG,KAAKsC,MAAQtC,KAAKoP,aAC9C7M,YAAayD,GAAYC,EAAS,UAAY,aAC9CnN,UAAWA,EACXxB,MAAOA,EACP2L,aAAcA,EACdD,SAAUgD,gNA7HYgI,EAAA,eAmI9B7V,EAAA,EAAeR,OAAA2W,EAAA,WAAA3W,EAtIbuC,SAsIF,CAAkCqU,21BCvIlC,IASMiB,kOACK,IAAAvP,EAC4CD,KAAKE,MAAjDnH,EADAkH,EACAlH,QAASzB,EADT2I,EACS3I,MAAO+N,EADhBpF,EACgBoF,QAASoK,EADzBxP,EACyBwP,gBAC1BC,KACN,OACEC,EAAA,yBACEA,EAAA,cAACC,EAAA,GAAKhW,UAAWb,EAAQqF,MACtBiH,EAAQ1J,IAAI,SAAC2J,EAAQzJ,GACpB,IAAM4J,EAAO9N,OAAAkV,EAAA,EAAAlV,CAAoBL,EAAOgO,EAAOK,KAAML,EAAOM,IAC5D,IAAKH,EAAM,OAAO,KAClB,IAAMO,EAAWrO,OAAAkV,EAAA,EAAAlV,CAAQL,EAAOmO,EAAKE,MAC/BM,EAAStO,OAAAkV,EAAA,EAAAlV,CAAQL,EAAOmO,EAAKG,IAC7BiK,EAAW7J,EAAStB,MAAQsB,EAAS1I,MAAQ0I,EAASvO,GACtDqY,EAASrK,EAAKnI,MAAQ2I,EAAO3I,MAAQ2I,EAAOxO,GAElD,OADAiY,EAAYhQ,KAAZ,WAAA1C,OAA4B8S,EAA5B,YAAA9S,OAA6C6S,EAA7C,MAEEF,EAAA,cAACC,EAAA,GAASpY,IAAKqE,EAAOvE,MAAOA,EAAOgO,OAAQA,GAC1CqK,EAAA,cAACC,EAAA,GACCpO,aAAW,SACX5H,UAAWb,EAAQgX,OACnB1V,QAAS,kBAAMoV,EAAgB9X,OAAAqY,EAAA,QAAArY,CAAQ0N,EAASC,MAEhDqK,EAAA,cAACC,EAAA,EAAD,gBAEFD,EAAA,cAACC,EAAA,GACCzU,QACEwU,EAAA,cAAAA,EAAA,yBACUA,EAAA,uBAAIG,GADd,WACiCH,EAAA,uBAAIE,GADrC,OAKJF,EAAA,cAACC,EAAA,EAAD,SAIc,IAAnBvK,EAAQhJ,QACPsT,EAAA,cAACM,EAAA,GAAS3M,KAAMqM,EAAA,cAACC,EAAA,EAAD,eAAhB,gEAKJD,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,GAAOvV,QAAS,kBAAMoV,QAAvB,iBACCC,EAAYrT,OAAS,EACpBsT,EAAA,cAACO,EAAA,iBAAgBC,KAAMT,EAAYU,KAAK,SACtCT,EAAA,cAACC,EAAA,EAAD,2BAEA,mNA/CYD,EAAA,eAsD1BxX,EAAA,EAAeR,OAAA2W,EAAA,WAAA3W,CA/DA,SAAAU,GAAA,OACb6B,QACAkE,MACEiS,UAAW,OACX5D,UAAW,QAEbsD,YAyDF,CAAkCP,+DC5DlCrX,EAAA,EAAeR,OAAA2Y,EAAA,WAAA3Y,CAtBA,SAAAU,GAAA,OACb6B,MACEsN,WAAYnP,EAAMoP,QAAQC,MAAMC,KAChCpP,MAAOF,EAAMoP,QAAQC,MAAME,aAC3BC,QAAS,oBACThG,QAAS,OACT0O,WAAY,SACZ7H,WAAY,EACZ3G,eAAgB,UAElBuB,MACE0E,eAAgB,KAWpB,CAPiB,SAAAnP,GAAA,IAAEE,EAAFF,EAAEE,QAAS2B,EAAX7B,EAAW6B,SAAX,OACfiV,EAAA,qBAAK/V,UAAWb,EAAQmB,MACtByV,EAAA,cAACa,EAAA,GAAK5W,UAAWb,EAAQuK,MAAzB,SACAqM,EAAA,sBAAM/V,UAAWb,EAAQkP,OAAQvN,oFCIrCvC,EAAA,EAAeR,OAAA2Y,EAAA,WAAA3Y,CArBA,SAAAU,GAAA,OACb6B,MACEsN,WAAYiJ,EAAAhY,EAAOC,KACnBmP,QAAS,oBACThG,QAAS,OACT0O,WAAY,SACZ7H,WAAY,EACZ3G,eAAgB,UAElBuB,MACE0E,eAAgB,KAWpB,CAPmB,SAAAnP,GAAA,IAAEE,EAAFF,EAAEE,QAAS2B,EAAX7B,EAAW6B,SAAX,OACjBiV,EAAA,qBAAK/V,UAAWb,EAAQmB,MACtByV,EAAA,cAACa,EAAA,GAAK5W,UAAWb,EAAQuK,MAAzB,WACAqM,EAAA,sBAAM/V,UAAWb,EAAQkP,OAAQvN,0XCtBrC,SAAsBgW,EAAtB9C,GAAA,OAAA+C,EAAAhR,MAAAK,KAAA5D,4CAAO,SAAAiL,EACLuJ,GADK,IAAAjU,EAAAkU,EAAAzU,UAAA,OAAAoR,EAAA/U,EAAAmO,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAA/H,MAAA,cAEL5C,EAFKkU,EAAAxU,OAAA,QAAAC,IAAAuU,EAAA,GAAAA,EAAA,MAAAvJ,EAAAP,OAAA,SAAA+J,EAAAtD,EAAA/U,EAAAgV,KAAA,SAAApH,IAAA,IAAA/O,EAAAyZ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtS,EAAAC,EAAAC,EAAAE,EAAAD,EAAAoS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtT,EAAAuT,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/R,EAAAgS,EAAA,OAAA1F,EAAA/U,EAAAmO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtH,MAAA,UAOCjI,EAAQK,OAAA+N,EAAA,EAAA/N,GAPToZ,EAQwDpU,EAAtDqU,2BARF,IAAAD,KAAAE,EAQwDtU,EAAzBuU,qBAR/B,IAAAD,KAAAE,EAU+BP,EAA7BQ,cAVF,IAAAD,OAAAE,EAU+BT,EAAhBU,eAVf,IAAAD,QAaDH,EAbC,CAAArK,EAAAtH,KAAA,SAAAP,GAAA,EAAAC,GAAA,EAAAC,OAAA5C,EAAAuK,EAAAC,KAAA,EAAA1H,EAciBgS,EAdjB/R,OAAAC,YAAA,UAAAN,GAAAG,EAAAC,EAAAG,QAAAC,KAAA,CAAAqH,EAAAtH,KAAA,gBAcQgS,EAdRpS,EAAAM,MAeD9H,OAAA+N,EAAA,EAAA/N,CAAQL,GACNG,GAAIE,OAAA+N,EAAA,EAAA/N,CAAU,QAAS4Z,EAAM9Z,IAC7BgH,KAAM8S,EAAM0B,QAAU1B,EAAM0B,OAAOxW,QAAQ,eAAiB,cAAgB,QAC5Ea,KAAMiU,EAAM4B,MAAM,GAClBjb,KAAM,EACNkb,SAAU7B,IApBX1K,EAAAtH,KAAA,GAsBKjI,EAAM2P,OAtBX,QAAAjI,GAAA,EAAA6H,EAAAtH,KAAA,gBAAAsH,EAAAtH,KAAA,iBAAAsH,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAAA5H,GAAA,EAAAC,EAAA2H,EAAAK,GAAA,QAAAL,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAA9H,GAAA,MAAAI,EAAAU,QAAAV,EAAAU,SAAA,WAAA+G,EAAAC,KAAA,IAAA7H,EAAA,CAAA4H,EAAAtH,KAAA,eAAAL,EAAA,eAAA2H,EAAAM,OAAA,mBAAAN,EAAAM,OAAA,YAAAqK,GAAA,EAAAC,GAAA,EAAAC,OAAApV,EAAAuK,EAAAC,KAAA,GAAA6K,EA2BgBL,EA3BhBjS,OAAAC,YAAA,WAAAkS,GAAAI,EAAAD,EAAApS,QAAAC,KAAA,CAAAqH,EAAAtH,KAAA,YA4Bc,OADRsS,EA3BND,EAAAnS,OA4BQhI,GA5BR,CAAAoP,EAAAtH,KAAA,gBAAAsH,EAAAE,OAAA,8BAgCG+K,EAAWD,EAAOvU,KAAKb,QAAQ,OAAS,EACxCsV,EAAcF,EAAOvU,KAAKb,QAAQ,qBAAuB,EACzDgC,EAAOqT,EAAW,SAAWC,EAAc,YAAc,SAC/Dpa,OAAA+N,EAAA,EAAA/N,CAAQL,GACNG,GAAIE,OAAA+N,EAAA,EAAA/N,CAAU,SAAUka,EAAOpa,IAC/BgH,OACAnB,KAAMuU,EAAOvU,KACboH,KAAMoN,OAAWxV,GAAauV,EAAOvU,MAAQ,IAAI+V,QAAQ,QACzDnb,KAAM2Z,EAAO3Z,KACbkb,SAAUvB,IAzCThL,EAAAtH,KAAA,GA2CGjI,EAAM2P,OA3CT,QAAAuK,GAAA,EAAA3K,EAAAtH,KAAA,iBAAAsH,EAAAtH,KAAA,iBAAAsH,EAAAC,KAAA,GAAAD,EAAA6G,GAAA7G,EAAA,UAAA4K,GAAA,EAAAC,EAAA7K,EAAA6G,GAAA,QAAA7G,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAA0K,GAAA,MAAAG,EAAA7R,QAAA6R,EAAA7R,SAAA,WAAA+G,EAAAC,KAAA,IAAA2K,EAAA,CAAA5K,EAAAtH,KAAA,eAAAmS,EAAA,eAAA7K,EAAAM,OAAA,mBAAAN,EAAAM,OAAA,YAAA6K,GAAA,EAAAC,GAAA,EAAAC,OAAA5V,EAAAuK,EAAAC,KAAA,GAAAqL,EA+CgBb,EA/ChBjS,OAAAC,YAAA,WAAA0S,GAAAI,EAAAD,EAAA5S,QAAAC,KAAA,CAAAqH,EAAAtH,KAAA,aA+CMsS,EA/CNO,EAAA3S,OAgDCyR,EAhDD,CAAArK,EAAAtH,KAAA,SAiDD,IAjDC+S,GAAA,EAAAC,GAAA,EAAAC,OAAAlW,EAAAuK,EAAAC,KAAA,GAiDD2L,EAAsBZ,EAAOT,OAA7B/R,OAAAC,cAAAgT,GAAAI,EAAAD,EAAAlT,QAAAC,MAAA8S,GAAA,EAAWK,EAA0BD,EAAAjT,MACnC9H,OAAA+N,EAAA,EAAA/N,CAAQL,GACNqO,KAAMhO,OAAA+N,EAAA,EAAA/N,CAAU,QAASgb,GACzB/M,GAAIjO,OAAA+N,EAAA,EAAA/N,CAAU,SAAUka,EAAOpa,IAC/BgH,KAAM,cACN2U,SAAUvB,IAtDbhL,EAAAtH,KAAA,iBAAAsH,EAAAC,KAAA,GAAAD,EAAA8G,GAAA9G,EAAA,UAAA0L,GAAA,EAAAC,EAAA3L,EAAA8G,GAAA,QAAA9G,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAwL,GAAA,MAAAG,EAAA3S,QAAA2S,EAAA3S,SAAA,WAAA+G,EAAAC,KAAA,IAAAyL,EAAA,CAAA1L,EAAAtH,KAAA,eAAAiT,EAAA,eAAA3L,EAAAM,OAAA,mBAAAN,EAAAM,OAAA,YAAAyL,GAAA,EAAAC,GAAA,EAAAC,OAAAxW,EAAAuK,EAAAC,KAAA,GAAAiM,EA0DkBlB,EAAOyB,QA1DzBjU,OAAAC,YAAA,WAAAsT,GAAAI,EAAAD,EAAAxT,QAAAC,KAAA,CAAAqH,EAAAtH,KAAA,aA0DQ0T,EA1DRD,EAAAvT,MA2DKyB,EAAO+R,EAAO/R,MAAQ,GACL,MAAnB+R,EAAOM,SA5DV,CAAA1M,EAAAtH,KAAA,iBAAAsH,EAAAE,OAAA,8BAgEKmM,EAAQhS,EAAKzE,QAAQ,aAAe,GAAKyE,EAAKzE,QAAQ,SAAW,KAClC,IAAxBuU,EAjEZ,CAAAnK,EAAAtH,KAAA,iBAAAsH,EAAAE,OAAA,yBAoEDpP,OAAA+N,EAAA,EAAA/N,CAAQL,GACNqO,KAAMhO,OAAA+N,EAAA,EAAA/N,CAAU,SAAUsb,EAAOM,UACjC3N,GAAIjO,OAAA+N,EAAA,EAAA/N,CAAU,SAAUka,EAAOpa,IAC/BgH,KAAMyC,EACN5D,KAAM2V,EAAOO,YACbN,QACAE,SAAUH,IA1EX,SAAAL,GAAA,EAAA/L,EAAAtH,KAAA,kBAAAsH,EAAAtH,KAAA,mBAAAsH,EAAAC,KAAA,IAAAD,EAAA4M,GAAA5M,EAAA,UAAAgM,GAAA,EAAAC,EAAAjM,EAAA4M,GAAA,SAAA5M,EAAAC,KAAA,IAAAD,EAAAC,KAAA,IAAA8L,GAAA,MAAAG,EAAAjT,QAAAiT,EAAAjT,SAAA,YAAA+G,EAAAC,KAAA,KAAA+L,EAAA,CAAAhM,EAAAtH,KAAA,gBAAAuT,EAAA,gBAAAjM,EAAAM,OAAA,qBAAAN,EAAAM,OAAA,qBAAAN,EAAAtH,KAAA,IA6EGjI,EAAM2P,OA7ET,SAAA+K,GAAA,EAAAnL,EAAAtH,KAAA,kBAAAsH,EAAAtH,KAAA,mBAAAsH,EAAAC,KAAA,IAAAD,EAAA6M,GAAA7M,EAAA,UAAAoL,GAAA,EAAAC,EAAArL,EAAA6M,GAAA,SAAA7M,EAAAC,KAAA,IAAAD,EAAAC,KAAA,IAAAkL,GAAA,MAAAG,EAAArS,QAAAqS,EAAArS,SAAA,YAAA+G,EAAAC,KAAA,KAAAmL,EAAA,CAAApL,EAAAtH,KAAA,gBAAA2S,EAAA,gBAAArL,EAAAM,OAAA,qBAAAN,EAAAM,OAAA,qBAAAN,EAAAE,OAAA,SA+EEzP,GA/EF,0BAAAuP,EAAAO,SAAAf,EAAArG,OAAA,gJAAA8Q,IAAA,wBAAAxJ,EAAAF,SAAAC,EAAArH,0qDC2CP,IA2DM2T,qRACJzX,OACE+E,SAAS,EACTyG,MAAO,KACP5O,UAAW,KACXxB,MAAO,KACPsc,WAAY,KACZC,SAAU,KACVxO,WACAyO,aAAa,KAGfC,kBAgBAC,qCAAW,SAAA3N,EAAM4N,GAAN,IAAAC,EAAAC,EAAA,OAAA3G,EAAA/U,EAAAmO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtH,MAAA,cACTtB,EAAK2C,UACHK,SAAS,EACTyG,MAAO,KACP5O,UAAW,KACXxB,MAAO,KACPsc,WAAY,KACZC,SAAU,KACVxO,aAROwB,EAAAC,KAAA,EAAAD,EAAAtH,KAAA,EAWY0U,IAXZ,UAYM,QADPC,EAXCrN,EAAAG,MAAA,CAAAH,EAAAtH,KAAA,eAaLtB,EAAK2C,UAAUK,SAAS,IAbnB4F,EAAAE,OAAA,wBAgBPqN,QAAQC,KAAK,cAhBNxN,EAAAtH,KAAA,GAiBa5H,OAAA2c,EAAA,EAAA3c,CAAiBuc,GAjB9B,QAiBD5c,EAjBCuP,EAAAG,KAkBPoN,QAAQG,QAAQ,cAChBH,QAAQI,IAAI,UAAWld,GACvB8c,QAAQK,KAAK,iBAAkBnd,EAAM4O,QACrCjI,EAAK2C,UAAUK,SAAS,EAAO3J,QAAOwB,UAAWxB,IArB1CuP,EAAAtH,KAAA,iBAAAsH,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAuBPuN,QAAQ1M,MAARb,EAAAK,IACAjJ,EAAK2C,UAAUK,SAAS,EAAOyG,aAxBxB,yBAAAb,EAAAO,SAAAf,EAAArG,OAAA,mEA4BX0U,WAAa,SAAArb,EAAAC,GAAwB,IAAtBoL,EAAsBnL,EAAAF,EAAA,MAAAE,EAAAD,EAAA,MAEjC2E,EAAK2C,UAAU8G,MAAO,0DAGxBzJ,EAAK+V,SACH,kBACE,IAAI7a,QAAQ,SAACuJ,EAASiS,GACpBP,QAAQC,KAAK,WACb,IAAMO,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACdV,QAAQG,QAAQ,WAChBH,QAAQC,KAAK,WACb,IAAMH,EAAOa,KAAKC,MAAOJ,EAAO/V,QAChCuV,QAAQG,QAAQ,WAChB7R,EAAQwR,IAEVU,EAAOK,QAAU,WACfb,QAAQG,QAAQ,WAEhBI,EAAO,4BAETC,EAAOM,mBAAmBxQ,UAKlCyQ,kBAAoB,WAClBlX,EAAK2C,UAAUkT,aAAc7V,EAAK/B,MAAM4X,iBAG1CsB,cAAgB,SAAA/P,GAAW,IAAA9B,EACEtF,EAAK/B,MAAzBpD,EADkByK,EAClBzK,UAAWxB,EADOiM,EACPjM,MAClB,IAAKA,IAAUwB,EAAW,MAAM,IAAIuc,MAAM,0BAC1C,IAAMC,EAAW3d,OAAA4d,EAAA,EAAA5d,CAAWmB,GAExBxB,IAAUwB,GACZnB,OAAA4d,EAAA,EAAA5d,CAAWL,GAEbK,OAAA6d,EAAA,EAAA7d,CAAa2d,EAAUjQ,GACvBpH,EAAK2C,UAAUtJ,MAAOge,EAAUjQ,QAASA,OAG3CD,UAAY,SAACE,GAAmB,IAAAmQ,EACLxX,EAAK/B,MAAvB5E,EADuBme,EACvBne,MAAO+N,EADgBoQ,EAChBpQ,QACd,IAAK/N,EAAO,MAAM,IAAI+d,MAAM,0BAC5BpX,EAAKmX,cAAczd,OAAA6d,EAAA,EAAA7d,CAAUL,EAAO+N,EAASC,OAG/CoQ,oBAAsB,WACpBzX,EAAK2C,UAAUgT,WAAY,KAAMC,SAAU,UAG7CtZ,eAAiB,SAACqZ,GAAuB,IAAA+B,EACb1X,EAAK/B,MAAxB5E,EADgCqe,EAChCre,MAAOuc,EADyB8B,EACzB9B,SACVvc,GAAO8c,QAAQI,IAAI,qBAAsB7c,OAAA4d,EAAA,EAAA5d,CAAQL,EAAOsc,IAC5D3V,EAAK2C,UAAUgT,aAAYC,SAAUA,GAAYD,OAGnDpZ,aAAe,SAACqZ,GAAqB,IAC5Bvc,EAAS2G,EAAK/B,MAAd5E,MACHA,GAAO8c,QAAQI,IAAI,mBAAoB7c,OAAA4d,EAAA,EAAA5d,CAAQL,EAAOuc,IAC1D5V,EAAK2C,UAAUiT,uKAvGXlc,QAAAie,SAAA,aAAAC,WAAA,sBAAYC,iBACd9V,KAAKgU,SAALlD,EAAAtD,EAAA/U,EAAAgV,KAAc,SAAApG,IAAA,IAAAxI,EAAAqV,EAAA,OAAA1G,EAAA/U,EAAAmO,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAA/H,MAAA,cACZ6U,QAAQC,KAAK,WADD/M,EAAA/H,KAAA,EAESwW,kBAAWpe,QAAAie,SAAA,aAAAC,WAAA,sBAAYC,iBAAmB,KAFnD,cAENjX,EAFMyI,EAAAN,KAGZoN,QAAQG,QAAQ,WAChBH,QAAQC,KAAK,WAJD/M,EAAA/H,KAAA,EAKOV,EAAOqV,OALd,cAKNA,EALM5M,EAAAN,KAMZoN,QAAQG,QAAQ,WANJjN,EAAAP,OAAA,SAOLmN,GAPK,yBAAA5M,EAAAF,SAAAC,EAAArH,yIAyGJ,IAAAgW,EACqChW,KAAK9D,MAA/CpD,EADKkd,EACLld,UAAWxB,EADN0e,EACM1e,MAAOsc,EADboC,EACapC,WAAYC,EADzBmC,EACyBnC,SAC9B9a,EAAWiH,KAAKE,MAAhBnH,QACP,IAAKzB,IAAUwB,EAAW,OAAO,KACjC,IAAMkN,EAAWrO,OAAA4d,EAAA,EAAA5d,CAAYL,EAAOsc,GAC9B3N,EAAStO,OAAA4d,EAAA,EAAA5d,CAAYL,EAAOuc,GAClC,OACE7F,EAAA,qBAAKpU,UAAWyU,IAAWtV,EAAQkd,UAAWld,EAAQmd,QACpDlI,EAAA,cAACmI,EAAA,GACCvc,UAAWb,EAAQqd,gBACnBtd,UAAWA,EACXxB,MAAOA,EACP2O,OAAQA,EACRD,SAAUA,EACV/C,aAAcjD,KAAKzF,iBAEpByL,GAAYC,EACX+H,EAAA,cAACqI,EAAA,GACCzc,UAAWb,EAAQud,cACnBxd,UAAWA,EACXxB,MAAOA,EACP0O,SAAUA,EACVC,OAAQA,EACRqF,iBAAkBtL,KAAKzF,eACvBgR,eAAgBvL,KAAKxF,aACrB6Q,YAAarL,KAAKoF,YAElB,KACHY,EACCgI,EAAA,cAACuI,EAAA,GACC3c,UAAWb,EAAQyd,iBACnB1d,UAAWA,EACXxB,MAAOA,EACP2O,OAAQA,EACRD,SAAUA,EACV/C,aAAcjD,KAAKxF,eAEnB,uCAKD,IAAAuF,EAAAC,KAAAyW,EAC2DzW,KAAK9D,MAAhE+E,EADAwV,EACAxV,QAASyG,EADT+O,EACS/O,MAAOpQ,EADhBmf,EACgBnf,MAAOwc,EADvB2C,EACuB3C,YAAazO,EADpCoR,EACoCpR,QAASuO,EAD7C6C,EAC6C7C,WAC7C7a,EAAWiH,KAAKE,MAAhBnH,QACP,OACEiV,EAAA,cAAC0I,EAAA,GACCC,UAAU,EACVC,gBAAgB,GAChBC,gBAAgB,GAChBC,OAAO,QACPC,OAAQ/W,KAAK0U,WACb9a,UAAWb,EAAQgb,SACnBiD,cAAA,EACAC,IAAK,SAAA1f,GACHwI,EAAKgU,SAAWxc,IAGlByW,EAAA,qBAAKpU,UAAWb,EAAQmB,MACtB8T,EAAA,cAACkJ,EAAA,EAAD,MACAlJ,EAAA,cAACkJ,EAAA,GAAO3V,SAAS,UACfyM,EAAA,cAACkJ,EAAA,GAAQhT,QAAQ,UAAUtK,UAAWb,EAAQkd,YAC1ChV,GACA+M,EAAA,cAACkJ,EAAA,GAAO3e,MAAM,UAAU8B,QAAS,kBAAM0F,EAAKgU,SAASrQ,SAArD,cAIDpM,GACC0W,EAAA,cAACkJ,EAAA,GAAO3e,MAAM,UAAU8B,QAAS2F,KAAKmV,mBAAtC,cAEG9P,EAAQhJ,OAAR,KAAAW,OAAsBqI,EAAQhJ,OAA9B,KAA0C,MAG9CuX,GACC5F,EAAA,cAACkJ,EAAA,GAAO3e,MAAM,UAAU8B,QAAS2F,KAAK0V,qBAAtC,oBAIF1H,EAAA,cAACkJ,EAAA,GAAWhT,QAAQ,QAAQ3L,MAAM,UAAUqB,UAAWb,EAAQ2Q,OAA/D,uBAKHzI,GAAW+M,EAAA,cAACmJ,EAAA1e,GAAemB,UAAWb,EAAQqe,WAC9C9f,GACCA,EAAM4O,OAAO7J,OAAS,GACpB2R,EAAA,cAACqJ,EAAA,EAAD,oBACe/f,EAAM4O,OAAO7J,OAD5B,6CAIHqL,GAASsG,EAAA,cAACsJ,EAAA,EAAD,KAAW3S,OAAO+C,IAC3B1H,KAAKuX,eACJjgB,IACC2J,GACC+M,EAAA,qBAAK3T,QAAS,kBAAM0F,EAAKgU,SAASrQ,QAAQ9J,UAAWb,EAAQye,iBAC3DxJ,EAAA,cAACyJ,EAAA,GACCnU,KACE0K,EAAA,cAACkJ,EAAA,GAAK3e,MAAM,UAAUmf,SAAS,WAA/B,oBAFJ,SAOS,IACP1J,EAAA,mBACE2J,KAAK,gDACLtW,OAAO,SACPuW,IAAI,uBAHN,sCARF,+DAmBLtgB,GACC0W,EAAA,cAACkJ,EAAA,GAAOW,OAAO,MAAMnU,KAAMoQ,EAAalQ,QAAS5D,KAAKmV,mBACpDnH,EAAA,qBAAKpU,UAAWb,EAAQkd,WACtBjI,EAAA,cAAC8J,EAAA,GAAYxgB,MAAOA,EAAO+N,QAASA,EAASoK,gBAAiBzP,KAAKoV,gOA9OjEpH,EAAA,WAwPlB7V,EAAA,EAAeR,OAAAogB,EAAA,IAAApgB,CAAIka,EAAnB,CAA2Bla,OAAAqgB,EAAA,WAAArgB,EAlTzBuC,MACE2H,QAAS,OACTrB,OAAQ,QACRyX,SAAU,KACVnW,cAAe,SACfC,eAAgB,UAChBmW,YAAa,SAAU,YAAa,QAAS,eAE/CjC,WACEkC,SAAU,IACVF,SAAU,KACV1X,MAAO,QACP8I,WAAY,OACZG,YAAa,QAEf0M,OACErU,QAAS,OACTC,cAAe,MACfE,SAAU,EACVD,eAAgB,gBAChB8F,QAAS,oBAEXuO,iBACE7V,MAAO,IACPmI,WAAY,EACZ1G,SAAU,GACVwH,YAAa,IAEf8M,eACE5N,WAAY,EACZ1G,SAAU,EACVwH,YAAa,IAEfgN,kBACEjW,MAAO,IACPmI,WAAY,EACZ1G,SAAU,IAEZ0H,OACEL,WAAY,OACZ+O,cAAe,aAEjB5a,QACEjF,MAAO,OACP8f,aAAc,iBACd9X,MAAO,KAETwT,YACAuE,cACAd,iBACEe,UAAW,SACXhY,MAAO,OACPiY,UAAW,SACXC,OAAQ,OACRC,OAAQ,aA4PmCC,WAAW,GAA/BhhB,CAAsCgc,2HC1V3DiF,EAAcjV,QACW,cAA7BkV,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlU,MACvB,2DAsCN,SAASmU,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTphB,KAAK,SAAAwhB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrd,QACfgd,UAAUC,cAAcO,WAK1BtF,QAAQI,IAAI,6CAKZJ,QAAQI,IAAI,2CAMrBjI,MAAM,SAAA7E,GACL0M,QAAQ1M,MAAM,4CAA6CA,KCzEjE,IAAMiS,EAASC,SAASC,eAAe,SDcxB,WACb,GAA6C,kBAAmBX,UAAW,CAGzE,GADkB,IAAIY,IAAI,oBAAwBjB,OAAOC,UAC3CiB,SAAWlB,OAAOC,SAASiB,OAIvC,OAGFlB,OAAOmB,iBAAiB,OAAQ,WAC9B,IAAMf,YAAW,oBAAX,sBAEFL,GAiDV,SAAiCK,GAE/BlD,MAAMkD,GACHphB,KAAK,SAAAoiB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgB3d,QAAQ,cAG7Cyc,UAAUC,cAAckB,MAAMxiB,KAAK,SAAAwhB,GACjCA,EAAaiB,aAAaziB,KAAK,WAC7BghB,OAAOC,SAASyB,aAKpBvB,EAAgBC,KAGnB1M,MAAM,WACL6H,QAAQI,IACN,mEArEAgG,CAAwBvB,GAIxBC,UAAUC,cAAckB,MAAMxiB,KAAK,WACjCuc,QAAQI,IACN,+GAMJwE,EAAgBC,MCxCxBG,GACAqB,EAAAhiB,EAASiiB,OAAOC,EAAAliB,EAAAmiB,cAACjH,EAAA,EAAD,MAASgG,uFC4EzBxhB,EAAA,EAAeR,OAAAiY,EAAA,WAAAjY,CAlEA,SAAAU,GAAA,OACb6B,MACEie,SAAU,OACVtW,QAAS,cACTC,cAAe,MACf+Y,WAAY,SACZC,SAAU,UAEZ/V,aACEgW,aAAc,WACdrS,WAAY,GACZoS,SAAU,UAEZ9V,MACE+V,aAAc,WACdrS,WAAY,IACZoS,SAAU,SACV7C,SAAU,IAEZ3a,MACEyd,aAAc,WACdrS,WAAY,EACZoS,SAAU,UAEZ7V,WACEyD,WAAY,KAyChB,CArCA,SAAA7P,GAAkG,IAA/EtB,EAA+EsB,EAA/EtB,KAAM8D,EAAyExC,EAAzEwC,YAAagN,EAA4DxP,EAA5DwP,YAAa/M,EAA+CzC,EAA/CyC,QAASZ,EAAsC7B,EAAtC6B,SAAU3B,EAA4BF,EAA5BE,QAASa,EAAmBf,EAAnBe,UAIvE8E,EAAO/G,OAAAqjB,EAAA,EAAArjB,CAAcJ,GAErBwN,EAAc1J,EAAc,GAAKqD,EAAKqG,YACtCC,EAAOqD,EAAc,IAAM3J,EAAKsG,MAAQ,IAAIqO,QAAQ,WAAY,IAChE/V,EAAO+K,EAAc,IAAM3J,EAAKpB,MAAQ,KAAOoB,EAAKuG,WAAa,IAEjEkL,EACJR,EAAA,sBAAM/V,UAAWqhB,IAAWrhB,EAAWb,EAAQmB,OAC5C6K,GAAe4K,EAAA,sBAAM/V,UAAWb,EAAQgM,aAAcA,GACtDA,GAAeC,EAAO,IAAM,GAC5BA,GAAQ2K,EAAA,sBAAM/V,UAAWb,EAAQiM,MAAOA,IACvCD,GAAeC,IAAS1H,EAAO,IAAM,GACtCA,GAAQqS,EAAA,sBAAM/V,UAAWb,EAAQuE,MAAOA,IACvCyH,GAAezH,IAAS5C,EAAWiV,EAAA,mCAAuB,GAC3DjV,GAAYiV,EAAA,sBAAM/V,UAAWb,EAAQ2B,UAAWA,IAIrD,OAAIY,EAEAqU,EAAA,cAACW,EAAA,GACC5G,MAA0B,mBAAZpO,EAAP,GAAA0B,OAAkCzF,EAAK+F,MAAQ,GAA/C,MAAAN,OAAsD2H,OAAOpN,EAAKE,IAAlE,KAA2E6D,EAClFsO,UAAU,MACVC,WAAY,IACZF,sBAAA,GAECwG,GAKAA,0MC9EM+K,6EAAf,SAAA7U,EACE/O,EACAC,EACAoF,GAHF,IAAAqC,EAAAC,EAAAC,EAAAE,EAAAD,EAAAuH,EAAA,OAAA8G,EAAA/U,EAAAmO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtH,MAAA,OAKE5C,EAAQ4J,QAAQhP,EAAKE,KAAM,EAL7BuH,GAAA,EAAAC,GAAA,EAAAC,OAAA5C,EAAAuK,EAAAC,KAAA,EAAA1H,EAOwB7H,EAAKoF,EAAQwe,UAPrC9b,OAAAC,YAAA,UAAAN,GAAAG,EAAAC,EAAAG,QAAAC,KAAA,CAAAqH,EAAAtH,KAAA,YAOamH,EAPbvH,EAAAM,OAQQ9C,EAAQ4J,QAAQG,GARxB,CAAAG,EAAAtH,KAAA,gBAAAsH,EAAAE,OAAA,8BAAAF,EAAAtH,KAAA,GASU2b,EAAU5jB,EAAOK,OAAA+N,EAAA,EAAA/N,CAAQL,EAAOoP,GAAU/J,GATpD,eAAAkK,EAAAtH,KAAA,GAUUjI,EAAM2P,OAVhB,QAAAjI,GAAA,EAAA6H,EAAAtH,KAAA,gBAAAsH,EAAAtH,KAAA,iBAAAsH,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAAA5H,GAAA,EAAAC,EAAA2H,EAAAK,GAAA,QAAAL,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAA9H,GAAA,MAAAI,EAAAU,QAAAV,EAAAU,SAAA,WAAA+G,EAAAC,KAAA,IAAA7H,EAAA,CAAA4H,EAAAtH,KAAA,eAAAL,EAAA,eAAA2H,EAAAM,OAAA,mBAAAN,EAAAM,OAAA,6BAAAN,EAAAO,SAAAf,EAAArG,OAAA,uTAcO,SAASob,EAAoB9jB,EAAcC,GAChD,IAAMC,gCAA6BD,EAAKE,IACxC,IAAKH,EAAMI,MAAMF,GAAM,CACrB,IAAM+O,KACNjP,EAAMI,MAAMF,GAAO0jB,EAAU5jB,EAAOC,GAAOgP,UAAS4U,SAAU,aAAatjB,KAAK,WAG9E,cADO0O,EAAQhP,EAAKE,IACbE,OAAOoG,KAAKwI,KAGvB,OAAOjP,EAAMI,MAAMF,GAGd,SAAS6jB,EAAmB/jB,EAAcC,GAC/C,IAAMC,+BAA4BD,EAAKE,IACvC,IAAKH,EAAMI,MAAMF,GAAM,CACrB,IAAM+O,KACNjP,EAAMI,MAAMF,GAAO0jB,EAAU5jB,EAAOC,GAAOgP,UAAS4U,SAAU,YAAYtjB,KAAK,WAG7E,cADO0O,EAAQhP,EAAKE,IACbE,OAAOoG,KAAKwI,KAGvB,OAAOjP,EAAMI,MAAMF,GAGd,SAAS8jB,EAAqBhkB,EAAcuG,GACjD,OAAOA,EAAMZ,OAAO,SAAC1F,GACnB,MAAkB,WAAdA,EAAKkH,MACFlH,EAAKoX,QAAQhE,MAAM,SAAA4Q,GAAA,MAA8C,WAAlC5jB,OAAA+N,EAAA,EAAA/N,CAAQL,EAAOikB,GAAU9c,SAI5D,SAAS+c,EAAoBlkB,EAAcuG,GAChD,OAAOA,EAAMZ,OAAO,SAAC1F,GACnB,MAAkB,WAAdA,EAAKkH,MACuB,IAAzBlH,EAAKmD,SAAS2B,8DCrBzBlE,EAAA,EAAeR,OAAA6Y,EAAA,WAAA7Y,CAvBA,SAAAU,GAAA,OACb6B,MACE3B,MAAOF,EAAMoP,QAAQ0I,KAAK1U,UAC1BoM,QAAS,GACThG,QAAS,OACTC,cAAe,SACfyO,WAAY,SACZxO,eAAgB,SAChB2G,WAAY,EACZ6P,UAAW,UAEbjV,MACEmY,gBAAiB,KAWrB,CAPiB,SAAA5iB,GAAA,IAAEE,EAAFF,EAAEE,QAAS2B,EAAX7B,EAAW6B,SAAU4I,EAArBzK,EAAqByK,KAArB,OACfqM,EAAA,qBAAK/V,UAAWb,EAAQmB,MACtByV,EAAA,qBAAK/V,UAAWb,EAAQuK,MAAOA,GAC/BqM,EAAA,yBAAMjV,qHC3BGghB,EAAUrc,OAAO,WAGjBsc,EAAsB,WACjC,IAAIC,EACAC,EACEC,EAAKnkB,OAAA6G,EAAA,SAAA7G,CACT,kBACE,IAAIwB,QAAQ,SAACuJ,EAASiS,GAChBiH,GAAOjH,EAAOiH,KAClBC,EAAalH,EACboH,WAAWrZ,EAAS,MAGxB,IAWF,OATAoZ,EAAGF,MAAQ,WAAmB,IAAlB/b,EAAkBzD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZsf,EAChB,OAAO,IAAIviB,QAAQ,SAAAuJ,GACjBkZ,EAAQ,WAEN,OADAlZ,IACO7C,GAELgc,GAAYA,EAAWD,QAGxBE,qxBCsBF,SAASE,IACd,OACEne,SACAoe,SACA/V,UACAxO,SACAuP,KAAM0U,KAIH,SAASO,EAAUzd,EAAchH,GACtC,SAAAuF,OAAUyB,EAAV,KAAAzB,OAAkBvF,GAEb,SAAS0kB,EAAUxW,EAAcC,GACtC,SAAA5I,OAAU2I,EAAV,MAAA3I,OAAmB4I,GAGd,SAASwW,EAAQ9kB,EAAcG,GACpC,IAAMF,EAAOD,EAAMuG,MAAMpG,GACzB,IAAKF,EAAM,MAAM,IAAI8d,MAAJ,QAAArY,OAAkBvF,EAAlB,eACjB,OAAOF,EAGF,SAAS8kB,EAAY/kB,EAAcG,GACxC,OAAKA,GACEH,EAAMuG,MAAMpG,IADH,KAeX,SAAS6kB,EAAoBhlB,EAAcqO,EAAeC,GAC/D,OAAKD,GAASC,EACPtO,EAAM2kB,MAAME,EAAUxW,EAAMC,IADV,KAIpB,SAASpD,EAASlL,EAAc+V,GACrC,OAAOA,EAAI1R,IAAIygB,EAAQG,KAAK,KAAMjlB,IAG7B,SAASwV,EAAYxV,GAC1B,OAAQK,OAAO6kB,OAAOllB,EAAMuG,OAevB,SAAS4e,EAAQnlB,EAAcolB,GACpC,IAAMnlB,KAAQoX,WAAajU,aAAiBgiB,GAC5C,GAAIplB,EAAMuG,MAAMtG,EAAKE,IAAK,MAAM,IAAI4d,MAAJ,QAAArY,OAAkBzF,EAAKE,GAAvB,sBAEhC,OADAH,EAAMuG,MAAMtG,EAAKE,IAAMF,EAChBA,EAGF,SAASolB,EAAQrlB,EAAcslB,GACpC,IAAMnX,KAAQK,SAAS,GAAS8W,GAC1BnlB,EAAK0kB,EAAU1W,EAAKE,KAAMF,EAAKG,IACrC,GAAItO,EAAM2kB,MAAMxkB,GAMd,OAAOH,EAAM2kB,MAAMxkB,GAErBH,EAAM2kB,MAAMxkB,GAAMgO,EAClB,IAAME,EAAOyW,EAAQ9kB,EAAOmO,EAAKE,MAC3BC,EAAKwW,EAAQ9kB,EAAOmO,EAAKG,IAK/B,OAJIH,EAAKK,UACPH,EAAKjL,SAASgF,KAAK+F,EAAKG,IACxBA,EAAG+I,QAAQjP,KAAK+F,EAAKE,OAEhBF,EAGF,SAASoX,EAAWvlB,EAAcmO,EAAYK,GACnD,GAAIL,EAAKK,UAAYA,EAArB,CACA,IAAMH,EAAOyW,EAAQ9kB,EAAOmO,EAAKE,MAC3BC,EAAKwW,EAAQ9kB,EAAOmO,EAAKG,IAC3BE,GACFH,EAAKjL,SAASgF,KAAK+F,EAAKG,IACxBA,EAAG+I,QAAQjP,KAAK+F,EAAKE,QAErBA,EAAKjL,SAAWiL,EAAKjL,SAASuC,OAAO,SAAAxF,GAAA,OAAMA,IAAOgO,EAAKG,KACvDA,EAAG+I,QAAU/I,EAAG+I,QAAQ1R,OAAO,SAAAxF,GAAA,OAAMA,IAAOgO,EAAKE,QAEnDF,EAAKK,QAAUA,GAGV,SAASgX,EAAWxlB,GACzB,OAAOA,EAAM2P,KAAK2U,QAGb,SAASmB,EAAWzlB,GAYzB,OAVEuG,MAAOlG,OAAA6G,EAAA,UAAA7G,CAAUL,EAAMuG,MAAO,SAAAtG,GAAA,OAAAwF,KACzBxF,GACHoX,UAAapX,EAAKoX,SAClBjU,WAAcnD,EAAKmD,cAErBuhB,MAAOtkB,OAAA6G,EAAA,UAAA7G,CAAUL,EAAM2kB,MAAO,SAAAxW,GAAA,OAAA1I,KAAa0I,KAC3CS,SAAY5O,EAAM4O,QAClBxO,SACAuP,KAAM0U","file":"static/js/main.a97b8b99.chunk.js","sourcesContent":["// @flow\n\nimport type {Graph, Node, NodeID} from './graph'\nimport {getNode} from './graph'\nimport {getDeepNodeChildren} from './dependencies'\n\nexport type EdgePath = NodeID[]\n\nexport function calculateTreeSize(graph: Graph, node: Node): Promise<number> {\n  const key = `calculateTreeSize:${node.id}`\n\n  if (!graph.cache[key]) {\n    graph.cache[key] = getDeepNodeChildren(graph, node).then(tree =>\n      tree.reduce((sum, id) => sum + getNode(graph, id).size, node.size),\n    )\n  }\n  return graph.cache[key]\n}\n","// @flow\nimport type {Graph, Node} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport numeral from 'numeral'\nimport Async from 'react-promise'\nimport {withStyles} from '@material-ui/core'\nimport red from '@material-ui/core/colors/red'\nimport green from '@material-ui/core/colors/green'\n\nimport {calculateTreeSize} from '../../analysis/size'\nimport {getNode} from '../../analysis/graph'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  node: Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  bigger: {\n    color: red.A700,\n  },\n  smaller: {\n    color: green.A700,\n  },\n})\n\nfunction NodeSize({baseGraph, graph, node, classes}: Props) {\n  return (\n    <Async\n      promise={Promise.all([\n        baseGraph && calculateTreeSize(baseGraph, getNode(baseGraph, node.id)),\n        calculateTreeSize(graph, node),\n      ])}\n      then={([baseTreeSize, treeSize]) => (\n        <>\n          {numeral(node.size).format('0[.]0b')}\n          {' + '}\n          {numeral(treeSize - node.size).format('0[.]0b')}\n          {baseTreeSize != null && treeSize !== baseTreeSize ? (\n            <span className={treeSize > baseTreeSize ? classes.bigger : classes.smaller}>\n              {' ('}\n              {treeSize > baseTreeSize ? '+' : '-'}\n              {numeral(Math.abs(treeSize - baseTreeSize)).format('0[.]0b')}\n              {')'}\n            </span>\n          ) : null}\n        </>\n      )}\n      pending={'...'}\n    />\n  )\n}\nexport default withStyles(styles)(NodeSize)\n","// @flow\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {withStyles, ListItem, ListItemText, ListItemSecondaryAction} from '@material-ui/core'\nimport NodeSize from './NodeSize'\nimport NodeName from './NodeName'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  checked?: boolean,\n  node: Node,\n  secondaryActions?: React.Node[],\n  selectFromNode?: (node: NodeID) => void,\n  selectToNode?: (node: NodeID) => void,\n  onClick?: () => void,\n  style?: Object,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    paddingLeft: 16,\n  },\n})\n\nfunction NodeItem({\n  baseGraph,\n  graph,\n  checked,\n  onClick,\n  node,\n  selectFromNode,\n  selectToNode,\n  selectNode,\n  style,\n  children,\n  classes,\n  className,\n  secondaryActions = [],\n}: Props) {\n  // {selectFromNode && <a onClick={() => selectFromNode(node.id)}>From</a>}\n  // {selectToNode && <a onClick={() => selectToNode(node.id)}>To</a>}\n\n  return (\n    <div style={style}>\n      <ListItem\n        dense\n        disableGutters\n        ContainerComponent=\"div\"\n        button={!!onClick}\n        onClick={onClick}\n        className={classNames(className, classes.root)}\n      >\n        <ListItemText\n          primary={<NodeName node={node} hidePackage tooltip />}\n          primaryTypographyProps={{noWrap: true, color: checked ? 'secondary' : 'default'}}\n          secondary={<NodeSize baseGraph={baseGraph} graph={graph} node={node} />}\n        />\n        {secondaryActions.map((action, index) => (\n          <ListItemSecondaryAction key={index}>{action}</ListItemSecondaryAction>\n        ))}\n      </ListItem>\n    </div>\n  )\n}\nexport default withStyles(styles)(NodeItem)\n","// @flow\n\ntype TreeState = {\n  expanded: $ReadOnlyArray<any>,\n}\n\ntype TreeOptions = {\n  getChildren?: any => $ReadOnlyArray<any>,\n  getKey?: any => any,\n}\n\nconst defaultGetChildren = row => row.children\nconst defaultGetKey = row => row\n\nexport function isTreeExpanded(state: TreeState, row: any, options?: TreeOptions = {}): boolean {\n  const {getKey = defaultGetKey} = options\n  return state.expanded.indexOf(getKey(row)) >= 0\n}\n\n// Flattens a tree of items into a flat set of rows, which can be then used in any list rendering lib\nexport function flattenTreeToRows(\n  tree: any,\n  state: TreeState,\n  options?: TreeOptions = {},\n): $ReadOnlyArray<any> {\n  const result = []\n  const {getChildren = defaultGetChildren} = options\n  for (const row of tree) {\n    result.push(row)\n    if (isTreeExpanded(state, row, options)) {\n      const children = getChildren(row)\n      result.push(...flattenTreeToRows(children, state, options))\n    }\n  }\n  return result\n}\n\nexport function toggleTreeRow(\n  state: TreeState,\n  row: any,\n  options?: TreeOptions = {},\n  expand?: boolean,\n): TreeState {\n  const current = isTreeExpanded(state, row, options)\n  if (expand == null) {\n    expand = !current\n  }\n  if (expand === current) return state\n  const {getKey = defaultGetKey} = options\n  const key = getKey(row)\n  if (expand) {\n    return {...state, expanded: [...state.expanded, key]}\n  } else {\n    return {...state, expanded: state.expanded.filter(e => e !== key)}\n  }\n}\n\nexport const toggleTreeRowState = (row: any, options?: TreeOptions = {}) => (state: TreeState) =>\n  toggleTreeRow(state, row, options)\n","// @flow\n\nimport numeral from 'numeral'\n\nimport * as React from 'react'\nimport Fuse from 'fuse.js'\nimport {groupBy, map, sortBy, sumBy} from 'lodash'\n\nimport {List, AutoSizer} from 'react-virtualized'\nimport {\n  withStyles,\n  Input,\n  InputAdornment,\n  IconButton,\n  Icon,\n  ListItem,\n  ListItemText,\n  LinearProgress,\n} from '@material-ui/core'\nimport classNames from 'classnames'\nimport {createSelector} from 'reselect'\n\nimport type {Node, Graph} from '../../analysis/graph'\nimport {flattenTreeToRows, toggleTreeRowState, isTreeExpanded} from '../tree'\nimport {getPackageName} from '../../analysis/info'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  nodes: $ReadOnlyArray<Node>,\n  renderItem: any => React.Node,\n  renderEmpty: any => React.Node,\n  search?: string,\n  selected?: ?Node,\n  sortGroupsBySize?: boolean,\n  loading?: boolean,\n  classes: Object,\n  className?: string,\n|}\n\ntype State = {\n  search: string,\n  expanded: $ReadOnlyArray<any>,\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n  },\n  search: {},\n  listContainer: {\n    flexGrow: 1,\n    position: 'relative',\n  },\n  list: {\n    outline: 0,\n  },\n})\n\nconst treeOptions = {getKey: group => group.name}\n\nclass NodeList extends React.PureComponent<Props, State> {\n  state = {\n    search: '',\n    expanded: [],\n  }\n  fuseSelector = createSelector(\n    (_, p) => p.nodes,\n    nodes => {\n      return new Fuse(nodes, {\n        keys: ['name', 'id', 'kind'],\n      })\n    },\n  )\n  searchSelector = createSelector(\n    this.fuseSelector,\n    s => s.search,\n    (fuse, search) => {\n      return search ? fuse.search(search) : fuse.list\n    },\n  )\n  groupSelector = createSelector(\n    this.searchSelector,\n    (_, p) => p.sortGroupsBySize,\n    (nodes, sortGroupsBySize) => {\n      const groups = groupBy(nodes, node => {\n        if (node.kind === 'module') {\n          return getPackageName(node) || '(root modules)'\n        }\n        return `(${node.kind}s)`\n      })\n      return sortBy(\n        map(groups, (children, name) => ({\n          name,\n          children: sortBy(children, 'file'),\n          size: sumBy(children, 'size'),\n          group: true,\n        })),\n        sortGroupsBySize ? group => -group.size : 'name',\n      )\n    },\n  )\n  nodesSelector = createSelector(\n    this.groupSelector,\n    s => s.expanded,\n    (tree, expanded) => {\n      return flattenTreeToRows(tree, {expanded}, treeOptions)\n    },\n  )\n\n  renderList() {\n    const {classes, baseGraph, graph, renderItem, renderEmpty} = this.props\n    const nodes = this.nodesSelector(this.state, this.props)\n\n    return (\n      <div className={classes.listContainer}>\n        <AutoSizer>\n          {({width, height}) => (\n            <List\n              className={classes.list}\n              width={width}\n              height={height}\n              rowCount={nodes.length}\n              rowHeight={54}\n              rowRenderer={({index, style}) => {\n                const node = nodes[index]\n                if (node.group) {\n                  return (\n                    <ListItem\n                      dense\n                      ContainerComponent=\"div\"\n                      button\n                      onClick={() => this.setState(toggleTreeRowState(node, treeOptions))}\n                      disableGutters\n                      style={style}\n                      key={node.name}\n                      divider\n                    >\n                      <ListItemText\n                        primary={node.name}\n                        secondary={`${numeral(node.size).format('0.0b')} in ${\n                          node.children.length\n                        }`}\n                      />\n                      <Icon>\n                        {isTreeExpanded(this.state, node, treeOptions)\n                          ? 'expand_less'\n                          : 'expand_more'}\n                      </Icon>\n                    </ListItem>\n                  )\n                }\n                return renderItem({node, key: node.id, baseGraph, graph, style})\n              }}\n              noRowsRenderer={renderEmpty}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    )\n  }\n\n  render() {\n    const {classes, className, loading} = this.props\n    const {search} = this.state\n    return (\n      <div className={classNames(className, classes.root)}>\n        <Input\n          className={classes.search}\n          id=\"adornment-password\"\n          type=\"text\"\n          value={search}\n          onChange={el => this.setState({search: el.target.value})}\n          endAdornment={\n            search && (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"Clear search\"\n                  onClick={() => this.setState({search: ''})}\n                >\n                  <Icon color=\"inherit\">clear</Icon>\n                </IconButton>\n              </InputAdornment>\n            )\n          }\n          placeholder=\"Search\"\n        />\n        {loading ? <LinearProgress className={classes.listProgress} /> : this.renderList()}\n      </div>\n    )\n  }\n}\n//scrollToIndex={scrollToIndex >= 0 ? scrollToIndex : null}\nexport default withStyles(styles)(NodeList)\n","// @flow\n\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {map} from 'lodash'\nimport {createSelector} from 'reselect'\nimport Async from 'react-promise'\nimport {\n  withStyles,\n  Icon,\n  Typography,\n  Menu,\n  MenuItem,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\n\nimport EmptyBox from '../EmptyBox'\nimport NodeItem from './NodeItem'\nimport NodeList from './NodeList'\n\ntype Mode = {\n  getNodes: () => $ReadOnlyArray<Node> | Promise<$ReadOnlyArray<Node>>,\n  renderTitle: () => React.Node,\n  renderInfo: () => React.Node,\n  renderEmpty: () => string,\n}\n\nexport type Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n\n  selected: ?Node,\n  modes: {\n    [string]: Mode,\n  },\n  defaultMode: string,\n  onNodeSelect: NodeID => void,\n  classes: Object,\n  className?: string,\n|}\n\ntype State = {|\n  modeId: ?string,\n  modeMenuAnchor: any,\n|}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n  },\n  list: {\n    flexGrow: 1,\n  },\n  listProgress: {\n    marginTop: 16,\n  },\n  modeMenuItem: {\n    width: 300,\n  },\n})\n\nclass GraphExplorer extends React.Component<Props, State> {\n  state = {modeId: null, modeMenuAnchor: null}\n\n  modeSelector = (s, p) => p.modes[s.modeId || ''] || p.modes[p.defaultMode]\n  nodesSelector = (s, p) => this.modeSelector(s, p).getNodes()\n\n  nodesPromiseSelector = createSelector(\n    this.nodesSelector,\n    // Needed so we don't recreate the promise on every render\n    nodes => Promise.resolve(nodes),\n  )\n\n  static getDerivedStateFromProps({modes = {}}, state = {}) {\n    if (!modes[state.modeId]) {\n      // If selected mode is not available anymore, switch to default\n      return {modeId: null}\n    }\n    return null\n  }\n\n  handleModeMenuOpen = event => {\n    this.setState({modeMenuAnchor: event.currentTarget})\n  }\n  handleModeMenuClose = () => {\n    this.setState({modeMenuAnchor: null})\n  }\n\n  renderList(nodes) {\n    const {classes, baseGraph, graph, selected, onNodeSelect} = this.props\n    const mode = this.modeSelector(this.state, this.props)\n\n    return (\n      <NodeList\n        className={classes.list}\n        nodes={nodes || []}\n        loading={nodes == null}\n        baseGraph={baseGraph}\n        graph={graph}\n        selected={selected}\n        sortGroupsBySize\n        renderItem={itemProps => (\n          <NodeItem\n            {...itemProps}\n            onClick={() => onNodeSelect(itemProps.node.id)}\n            checked={selected ? selected.id === itemProps.node.id : false}\n          />\n        )}\n        renderEmpty={() => <EmptyBox icon={<Icon>block</Icon>}>{mode.renderEmpty()}</EmptyBox>}\n      />\n    )\n  }\n\n  renderModeMenu() {\n    const {classes, modes, defaultMode} = this.props\n    const {modeMenuAnchor, modeId} = this.state\n    const currentModeId = modeId || defaultMode\n    return (\n      <Menu\n        id=\"lock-menu\"\n        anchorEl={modeMenuAnchor}\n        open={Boolean(modeMenuAnchor)}\n        onClose={this.handleModeMenuClose}\n      >\n        {map(modes, (mode: Mode, id) => (\n          <MenuItem\n            className={classes.modeMenuItem}\n            key={id}\n            selected={id === currentModeId}\n            onClick={() => this.setState({modeId: id, modeMenuAnchor: null})}\n          >\n            {mode.renderTitle()}\n          </MenuItem>\n        ))}\n      </Menu>\n    )\n  }\n\n  render() {\n    const {className, classes} = this.props\n\n    const mode = this.modeSelector(this.state, this.props)\n    const nodesPromise = this.nodesPromiseSelector(this.state, this.props)\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        <ListItem\n          button\n          disableGutters\n          className={classes.header}\n          onClick={this.handleModeMenuOpen}\n        >\n          <ListItemText>\n            <Typography variant=\"headline\">{mode.renderTitle()}</Typography>\n            <Typography variant=\"subheading\" gutterBottom>\n              {mode.renderInfo()}\n            </Typography>\n          </ListItemText>\n          <Icon color=\"action\" className={classes.headerMore}>\n            more_vert\n          </Icon>\n        </ListItem>\n        {this.renderModeMenu()}\n        <Async\n          promise={nodesPromise}\n          then={nodes => this.renderList(nodes)}\n          pending={() => this.renderList(null)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(GraphExplorer)\n","// @flow\n\nimport type {Node, NodeID} from './graph'\n\nexport type EdgePath = NodeID[]\n\n// https://regex101.com/r/yU5wqf/2\n// 1 - path to packages dir (null if no package)\n// 2 - package name (null if no package)\n// 3 - directory in package\n// 4 - filename\n// 5 - extension\nconst FILENAME_RE = /^(?:(.*\\/(?:node_modules|web_modules|packages|~)\\/)((?:@[^/]+?\\/)?[^/]+))?(.*?\\/)?([^/]+)?(\\.[^./]+)?$/\n\ntype ModuleInfo = {|\n  pathToPackage?: string,\n  packageName?: string,\n  path?: string,\n  name?: string,\n  extension?: string,\n|}\n\nexport function getModuleInfo({file, name, id}: Node): ModuleInfo {\n  if (!file) {\n    return {name: name || String(id) || '(unknown)'}\n  }\n  const found = file.match(FILENAME_RE)\n  if (!found) {\n    return {path: file}\n  }\n  return {\n    pathToPackage: found[1],\n    packageName: found[2],\n    path: found[3],\n    name: found[4],\n    extension: found[5],\n  }\n}\n\nexport function getPackageName({file}: Node): string {\n  if (!file) return ''\n  const found = file.match(FILENAME_RE)\n  return found ? found[2] : ''\n}\n\nexport function getPackageRelativeFilePath(node: Node): string {\n  const {file} = node\n  if (!file) return ''\n  const pkg = getPackageName(node)\n  if (!pkg) return ''\n  return file.slice(file.indexOf(pkg) + pkg.length + 1)\n}\n\nexport function isExternal({file}: Node): boolean {\n  if (!file) return false\n  return file.indexOf('/node_modules/') >= 0\n}\n\nexport function getFileExtension({file}: Node): string {\n  if (!file) return ''\n  const dot = file.lastIndexOf('.')\n  if (dot <= 0) return ''\n  return file.slice(dot + 1)\n}\n","// @flow\n\nimport type {Graph, NodeID} from './graph'\n\nimport {reject, pick} from 'lodash'\nimport {toggleEdge, addEdge, resolveEdgeForNodes} from './graph'\n\nexport type EdgeChange = {|\n  change: 'edge',\n  from: NodeID,\n  to: NodeID,\n  enabled: boolean,\n|}\n\nexport type Change = EdgeChange\n\nexport const MOCKED_EDGE_KIND = 'mocked'\n\nexport function addChange(graph: Graph, changes: $ReadOnlyArray<Change>, change: Change) {\n  // Remove same changes from queue\n  const newChanges = reject(changes, pick(change, ['change', 'from', 'to']))\n  if (change.change === 'edge') {\n    const edge = resolveEdgeForNodes(graph, change.from, change.to)\n    const wasOriginallyEnabled = edge ? edge.kind !== MOCKED_EDGE_KIND : false\n    // Add to queue only if it's a different state than originally\n    if (change.enabled !== wasOriginallyEnabled) {\n      newChanges.push(change)\n    }\n  }\n  return newChanges\n}\n\nexport function applyChanges(graph: Graph, changes: $ReadOnlyArray<Change>) {\n  for (const change of changes) {\n    if (change.change === 'edge') {\n      const fromNode = graph.nodes[change.from]\n      const toNode = graph.nodes[change.to]\n      if (!fromNode || !toNode) {\n        graph.errors.push({message: `One of the nodes is missing, cannot apply the change`, change})\n        continue\n      }\n\n      let edge = resolveEdgeForNodes(graph, change.from, change.to)\n      if (!edge) {\n        edge = addEdge(graph, {\n          from: change.from,\n          to: change.to,\n          enabled: change.enabled,\n          kind: MOCKED_EDGE_KIND,\n        })\n      }\n      toggleEdge(graph, edge, change.enabled)\n    }\n  }\n}\n","// @flow\n\nimport type {Graph, Node, NodeID} from './graph'\nimport {getNode} from './graph'\n\nexport type EdgeChain = NodeID[]\n\nasync function gatherChains(\n  graph: Graph,\n  node: Node,\n  toId: NodeID,\n  path: NodeID[],\n  visited: {[NodeID]: boolean},\n) {\n  const currentPath = [...path, node.id]\n  if (node.id === toId) return [currentPath]\n\n  visited[node.id] = true\n  const paths = []\n\n  // prefer shortes paths first\n  if (node.children.indexOf(toId) >= 0) {\n    paths.push([...currentPath, toId])\n  }\n\n  for (const childId of node.children) {\n    if (visited[childId]) continue\n    if (childId === toId) continue\n    const result = await gatherChains(graph, getNode(graph, childId), toId, currentPath, visited)\n    if (result.length > 0) {\n      paths.push(...result)\n    }\n    await graph.idle()\n  }\n  return paths\n}\n\nexport async function findChains(graph: Graph, fromNode: Node, toNode: Node): Promise<EdgeChain[]> {\n  return gatherChains(graph, fromNode, toNode.id, [], {})\n}\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles, Icon} from '@material-ui/core'\n\ntype Props = {|\n  error?: any,\n  children?: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.error.dark,\n    color: theme.palette.error.contrastText,\n    padding: 16,\n    display: 'flex',\n    'align-items': 'center',\n    'flex-shrink': 0,\n  },\n  icon: {\n    'margin-right': 8,\n  },\n})\n\nconst ErrorBox = ({classes, error, children}: Props) => {\n  if (children === undefined) children = String(error)\n  return (\n    <div className={classes.root}>\n      <Icon className={classes.icon}>error</Icon>\n      <span className={classes.label}>\n        {React.isValidElement(children) ? children : String(children)}\n      </span>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(ErrorBox)\n","// @flow\n\nimport type {Graph, Node, Edge} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {\n  withStyles,\n  Typography,\n  IconButton,\n  Icon,\n  Card,\n  CardContent,\n  Collapse,\n  CardActions,\n} from '@material-ui/core'\n\nimport NodeSize from './NodeSize'\nimport NodeName from './NodeName'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  node: Node,\n  edge?: ?Edge,\n  actions?: React.Node,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'column',\n    flexShrink: 0,\n    flexGrow: 0,\n    justifyContent: 'stretch',\n  },\n  card: {\n    marginBottom: 24,\n    position: 'relative',\n  },\n  edgeButton: {\n    position: 'absolute',\n    left: -32,\n    top: 12,\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    marginLeft: 'auto',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: -8,\n    },\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n})\n\ntype State = {\n  expanded: boolean,\n}\n\nclass NodeCard extends React.PureComponent<Props, State> {\n  state = {\n    expanded: false,\n  }\n  render() {\n    const {classes, className, baseGraph, graph, node, edge, actions} = this.props\n    const {expanded} = this.state\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"headline\" noWrap>\n              <NodeName node={node} hidePackage tooltip />\n            </Typography>\n            <Typography variant=\"subheading\">\n              <NodeName node={node} onlyPackage />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              <NodeSize baseGraph={baseGraph} graph={graph} node={node} />\n            </Typography>\n          </CardContent>\n          <CardActions className={classes.actions} disableActionSpacing>\n            {actions}\n            <IconButton\n              className={classNames(classes.expand, expanded && classes.expandOpen)}\n              onClick={() => this.setState({expanded: !expanded})}\n            >\n              <Icon>expand_more</Icon>\n            </IconButton>\n          </CardActions>\n          <Collapse in={expanded}>\n            <CardContent>\n              <Typography variant=\"caption\" color=\"textSecondary\">\n                Name\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                {node.name}\n              </Typography>\n              <Typography variant=\"caption\" color=\"textSecondary\">\n                ID\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                {String(node.id)}\n              </Typography>\n              {edge && (\n                <>\n                  <Typography variant=\"caption\" color=\"textSecondary\">\n                    Edge type\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    {edge.kind}\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"textSecondary\">\n                    Edge name\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    {edge.name || ''}\n                  </Typography>\n                </>\n              )}\n            </CardContent>\n          </Collapse>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NodeCard)\n","// @flow\n\nimport type {Edge} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {withStyles, Icon, IconButton, Tooltip} from '@material-ui/core'\n\ntype Props = {|\n  edge: Edge,\n  onClick: Function,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {},\n})\n\nclass EdgeLinkButton extends React.PureComponent<Props> {\n  render() {\n    const {classes, className, edge, onClick} = this.props\n\n    return (\n      <Tooltip\n        title={`${edge.enabled ? 'Unlink' : 'Link'} this node with above one`}\n        disableFocusListener\n        placement=\"top\"\n        enterDelay={500}\n      >\n        <IconButton\n          className={classNames(className, classes.root)}\n          aria-label=\"Unlink\"\n          color={edge.enabled ? 'secondary' : 'default'}\n          onClick={onClick}\n        >\n          <Icon>{edge.enabled ? 'link_off' : 'link'}</Icon>\n        </IconButton>\n      </Tooltip>\n    )\n  }\n}\n\nexport default withStyles(styles)(EdgeLinkButton)\n","// @flow\n\nimport type {Graph, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport {withStyles, ListItem, ListItemText} from '@material-ui/core'\n\nimport {getNode} from '../../analysis/graph'\nimport NodeName from './NodeName'\n\ntype Props = {|\n  graph: Graph,\n  chain: $ReadOnlyArray<NodeID>,\n  through: $ReadOnlyArray<NodeID>,\n  checked?: boolean,\n\n  onClick: Function,\n\n  style: Object,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {},\n  nodes: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  node: {\n    width: 300,\n    marginRight: 24,\n    position: 'relative',\n  },\n  link: {\n    position: 'absolute',\n    left: -24,\n    top: 0,\n  },\n})\n\nfunction ChainItem({graph, chain, through, onClick, style, classes, checked}: Props) {\n  return (\n    <div style={style}>\n      <ListItem dense ContainerComponent=\"div\" button onClick={onClick} disableGutters>\n        <ListItemText\n          primary={through.length ? <NodeName node={getNode(graph, through[0])} /> : 'Direct'}\n          secondary={`${chain.length - 1} nodes deep`}\n          primaryTypographyProps={{noWrap: true, color: checked ? 'secondary' : 'default'}}\n        />\n      </ListItem>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(ChainItem)\n","// @flow\n\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {difference} from 'lodash'\nimport {List, AutoSizer} from 'react-virtualized'\nimport {withStyles, Icon} from '@material-ui/core'\n\nimport ChainItem from './ChainItem'\nimport EmptyBox from '../EmptyBox'\n\ntype Props = {|\n  graph: Graph,\n  fromNode: Node,\n  toNode: Node,\n  chains: $ReadOnlyArray<$ReadOnlyArray<NodeID>>,\n  selectedChain: $ReadOnlyArray<NodeID>,\n  onChainSelect: (nodes: $ReadOnlyArray<NodeID>) => void,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n  },\n  list: {\n    outline: 0,\n  },\n})\n\nfunction ChainsList(props: Props) {\n  const {classes, className, graph, chains, fromNode, toNode, selectedChain, onChainSelect} = props\n  const usedIds = [fromNode.id, toNode.id]\n  const finalChains = chains.map(chain => {\n    const through = difference(chain, usedIds)\n    usedIds.push(...through)\n    return {through, chain}\n  })\n\n  return (\n    <div className={classNames(className, classes.root)}>\n      <AutoSizer>\n        {({width, height}) => (\n          <List\n            className={classes.list}\n            width={width}\n            height={height}\n            rowCount={finalChains.length}\n            rowHeight={54}\n            rowRenderer={({index, style}) => {\n              const {chain, through} = finalChains[index]\n              return (\n                <ChainItem\n                  key={index}\n                  graph={graph}\n                  chain={chain}\n                  through={through}\n                  onClick={() => onChainSelect(chain)}\n                  style={style}\n                  checked={selectedChain.every((id, index) => chain[index] === id)}\n                />\n              )\n            }}\n            noRowsRenderer={() => (\n              <EmptyBox icon={<Icon>link_off</Icon>}>\n                There is no connection between these nodes\n              </EmptyBox>\n            )}\n          />\n        )}\n      </AutoSizer>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(ChainsList)\n","// @flow\n\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\nimport type {Change} from '../../analysis/changes'\nimport classNames from 'classnames'\n\nimport * as React from 'react'\nimport {createSelector} from 'reselect'\nimport Async from 'react-promise'\nimport {withStyles, Typography, LinearProgress, IconButton, Icon, Tooltip} from '@material-ui/core'\n\nimport {findChains} from '../../analysis/chains'\nimport ErrorBox from '../ErrorBox'\nimport NodeCard from './NodeCard'\nimport {getNodes, resolveEdgeForNodes} from '../../analysis/graph'\nimport EdgeLinkButton from './EdgeLinkButton'\nimport ChainsList from './ChainsList'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  fromNode: ?Node,\n  toNode: ?Node,\n  onAddChange: Change => any,\n  onSelectFromNode: NodeID => any,\n  onSelectToNode: NodeID => any,\n  classes: Object,\n  className?: string,\n|}\n\ntype State = {\n  selectedChain: ?$ReadOnlyArray<NodeID>,\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'row',\n    justifyContent: 'stretch',\n  },\n\n  chains: {\n    width: 300,\n    flexGrow: 0.2,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n    marginRight: 24,\n  },\n  chainsList: {\n    flexGrow: 1,\n  },\n  selectedChain: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    position: 'relative',\n    width: 300,\n  },\n  selectedChainScroll: {\n    overflowY: 'auto',\n  },\n  listProgress: {\n    marginTop: 16,\n  },\n})\n\nclass ChainsExplorer extends React.PureComponent<Props, State> {\n  state = {\n    selectedChain: null,\n  }\n\n  chainsPromiseSelector = createSelector(\n    p => p.graph,\n    p => p.fromNode,\n    p => p.toNode,\n    (graph, fromNode, toNode) => {\n      if (!fromNode || !toNode) return null\n      return findChains(graph, fromNode, toNode)\n    },\n  )\n\n  componentDidMount() {\n    this.componentDidUpdate({})\n  }\n\n  _waitingForChainsPromise: any\n  componentDidUpdate(prevProps) {\n    const baseGraphChanged = this.props.baseGraph !== prevProps.baseGraph\n    const {fromNode: currentFrom, toNode: currentTo} = this.props\n    const {fromNode: prevFrom, toNode: prevTo} = prevProps\n    const fromToIdChanged =\n      (currentFrom && currentFrom.id) !== (prevFrom && prevFrom.id) ||\n      (currentTo && currentTo.id) !== (prevTo && prevTo.id)\n    if (baseGraphChanged || fromToIdChanged) {\n      // Select the first chain whenever nodes or base graph changes,\n      // but keep it if user edits the graph\n      const chainsPromise = this.chainsPromiseSelector(this.props)\n      this.setState({\n        selectedChain: null,\n      })\n      this._waitingForChainsPromise = chainsPromise\n      if (currentFrom && currentTo && chainsPromise) {\n        chainsPromise.then(chains => {\n          if (this._waitingForChainsPromise !== chainsPromise) return\n          this.setState({selectedChain: chains[0] || [currentFrom.id, currentTo.id]})\n        })\n      }\n    }\n  }\n\n  renderSelectedChain = () => {\n    const {baseGraph, graph, onAddChange, onSelectFromNode, onSelectToNode} = this.props\n    const {selectedChain} = this.state\n    if (!selectedChain) return null\n    const nodes = getNodes(graph, selectedChain)\n\n    return nodes.map((node: Node, index) => {\n      const isFirst = index === 0\n      const isLast = index === nodes.length - 1\n      if (isFirst) return null\n      const prevNode = nodes[index - 1]\n      const edge = resolveEdgeForNodes(graph, prevNode.id, node.id) || {\n        from: prevNode.id,\n        to: node.id,\n        kind: '',\n        enabled: false,\n      }\n\n      return (\n        <>\n          <NodeCard\n            baseGraph={baseGraph}\n            graph={graph}\n            node={node}\n            edge={edge}\n            actions={\n              <>\n                <EdgeLinkButton\n                  edge={edge}\n                  onClick={() =>\n                    onAddChange({\n                      change: 'edge',\n                      from: edge.from,\n                      to: edge.to,\n                      enabled: !edge.enabled,\n                    })\n                  }\n                />\n                <Tooltip\n                  title=\"Set as the first node\"\n                  disableFocusListener\n                  enterDelay={500}\n                  placement=\"top\"\n                >\n                  <IconButton onClick={() => onSelectFromNode(node.id)}>\n                    <Icon>vertical_align_top</Icon>\n                  </IconButton>\n                </Tooltip>\n                {!isLast && (\n                  <Tooltip\n                    title=\"Set as the last node\"\n                    disableFocusListener\n                    enterDelay={500}\n                    placement=\"top\"\n                  >\n                    <IconButton onClick={() => onSelectToNode(node.id)}>\n                      <Icon>vertical_align_bottom</Icon>\n                    </IconButton>\n                  </Tooltip>\n                )}\n              </>\n            }\n          />\n        </>\n      )\n    })\n  }\n\n  renderChains = chains => {\n    const {graph, fromNode, toNode, classes} = this.props\n    const {selectedChain} = this.state\n    if (!selectedChain || !fromNode || !toNode) return null\n    return (\n      <ChainsList\n        className={classes.chainsList}\n        graph={graph}\n        fromNode={fromNode}\n        toNode={toNode}\n        chains={chains}\n        selectedChain={selectedChain}\n        onChainSelect={chain => this.setState({selectedChain: chain})}\n      />\n    )\n  }\n\n  render() {\n    const {className, classes, baseGraph, graph, fromNode, toNode, onSelectToNode} = this.props\n    const chainsPromise = this.chainsPromiseSelector(this.props)\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        <div className={classes.chains}>\n          <Typography variant=\"headline\">Dependency chains</Typography>\n          <Typography variant=\"subheading\" gutterBottom>\n            Select one of the dependency chains between these two nodes. Try breaking the links\n            between them to see the impact of your changes.\n          </Typography>\n          <Async\n            promise={chainsPromise}\n            then={chains => this.renderChains(chains)}\n            catch={error => <ErrorBox>{error}</ErrorBox>}\n            pending={<LinearProgress className={classes.listProgress} />}\n          />\n        </div>\n        <div className={classes.selectedChain}>\n          {fromNode && (\n            <NodeCard\n              baseGraph={baseGraph}\n              graph={graph}\n              node={fromNode}\n              actions={\n                fromNode !== toNode && (\n                  <Tooltip\n                    title=\"Set as the last node\"\n                    disableFocusListener\n                    enterDelay={500}\n                    placement=\"top\"\n                  >\n                    <IconButton onClick={() => onSelectToNode(fromNode.id)}>\n                      <Icon>vertical_align_bottom</Icon>\n                    </IconButton>\n                  </Tooltip>\n                )\n              }\n            />\n          )}\n          <div className={classes.selectedChainScroll}>{this.renderSelectedChain()}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ChainsExplorer)\n","// @flow\n\nimport type {Node, NodeID, Graph} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {createSelector} from 'reselect'\nimport {withStyles} from '@material-ui/core'\n\nimport {getNodes, getAllNodes} from '../../analysis/graph'\nimport GraphExplorer from './GraphExplorer'\nimport NodeName from './NodeName'\nimport {keepOnlyLeafModules, getDeepNodeChildren} from '../../analysis/dependencies'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  fromNode: ?Node,\n  toNode: ?Node,\n  onNodeSelect: NodeID => void,\n\n  className?: string,\n  classes: Object,\n|}\n\nconst styles = {\n  root: {},\n}\n\nclass ChildrenExplorer extends React.PureComponent<Props> {\n  allNodesSelector = createSelector((_, p) => p.graph, graph => getAllNodes(graph))\n  getAllNodes = () => this.allNodesSelector(this.state, this.props)\n\n  leafNodesSelector = createSelector(\n    (_, p) => p.graph,\n    graph => keepOnlyLeafModules(graph, getAllNodes(graph)),\n  )\n  getLeafNodes = () => this.leafNodesSelector(this.state, this.props)\n\n  directChildrenNodesSelector = createSelector(\n    (_, p) => p.graph,\n    (_, p) => p.toNode,\n    (graph, toNode) => {\n      if (!toNode) return []\n      return getNodes(graph, toNode.children)\n    },\n  )\n  getDirectChildrenNodes = () => this.directChildrenNodesSelector(this.state, this.props)\n\n  childrenNodesSelector = createSelector(\n    (_, p) => p.graph,\n    (_, p) => p.toNode,\n    (graph, fromNode) => {\n      if (!fromNode) return []\n      return getDeepNodeChildren(graph, fromNode).then(ids => getNodes(graph, ids))\n    },\n  )\n  getChildrenNodes = () => this.childrenNodesSelector(this.state, this.props)\n\n  childLeafNodesSelector = createSelector(\n    (_, p) => p.graph,\n    this.childrenNodesSelector,\n    async (graph, nodes) => {\n      return keepOnlyLeafModules(graph, await nodes)\n    },\n  )\n  getChildLeafNodes = () => this.childLeafNodesSelector(this.state, this.props)\n\n  modes = {\n    all: {\n      getNodes: this.getAllNodes,\n      renderTitle: () => 'All Nodes',\n      renderInfo: () => 'Select node to start from',\n      renderEmpty: () => 'Nothing found',\n    },\n    directChildren: {\n      getNodes: this.getDirectChildrenNodes,\n      renderTitle: () => 'Direct Children',\n      renderInfo: () => {\n        const {toNode} = this.props\n        if (!toNode) return null\n        return (\n          <>\n            Move down to direct children of <NodeName node={toNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No children found',\n    },\n    children: {\n      getNodes: this.getChildrenNodes,\n      renderTitle: () => 'All Children',\n      renderInfo: () => {\n        const {fromNode} = this.props\n        if (!fromNode) return null\n        return (\n          <>\n            Move down to children of <NodeName node={fromNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No children found',\n    },\n    childLeafs: {\n      getNodes: this.getChildLeafNodes,\n      renderTitle: () => 'Child Leaf Modules',\n      renderInfo: () => {\n        const {fromNode} = this.props\n        if (!fromNode) return null\n        return (\n          <>\n            Move down to child leaf modules of <NodeName node={fromNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No modules found',\n    },\n    leafs: {\n      getNodes: this.getLeafNodes,\n      renderTitle: () => 'Leaf Modules',\n      renderInfo: () => 'Select leaf module to finish at',\n      renderEmpty: () => 'No modules found',\n    },\n  }\n\n  render() {\n    const {classes, className, toNode, baseGraph, graph, onNodeSelect} = this.props\n\n    return (\n      <GraphExplorer\n        className={classNames(classes.root, className)}\n        modes={this.modes}\n        defaultMode={'children'}\n        baseGraph={baseGraph}\n        graph={graph}\n        onNodeSelect={onNodeSelect}\n        selected={toNode}\n      />\n    )\n  }\n}\n\nexport default withStyles(styles)(ChildrenExplorer)\n","// @flow\n\nimport type {Node, NodeID, Graph} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {createSelector} from 'reselect'\nimport {withStyles} from '@material-ui/core'\n\nimport {getNodes, getAllNodes} from '../../analysis/graph'\nimport GraphExplorer from './GraphExplorer'\nimport NodeName from './NodeName'\nimport {\n  getDeepNodeParents,\n  keepOnlyEntryModules,\n  keepOnlyLeafModules,\n} from '../../analysis/dependencies'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  fromNode: ?Node,\n  toNode: ?Node,\n  onNodeSelect: NodeID => void,\n\n  className?: string,\n  classes: Object,\n|}\n\nconst styles = {\n  root: {},\n}\n\nclass ParentsExplorer extends React.PureComponent<Props> {\n  allNodesSelector = createSelector((_, p) => p.graph, graph => getAllNodes(graph))\n  getAllNodes = () => this.allNodesSelector(this.state, this.props)\n\n  entryNodesSelector = createSelector(\n    (_, p) => p.graph,\n    graph => keepOnlyEntryModules(graph, getAllNodes(graph)),\n  )\n  getEntryNodes = () => this.entryNodesSelector(this.state, this.props)\n\n  leafNodesSelector = createSelector(\n    (_, p) => p.graph,\n    graph => keepOnlyLeafModules(graph, getAllNodes(graph)),\n  )\n  getLeafNodes = () => this.leafNodesSelector(this.state, this.props)\n\n  directParentNodesSelector = createSelector(\n    (_, p) => p.graph,\n    (_, p) => p.fromNode,\n    (graph, fromNode) => {\n      if (!fromNode) return []\n      return getNodes(graph, fromNode.parents)\n    },\n  )\n  getDirectParentNodes = () => this.directParentNodesSelector(this.state, this.props)\n\n  parentNodesSelector = createSelector(\n    (_, p) => p.graph,\n    (_, p) => p.toNode,\n    (graph, toNode) => {\n      if (!toNode) return []\n      return getDeepNodeParents(graph, toNode).then(ids => getNodes(graph, ids))\n    },\n  )\n  getParentNodes = () => this.parentNodesSelector(this.state, this.props)\n\n  parentEntryNodesSelector = createSelector(\n    (_, p) => p.graph,\n    this.parentNodesSelector,\n    async (graph, nodes) => {\n      return keepOnlyEntryModules(graph, await nodes)\n    },\n  )\n  getParentEntryNodes = () => this.parentEntryNodesSelector(this.state, this.props)\n\n  modes = {\n    all: {\n      getNodes: this.getAllNodes,\n      renderTitle: () => 'All Nodes',\n      renderInfo: () => 'Select node to start from',\n      renderEmpty: () => 'Nothing found',\n    },\n    directParents: {\n      getNodes: this.getDirectParentNodes,\n      renderTitle: () => 'Direct Parents',\n      renderInfo: () => {\n        const {fromNode} = this.props\n        if (!fromNode) return null\n        return (\n          <>\n            Move up to direct parents of <NodeName node={fromNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No parents found',\n    },\n    parents: {\n      getNodes: this.getParentNodes,\n      renderTitle: () => 'All Parents',\n      renderInfo: () => {\n        const {toNode} = this.props\n        if (!toNode) return null\n        return (\n          <>\n            Move up to parents of <NodeName node={toNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No parents found',\n    },\n    parentEntries: {\n      getNodes: this.getParentEntryNodes,\n      renderTitle: () => 'Parent Entry Points',\n      renderInfo: () => {\n        const {toNode} = this.props\n        if (!toNode) return null\n        return (\n          <>\n            Move up to parent entries of <NodeName node={toNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No entries found',\n    },\n    entries: {\n      getNodes: this.getEntryNodes,\n      renderTitle: () => 'Entry Modules',\n      renderInfo: () => 'Select entry module to start from',\n      renderEmpty: () => 'No modules found',\n    },\n  }\n\n  initialModes = {\n    initialAll: this.modes.all,\n    initialEntries: this.modes.entries,\n    initialLeafs: {\n      getNodes: this.getLeafNodes,\n      renderTitle: () => 'Leaf Modules',\n      renderInfo: () => 'Select modules without children',\n      renderEmpty: () => 'No modules found',\n    },\n  }\n\n  render() {\n    // const {} = this.state\n    const {classes, className, fromNode, toNode, baseGraph, graph, onNodeSelect} = this.props\n\n    return (\n      <GraphExplorer\n        className={classNames(classes.root, className)}\n        modes={fromNode && toNode ? this.modes : this.initialModes}\n        defaultMode={fromNode && toNode ? 'parents' : 'initialAll'}\n        baseGraph={baseGraph}\n        graph={graph}\n        onNodeSelect={onNodeSelect}\n        selected={fromNode}\n      />\n    )\n  }\n}\n\nexport default withStyles(styles)(ParentsExplorer)\n","// @flow\n\nimport type {Graph} from '../../analysis/graph'\nimport type {Change} from '../../analysis/changes'\n\nimport * as React from 'react'\nimport {without} from 'lodash'\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\nimport {\n  withStyles,\n  IconButton,\n  Icon,\n  List,\n  Toolbar,\n  Button,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core'\nimport {resolveEdgeForNodes, getNode} from '../../analysis/graph'\nimport EmptyBox from '../EmptyBox'\n\ntype Props = {|\n  graph: Graph,\n  changes: $ReadOnlyArray<Change>,\n  onUpdateChanges: ($ReadOnlyArray<Change>) => void,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {},\n  list: {\n    maxHeight: '70vh',\n    overflowY: 'auto',\n  },\n  delete: {},\n})\n\nclass ChangesView extends React.PureComponent<Props> {\n  render() {\n    const {classes, graph, changes, onUpdateChanges} = this.props\n    const textsToCopy = []\n    return (\n      <div>\n        <List className={classes.list}>\n          {changes.map((change, index) => {\n            const edge = resolveEdgeForNodes(graph, change.from, change.to)\n            if (!edge) return null\n            const fromNode = getNode(graph, edge.from)\n            const toNode = getNode(graph, edge.to)\n            const fromName = fromNode.file || fromNode.name || fromNode.id\n            const toName = edge.name || toNode.name || toNode.id\n            textsToCopy.push(`Remove \"${toName}\" from \"${fromName}\"`)\n            return (\n              <ListItem key={index} graph={graph} change={change}>\n                <IconButton\n                  aria-label=\"Delete\"\n                  className={classes.delete}\n                  onClick={() => onUpdateChanges(without(changes, change))}\n                >\n                  <Icon>delete</Icon>\n                </IconButton>\n                <ListItemText\n                  primary={\n                    <>\n                      Remove \"<b>{toName}</b>\" from \"<b>{fromName}</b>\"\n                    </>\n                  }\n                />\n                <ListItemSecondaryAction />\n              </ListItem>\n            )\n          })}\n          {changes.length === 0 && (\n            <EmptyBox icon={<Icon>block</Icon>}>\n              No changes applied. Try breaking links between dependencies\n            </EmptyBox>\n          )}\n        </List>\n        <Toolbar>\n          <Button onClick={() => onUpdateChanges([])}>Reset changes</Button>\n          {textsToCopy.length > 0 ? (\n            <CopyToClipboard text={textsToCopy.join('\\n\\n')}>\n              <Button>Copy to clipboard</Button>\n            </CopyToClipboard>\n          ) : null}\n        </Toolbar>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ChangesView)\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles, Icon} from '@material-ui/core'\n\ntype Props = {|\n  children: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.error.dark,\n    color: theme.palette.error.contrastText,\n    padding: '8px 24px 8px 24px',\n    display: 'flex',\n    alignItems: 'center',\n    flexShrink: 0,\n    justifyContent: 'center',\n  },\n  icon: {\n    'margin-right': 8,\n  },\n})\n\nconst ErrorBar = ({classes, children}: Props) => (\n  <div className={classes.root}>\n    <Icon className={classes.icon}>error</Icon>\n    <span className={classes.label}>{children}</span>\n  </div>\n)\n\nexport default withStyles(styles)(ErrorBar)\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles, Icon} from '@material-ui/core'\nimport orange from '@material-ui/core/colors/amber'\n\ntype Props = {|\n  children: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    background: orange.A700,\n    padding: '8px 24px 8px 24px',\n    display: 'flex',\n    alignItems: 'center',\n    flexShrink: 0,\n    justifyContent: 'center',\n  },\n  icon: {\n    'margin-right': 8,\n  },\n})\n\nconst WarningBar = ({classes, children}: Props) => (\n  <div className={classes.root}>\n    <Icon className={classes.icon}>warning</Icon>\n    <span className={classes.label}>{children}</span>\n  </div>\n)\n\nexport default withStyles(styles)(WarningBar)\n","// @flow\n\nimport {createGraph, addNode, getNodeId, addEdge} from './graph'\n\nimport type {Graph} from './graph'\n\nexport async function readWebpackStats(\n  stats: Object,\n  options?: {\n    includeAsyncImports?: boolean,\n    includeChunks?: boolean,\n  } = {},\n): Promise<Graph> {\n  const graph = createGraph()\n  const {includeAsyncImports = false, includeChunks = false} = options\n\n  const {chunks = [], modules = []} = stats\n\n  // create chunks\n  if (includeChunks) {\n    for (const chunk of chunks) {\n      addNode(graph, {\n        id: getNodeId('chunk', chunk.id),\n        kind: chunk.reason && chunk.reason.indexOf('split chunk') ? 'split-chunk' : 'chunk',\n        name: chunk.names[0],\n        size: 0,\n        original: chunk,\n      })\n      await graph.idle()\n    }\n  }\n\n  // create modules\n  for (const module of modules) {\n    if (module.id == null) {\n      // module has been removed at optimization phase (concatenated, tree-shaken, etc)\n      continue\n    }\n    const isConcat = module.name.indexOf(' + ') > 0\n    const isNamespace = module.name.indexOf(' namespace object') > 0\n    const kind = isConcat ? 'concat' : isNamespace ? 'namespace' : 'module'\n    addNode(graph, {\n      id: getNodeId('module', module.id),\n      kind,\n      name: module.name,\n      file: isConcat ? undefined : (module.name || '').replace(/^.*!/),\n      size: module.size,\n      original: module,\n    })\n    await graph.idle()\n  }\n\n  // create edges\n  for (const module of modules) {\n    if (includeChunks) {\n      for (const chunkId of module.chunks) {\n        addEdge(graph, {\n          from: getNodeId('chunk', chunkId),\n          to: getNodeId('module', module.id),\n          kind: 'chunk child',\n          original: module,\n        })\n      }\n    }\n    for (const reason of module.reasons) {\n      const type = reason.type || ''\n      if (reason.moduleId == null) {\n        // reason has been removed at optimization phase (concatenated, tree-shaken, etc)\n        continue\n      }\n      const async = type.indexOf('import()') >= 0 && type.indexOf('eager') < 0\n      if (async && includeAsyncImports === false) {\n        continue\n      }\n      addEdge(graph, {\n        from: getNodeId('module', reason.moduleId),\n        to: getNodeId('module', module.id),\n        kind: type,\n        name: reason.userRequest,\n        async,\n        original: reason,\n      })\n    }\n    await graph.idle()\n  }\n  return graph\n}\n","// @flow\n\nimport type {NodeID, Graph} from './analysis/graph'\nimport type {Change} from './analysis/changes'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {hot} from 'react-hot-loader'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Dropzone from 'react-dropzone'\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  CssBaseline,\n  withStyles,\n  Button,\n  Drawer,\n  Icon,\n} from '@material-ui/core'\n\nimport {readWebpackStats} from './analysis/webpack'\nimport {getNode, cloneGraph, resolveNode, abortGraph} from './analysis/graph'\nimport ChainsExplorer from './ui/graph/ChainsExplorer'\nimport {applyChanges, addChange} from './analysis/changes'\nimport WarningBar from './ui/WarningBar'\nimport ErrorBar from './ui/ErrorBar'\nimport ChangesView from './ui/graph/ChangesView'\nimport EmptyBox from './ui/EmptyBox'\nimport ParentsExplorer from './ui/graph/ParentsExplorer'\nimport ChildrenExplorer from './ui/graph/ChildrenExplorer'\n\ntype Props = {|\n  classes: Object,\n  theme: Object,\n|}\n\ntype State = {|\n  loading: boolean,\n  baseGraph: ?Graph,\n  graph: ?Graph,\n  error: any,\n\n  fromNodeId: ?NodeID,\n  toNodeId: ?NodeID,\n  changes: $ReadOnlyArray<Change>,\n  showChanges: boolean,\n|}\n\nconst styles = {\n  root: {\n    display: 'flex',\n    height: '100vh',\n    minWidth: 1200,\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n    fontFamily: ['Roboto', 'Helvetica', 'Arial', 'sans-serif'],\n  },\n  container: {\n    maxWidth: 2000,\n    minWidth: 1200,\n    width: '100vw',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  panes: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    justifyContent: 'space-between',\n    padding: '24px 24px 0 24px',\n  },\n  parentsExplorer: {\n    width: 250,\n    flexShrink: 0,\n    flexGrow: 0.2,\n    marginRight: 48,\n  },\n  pathsExplorer: {\n    flexShrink: 1,\n    flexGrow: 1,\n    marginRight: 48,\n  },\n  childrenExplorer: {\n    width: 250,\n    flexShrink: 0,\n    flexGrow: 0.2,\n  },\n  title: {\n    marginLeft: 'auto',\n    textTransform: 'uppercase',\n  },\n  search: {\n    color: '#fff',\n    borderBottom: '2px solid #fff',\n    width: 300,\n  },\n  dropzone: {},\n  openButton: {},\n  openFileMessage: {\n    textAlign: 'center',\n    width: '30em',\n    alignSelf: 'center',\n    margin: 'auto',\n    cursor: 'pointer',\n  },\n}\n\nclass App extends React.Component<Props, State> {\n  state = {\n    loading: false,\n    error: null,\n    baseGraph: null,\n    graph: null,\n    fromNodeId: null,\n    toNodeId: null,\n    changes: [],\n    showChanges: false,\n  }\n\n  dropzone: any\n\n  async componentDidMount() {\n    if (process.env.REACT_APP_STATS) {\n      this.openFile(async () => {\n        console.time('loading')\n        const result = await fetch(`./${process.env.REACT_APP_STATS || ''}`)\n        console.timeEnd('loading')\n        console.time('parsing')\n        const json = await result.json()\n        console.timeEnd('parsing')\n        return json\n      })\n    }\n  }\n\n  openFile = async callback => {\n    this.setState({\n      loading: true,\n      error: null,\n      baseGraph: null,\n      graph: null,\n      fromNodeId: null,\n      toNodeId: null,\n      changes: [],\n    })\n    try {\n      const json = await callback()\n      if (json === null) {\n        this.setState({loading: false})\n        return\n      }\n      console.time('conversion')\n      const graph = await readWebpackStats(json)\n      console.timeEnd('conversion')\n      console.log('Graph: ', graph)\n      console.warn('Errors found: ', graph.errors)\n      this.setState({loading: false, graph, baseGraph: graph})\n    } catch (error) {\n      console.error(error)\n      this.setState({loading: false, error})\n    }\n  }\n\n  handleDrop = ([file], [rejected]) => {\n    if (rejected) {\n      this.setState({error: 'Only webpack build stats in json format are accepted!'})\n      return\n    }\n    this.openFile(\n      () =>\n        new Promise((resolve, reject) => {\n          console.time('loading')\n          const reader = new FileReader()\n          reader.onload = () => {\n            console.timeEnd('loading')\n            console.time('parsing')\n            const json = JSON.parse((reader.result: any))\n            console.timeEnd('parsing')\n            resolve(json)\n          }\n          reader.onerror = () => {\n            console.timeEnd('loading')\n\n            reject('Could not read the file')\n          }\n          reader.readAsBinaryString(file)\n        }),\n    )\n  }\n\n  toggleShowChanges = () => {\n    this.setState({showChanges: !this.state.showChanges})\n  }\n\n  updateChanges = changes => {\n    const {baseGraph, graph} = this.state\n    if (!graph || !baseGraph) throw new Error('No graph available now')\n    const newGraph = cloneGraph(baseGraph)\n    // discard old graph\n    if (graph !== baseGraph) {\n      abortGraph(graph)\n    }\n    applyChanges(newGraph, changes)\n    this.setState({graph: newGraph, changes: changes})\n  }\n\n  addChange = (change: Change) => {\n    const {graph, changes} = this.state\n    if (!graph) throw new Error('No graph available now')\n    this.updateChanges(addChange(graph, changes, change))\n  }\n\n  resetNodesSelection = () => {\n    this.setState({fromNodeId: null, toNodeId: null})\n  }\n\n  selectFromNode = (fromNodeId: NodeID) => {\n    const {graph, toNodeId} = this.state\n    if (graph) console.log('Selected FROM node', getNode(graph, fromNodeId))\n    this.setState({fromNodeId, toNodeId: toNodeId || fromNodeId})\n  }\n\n  selectToNode = (toNodeId: NodeID) => {\n    const {graph} = this.state\n    if (graph) console.log('Selected TO node', getNode(graph, toNodeId))\n    this.setState({toNodeId})\n  }\n\n  renderGraph() {\n    const {baseGraph, graph, fromNodeId, toNodeId} = this.state\n    const {classes} = this.props\n    if (!graph || !baseGraph) return null\n    const fromNode = resolveNode(graph, fromNodeId)\n    const toNode = resolveNode(graph, toNodeId)\n    return (\n      <div className={classNames(classes.container, classes.panes)}>\n        <ParentsExplorer\n          className={classes.parentsExplorer}\n          baseGraph={baseGraph}\n          graph={graph}\n          toNode={toNode}\n          fromNode={fromNode}\n          onNodeSelect={this.selectFromNode}\n        />\n        {fromNode && toNode ? (\n          <ChainsExplorer\n            className={classes.pathsExplorer}\n            baseGraph={baseGraph}\n            graph={graph}\n            fromNode={fromNode}\n            toNode={toNode}\n            onSelectFromNode={this.selectFromNode}\n            onSelectToNode={this.selectToNode}\n            onAddChange={this.addChange}\n          />\n        ) : null}\n        {fromNode ? (\n          <ChildrenExplorer\n            className={classes.childrenExplorer}\n            baseGraph={baseGraph}\n            graph={graph}\n            toNode={toNode}\n            fromNode={fromNode}\n            onNodeSelect={this.selectToNode}\n          />\n        ) : null}\n      </div>\n    )\n  }\n\n  render() {\n    const {loading, error, graph, showChanges, changes, fromNodeId} = this.state\n    const {classes} = this.props\n    return (\n      <Dropzone\n        multiple={false}\n        activeClassName=\"\"\n        rejectClassName=\"\"\n        accept=\".json\"\n        onDrop={this.handleDrop}\n        className={classes.dropzone}\n        disableClick\n        ref={node => {\n          this.dropzone = node\n        }}\n      >\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"static\">\n            <Toolbar variant=\"regular\" className={classes.container}>\n              {!loading && (\n                <Button color=\"inherit\" onClick={() => this.dropzone.open()}>\n                  Open stats\n                </Button>\n              )}\n              {graph && (\n                <Button color=\"inherit\" onClick={this.toggleShowChanges}>\n                  See changes\n                  {changes.length ? ` (${changes.length})` : null}\n                </Button>\n              )}\n              {fromNodeId && (\n                <Button color=\"inherit\" onClick={this.resetNodesSelection}>\n                  Choose root node\n                </Button>\n              )}\n              <Typography variant=\"title\" color=\"inherit\" className={classes.title}>\n                Webpack Chop Shop\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {loading && <LinearProgress className={classes.progress} />}\n          {graph &&\n            graph.errors.length > 0 && (\n              <WarningBar>\n                There where {graph.errors.length} errors found. Check the console for more\n              </WarningBar>\n            )}\n          {error && <ErrorBar>{String(error)}</ErrorBar>}\n          {this.renderGraph()}\n          {!graph &&\n            !loading && (\n              <div onClick={() => this.dropzone.open()} className={classes.openFileMessage}>\n                <EmptyBox\n                  icon={\n                    <Icon color=\"inherit\" fontSize=\"default\">\n                      open_in_browser\n                    </Icon>\n                  }\n                >\n                  First,{' '}\n                  <a\n                    href=\"https://webpack.js.org/api/cli/#stats-options\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    generate the stats file in webpack\n                  </a>\n                  , then click here or drop it anywhere on the page to start\n                </EmptyBox>\n              </div>\n            )}\n          {graph && (\n            <Drawer anchor=\"top\" open={showChanges} onClose={this.toggleShowChanges}>\n              <div className={classes.container}>\n                <ChangesView graph={graph} changes={changes} onUpdateChanges={this.updateChanges} />\n              </div>\n            </Drawer>\n          )}\n        </div>\n      </Dropzone>\n    )\n  }\n}\n\nexport default hot(module)(withStyles(styles, {withTheme: true})(App))\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nconst rootEl = document.getElementById('root')\n\nregisterServiceWorker()\nReactDOM.render(<App />, rootEl)\n","// @flow\nimport type {Node} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {withStyles, Tooltip} from '@material-ui/core'\n\nimport {getModuleInfo} from '../../analysis/info'\n\ntype Props = {|\n  node: Node,\n  hidePackage?: boolean,\n  onlyPackage?: boolean,\n  tooltip?: boolean | string,\n  children?: React.Node,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    maxWidth: '100%',\n    display: 'inline-flex',\n    flexDirection: 'row',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  packageName: {\n    textOverflow: 'ellipsis',\n    flexShrink: 10,\n    overflow: 'hidden',\n  },\n  path: {\n    textOverflow: 'ellipsis',\n    flexShrink: 1000,\n    overflow: 'hidden',\n    minWidth: 10,\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    flexShrink: 1,\n    overflow: 'hidden',\n  },\n  extension: {\n    flexShrink: 0,\n  },\n})\n\nfunction NodeName({node, hidePackage, onlyPackage, tooltip, children, classes, className}: Props) {\n  // {selectFromNode && <a onClick={() => selectFromNode(node.id)}>From</a>}\n  // {selectToNode && <a onClick={() => selectToNode(node.id)}>To</a>}\n\n  const info = getModuleInfo(node)\n\n  const packageName = hidePackage ? '' : info.packageName\n  const path = onlyPackage ? '' : (info.path || '').replace(/^\\/|\\/$/g, '')\n  const name = onlyPackage ? '' : (info.name || '') + (info.extension || '')\n\n  const text = (\n    <span className={classNames(className, classes.root)}>\n      {packageName && <span className={classes.packageName}>{packageName}</span>}\n      {packageName && path ? '/' : ''}\n      {path && <span className={classes.path}>{path}</span>}\n      {(packageName || path) && name ? '/' : ''}\n      {name && <span className={classes.name}>{name}</span>}\n      {(packageName || name) && children ? <span>,&nbsp;</span> : ''}\n      {children && <span className={classes.children}>{children}</span>}\n    </span>\n  )\n\n  if (tooltip) {\n    return (\n      <Tooltip\n        title={typeof tooltip === 'boolean' ? `${node.name || ''} (${String(node.id)})` : tooltip}\n        placement=\"top\"\n        enterDelay={100}\n        disableFocusListener\n      >\n        {text}\n      </Tooltip>\n    )\n  }\n\n  return text\n}\nexport default withStyles(styles)(NodeName)\n","// @flow\n\nimport type {Graph, Node, NodeID} from './graph'\nimport {getNode} from './graph'\n\nasync function walkGraph(\n  graph: Graph,\n  node: Node,\n  options: {visited: {[NodeID]: boolean}, nodesKey: string},\n) {\n  options.visited[node.id] = true\n\n  for (const childId of node[options.nodesKey]) {\n    if (options.visited[childId]) continue\n    await walkGraph(graph, getNode(graph, childId), options)\n    await graph.idle()\n  }\n}\n\nexport function getDeepNodeChildren(graph: Graph, node: Node): Promise<$ReadOnlyArray<NodeID>> {\n  const key = `getDeepNodeChildren:${node.id}`\n  if (!graph.cache[key]) {\n    const visited = {}\n    graph.cache[key] = walkGraph(graph, node, {visited, nodesKey: 'children'}).then(() => {\n      // $FlowFixMe\n      delete visited[node.id]\n      return Object.keys(visited)\n    })\n  }\n  return graph.cache[key]\n}\n\nexport function getDeepNodeParents(graph: Graph, node: Node): Promise<$ReadOnlyArray<NodeID>> {\n  const key = `getDeepNodeParents:${node.id}`\n  if (!graph.cache[key]) {\n    const visited = {}\n    graph.cache[key] = walkGraph(graph, node, {visited, nodesKey: 'parents'}).then(() => {\n      // $FlowFixMe\n      delete visited[node.id]\n      return Object.keys(visited)\n    })\n  }\n  return graph.cache[key]\n}\n\nexport function keepOnlyEntryModules(graph: Graph, nodes: $ReadOnlyArray<Node>) {\n  return nodes.filter((node: Node) => {\n    if (node.kind !== 'module') return false\n    return node.parents.every(parentId => getNode(graph, parentId).kind !== 'module')\n  })\n}\n\nexport function keepOnlyLeafModules(graph: Graph, nodes: $ReadOnlyArray<Node>) {\n  return nodes.filter((node: Node) => {\n    if (node.kind !== 'module') return false\n    return node.children.length === 0\n  })\n}\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles} from '@material-ui/core'\n\ntype Props = {|\n  children: React.Node,\n  icon: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.text.secondary,\n    padding: 24,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexShrink: 0,\n    textAlign: 'center',\n  },\n  icon: {\n    'margin-bottom': 8,\n  },\n})\n\nconst EmptyBox = ({classes, children, icon}: Props) => (\n  <div className={classes.root}>\n    <div className={classes.icon}>{icon}</div>\n    <div>{children}</div>\n  </div>\n)\n\nexport default withStyles(styles)(EmptyBox)\n","// @flow\nimport {throttle} from 'lodash'\n\nexport const ABORTED = Symbol('Aborted')\n\n//\nexport const backgroundProcessor = () => {\n  let abort\n  let idleReject\n  const fn = throttle(\n    () =>\n      new Promise((resolve, reject) => {\n        if (abort) reject(abort())\n        idleReject = reject\n        setTimeout(resolve, 0)\n        // requestIdleCallback(resolve)\n      }),\n    16,\n  )\n  fn.abort = (err = ABORTED) => {\n    return new Promise(resolve => {\n      abort = () => {\n        resolve()\n        return err\n      }\n      if (idleReject) idleReject(abort())\n    })\n  }\n  return fn\n}\n","// @flow\n\nimport {mapValues} from 'lodash'\nimport {backgroundProcessor} from './utils'\n\nexport type NodeID = string\nexport type EdgeID = string\nexport type NodeKind = string\nexport type EdgeKind = string\n\nexport type EdgeSpec = {|\n  name?: string,\n  from: NodeID,\n  to: NodeID,\n  kind: EdgeKind,\n  async?: boolean,\n  enabled?: boolean,\n  // Original source object\n  original?: any,\n|}\n\nexport type Edge = {\n  ...EdgeSpec,\n  enabled: boolean,\n}\n\nexport type NodeSpec = {|\n  id: NodeID,\n  name?: string,\n  kind: NodeKind,\n  size: number,\n  file?: string,\n  // Original source object\n  original?: any,\n|}\n\nexport type Node = {\n  ...NodeSpec,\n  parents: Array<NodeID>,\n  children: Array<NodeID>,\n}\n\nexport type Graph = {|\n  nodes: {[NodeID]: Node},\n  edges: {[EdgeID]: Edge},\n  errors: Array<any>,\n  cache: Object,\n  idle: $Call<typeof backgroundProcessor>,\n|}\n\nexport function createGraph(): Graph {\n  return {\n    nodes: {},\n    edges: {},\n    errors: [],\n    cache: {},\n    idle: backgroundProcessor(),\n  }\n}\n\nexport function getNodeId(kind: string, id: string): NodeID {\n  return `${kind}:${id}`\n}\nexport function getEdgeId(from: NodeID, to: NodeID): EdgeID {\n  return `${from}->${to}`\n}\n\nexport function getNode(graph: Graph, id: NodeID): Node {\n  const node = graph.nodes[id]\n  if (!node) throw new Error(`Node ${id} not found`)\n  return node\n}\n\nexport function resolveNode(graph: Graph, id: ?NodeID): ?Node {\n  if (!id) return null\n  return graph.nodes[id] || null\n}\n\nexport function getEdge(graph: Graph, id: EdgeID): Edge {\n  const edge = graph.edges[id]\n  if (!edge) throw new Error(`Edge ${id} not found`)\n  return edge\n}\n\nexport function resolveEdge(graph: Graph, id: ?EdgeID): ?Edge {\n  if (!id) return null\n  return graph.edges[id] || null\n}\n\nexport function resolveEdgeForNodes(graph: Graph, from: ?NodeID, to: ?NodeID): ?Edge {\n  if (!from || !to) return null\n  return graph.edges[getEdgeId(from, to)]\n}\n\nexport function getNodes(graph: Graph, ids: $ReadOnlyArray<NodeID>): $ReadOnlyArray<Node> {\n  return ids.map(getNode.bind(null, graph))\n}\n\nexport function getAllNodes(graph: Graph): $ReadOnlyArray<Node> {\n  return (Object.values(graph.nodes): any)\n}\n\nexport function getEdges(graph: Graph, ids: $ReadOnlyArray<EdgeID>): $ReadOnlyArray<Edge> {\n  return ids.map(getEdge.bind(null, graph))\n}\n\nexport function getChildren(graph: Graph, node: Node): $ReadOnlyArray<Edge> {\n  return getEdges(graph, node.children.map(to => getEdgeId(node.id, to)))\n}\n\nexport function getParents(graph: Graph, node: Node): $ReadOnlyArray<Edge> {\n  return getEdges(graph, node.parents.map(from => getEdgeId(from, node.id)))\n}\n\nexport function addNode(graph: Graph, _node: NodeSpec): Node {\n  const node = {parents: [], children: [], ..._node}\n  if (graph.nodes[node.id]) throw new Error(`Node ${node.id} already in graph`)\n  graph.nodes[node.id] = node\n  return node\n}\n\nexport function addEdge(graph: Graph, _edge: EdgeSpec): Edge {\n  const edge = {enabled: true, ..._edge}\n  const id = getEdgeId(edge.from, edge.to)\n  if (graph.edges[id]) {\n    // graph.errors.push({\n    // message: 'Edge already in graph',\n    // edge,\n    // graphEdge: graph.edges[id],\n    // })\n    return graph.edges[id]\n  }\n  graph.edges[id] = edge\n  const from = getNode(graph, edge.from)\n  const to = getNode(graph, edge.to)\n  if (edge.enabled) {\n    from.children.push(edge.to)\n    to.parents.push(edge.from)\n  }\n  return edge\n}\n\nexport function toggleEdge(graph: Graph, edge: Edge, enabled: boolean) {\n  if (edge.enabled === enabled) return\n  const from = getNode(graph, edge.from)\n  const to = getNode(graph, edge.to)\n  if (enabled) {\n    from.children.push(edge.to)\n    to.parents.push(edge.from)\n  } else {\n    from.children = from.children.filter(id => id !== edge.to)\n    to.parents = to.parents.filter(id => id !== edge.from)\n  }\n  edge.enabled = enabled\n}\n\nexport function abortGraph(graph: Graph) {\n  return graph.idle.abort()\n}\n\nexport function cloneGraph(graph: Graph): Graph {\n  const newGraph = {\n    nodes: mapValues(graph.nodes, node => ({\n      ...node,\n      parents: [...node.parents],\n      children: [...node.children],\n    })),\n    edges: mapValues(graph.edges, edge => ({...edge})),\n    errors: [...graph.errors],\n    cache: {},\n    idle: backgroundProcessor(),\n  }\n  return newGraph\n}\n"],"sourceRoot":""}