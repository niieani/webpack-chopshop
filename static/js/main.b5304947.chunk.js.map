{"version":3,"sources":["analysis/size.js","ui/graph/NodeSize.js","analysis/info.js","ui/graph/NodeItem.js","ui/tree.js","ui/graph/NodeList.js","ui/graph/GraphExplorer.js","ui/Dot.js","analysis/utils.js","analysis/graph.js","analysis/changes.js","analysis/chains.js","ui/ErrorBox.js","ui/graph/NodeCard.js","ui/graph/EdgeLinkButton.js","ui/graph/ChainItem.js","ui/graph/ChainsList.js","ui/graph/ChainsExplorer.js","ui/graph/ChangesView.js","ui/ErrorBar.js","ui/WarningBar.js","analysis/webpack.js","App.js","registerServiceWorker.js","index.js","ui/graph/NodeName.js","ui/EmptyBox.js","analysis/dependencies.js"],"names":["calculateTreeSize","graph","node","key","id","cache","Object","dependencies","then","tree","reduce","sum","analysis_graph","size","__webpack_exports__","core_styles","theme","bigger","color","red_default","a","A700","smaller","green_default","_ref","baseGraph","classes","react","react_promise_es","promise","Promise","all","_ref2","_ref3","_slicedToArray","baseTreeSize","treeSize","numeral_default","format","className","Math","abs","pending","FILENAME_RE","getModuleInfo","file","name","String","found","match","pathToPackage","packageName","path","extension","getPackageName","graph_NodeItem","styles","root","paddingLeft","checked","onClick","style","selectFromNode","selectToNode","selectNode","children","_ref$secondaryActions","secondaryActions","index_es","dense","disableGutters","ContainerComponent","button","classnames_default","primary","NodeName","hidePackage","tooltip","primaryTypographyProps","noWrap","secondary","NodeSize","map","action","index","defaultGetChildren","row","defaultGetKey","isTreeExpanded","state","_options$getKey","arguments","length","undefined","getKey","expanded","indexOf","toggleTreeRowState","options","expand","current","_options$getKey2","_objectSpread","concat","filter","e","toggleTreeRow","treeOptions","group","NodeList_NodeList","search","fuseSelector","lib","_","p","nodes","fuse_default","keys","searchSelector","_this","s","fuse","list","groupSelector","sortGroupsBySize","groups","lodash","kind","info","nodesSelector","flattenTreeToRows","result","_options$getChildren","getChildren","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","push","apply","_toConsumableArray","err","return","_this2","this","_this$props","props","renderItem","renderEmpty","listContainer","es","width","height","rowCount","rowHeight","rowRenderer","setState","divider","noRowsRenderer","_this3","_this$props2","loading","type","onChange","el","target","endAdornment","position","aria-label","placeholder","listProgress","renderList","graph_NodeList","display","flexDirection","justifyContent","flexGrow","outline","GraphExplorer_GraphExplorer","walkParents","ids","resolve","values","selected","_this$props$emptyMess","emptyMessage","onNodeSelect","itemProps","assign","EmptyBox","icon","header","dependenciesPromise","marginTop","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","background","palette","dark","contrastText","alignItems","flexShrink","borderRadius","textAlign","react__WEBPACK_IMPORTED_MODULE_0__","ABORTED","utils_backgroundProcessor","abort","idleReject","fn","reject","setTimeout","createGraph","edges","errors","idle","getNodeId","getEdgeId","from","to","getNode","Error","resolveNode","resolveEdgeForNodes","getNodes","bind","addNode","_node","parents","addEdge","_edge","edge","enabled","toggleEdge","abortGraph","cloneGraph","MOCKED_EDGE_KIND","addChange","changes","change","newChanges","lodash__WEBPACK_IMPORTED_MODULE_0__","_graph__WEBPACK_IMPORTED_MODULE_1__","wasOriginallyEnabled","applyChanges","fromNode","toNode","message","gatherChains","_callee","toId","visited","currentPath","paths","childId","regenerator_default","wrap","_context","prev","abrupt","sent","t0","finish","stop","_callee2","_context2","ui_ErrorBox","error","padding","align-items","flex-shrink","margin-right","label","NodeCard_NodeCard","actions","card","variant","onlyPackage","disableActionSpacing","expandOpen","in","gutterBottom","graph_NodeCard","marginBottom","edgeButton","left","top","transform","transition","transitions","create","duration","shortest","marginLeft","breakpoints","up","marginRight","EdgeLinkButton_EdgeLinkButton","title","disableFocusListener","placement","enterDelay","graph_EdgeLinkButton","graph_ChainItem","link","chain","through","graph_ChainsList","chains","selectedChain","onChainSelect","usedIds","finalChains","ChainsList_toConsumableArray","_finalChains$index","every","ChainsExplorer_ChainsExplorer","chainsPromiseSelector","_x6","_x7","_x8","_findChains","findChains","_waitingForChainsPromise","renderSelectedChain","onAddChange","onSelectFromNode","onSelectToNode","isFirst","isLast","prevNode","renderChains","chainsList","componentDidUpdate","prevProps","baseGraphChanged","_this$props3","currentFrom","currentTo","prevFrom","prevTo","fromToIdChanged","chainsPromise","_this$props4","catch","selectedChainScroll","overflowY","ChangesView","onUpdateChanges","textsToCopy","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_analysis_graph__WEBPACK_IMPORTED_MODULE_5__","fromName","toName","delete","lodash__WEBPACK_IMPORTED_MODULE_1__","_EmptyBox__WEBPACK_IMPORTED_MODULE_6__","react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_2__","text","join","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","maxHeight","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_colors_amber__WEBPACK_IMPORTED_MODULE_3___default","readWebpackStats","_x","_readWebpackStats","stats","_args2","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_asyncToGenerator","mark","_options$includeAsync","includeAsyncImports","_options$includeChunk","includeChunks","_stats$chunks","chunks","_stats$modules","modules","chunk","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","module","isConcat","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_module","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","chunkId","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","reason","async","names","original","replace","t1","t2","reasons","moduleId","userRequest","t3","t4","App","fromNodeId","toNodeId","showChanges","dropzone","openFile","callback","json","_graph","console","time","_analysis_webpack__WEBPACK_IMPORTED_MODULE_8__","timeEnd","log","warn","handleDrop","reader","FileReader","onload","JSON","parse","onerror","readAsBinaryString","toggleShowChanges","updateChanges","_this$state","newGraph","_analysis_graph__WEBPACK_IMPORTED_MODULE_9__","_analysis_changes__WEBPACK_IMPORTED_MODULE_11__","_this$state2","resetNodesSelection","_this$state3","react__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2___default","container","panes","_ui_graph_GraphExplorer__WEBPACK_IMPORTED_MODULE_14__","parentsExplorer","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_ui_Dot__WEBPACK_IMPORTED_MODULE_15__","_ui_graph_NodeName__WEBPACK_IMPORTED_MODULE_16__","_ui_graph_ChainsExplorer__WEBPACK_IMPORTED_MODULE_10__","pathsExplorer","childrenExplorer","_this$state4","react_dropzone__WEBPACK_IMPORTED_MODULE_5__","multiple","activeClassName","rejectClassName","accept","onDrop","disableClick","ref","open","_material_ui_core_LinearProgress__WEBPACK_IMPORTED_MODULE_4___default","progress","_ui_WarningBar__WEBPACK_IMPORTED_MODULE_12__","_ui_ErrorBar__WEBPACK_IMPORTED_MODULE_13__","renderGraph","openFileMessage","_ui_EmptyBox__WEBPACK_IMPORTED_MODULE_18__","fontSize","href","rel","anchor","onClose","_ui_graph_ChangesView__WEBPACK_IMPORTED_MODULE_17__","react_hot_loader__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","flex-direction","justify-content","font-family","maxWidth","minWidth","textTransform","borderBottom","openButton","alignSelf","margin","cursor","withTheme","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","rootEl","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","react_dom_default","render","react_default","createElement","whiteSpace","overflow","textOverflow","_analysis_info__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_1___default","margin-bottom","walkGraph","nodesKey","getDeepNodeChildren","getDeepNodeParents"],"mappings":"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","file":"static/js/main.b5304947.chunk.js","sourcesContent":["// @flow\n\nimport type {Graph, Node, NodeID} from './graph'\nimport {getNode} from './graph'\nimport {getDeepNodeChildren} from './dependencies'\n\nexport type EdgePath = NodeID[]\n\nexport function calculateTreeSize(graph: Graph, node: Node): Promise<number> {\n  const key = `calculateTreeSize:${node.id}`\n\n  if (!graph.cache[key]) {\n    graph.cache[key] = getDeepNodeChildren(graph, node).then(tree =>\n      tree.reduce((sum, id) => sum + getNode(graph, id).size, node.size),\n    )\n  }\n  return graph.cache[key]\n}\n","// @flow\nimport type {Graph, Node} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport numeral from 'numeral'\nimport Async from 'react-promise'\nimport {withStyles} from '@material-ui/core'\nimport red from '@material-ui/core/colors/red'\nimport green from '@material-ui/core/colors/green'\n\nimport {calculateTreeSize} from '../../analysis/size'\nimport {getNode} from '../../analysis/graph'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  node: Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  bigger: {\n    color: red.A700,\n  },\n  smaller: {\n    color: green.A700,\n  },\n})\n\nfunction NodeSize({baseGraph, graph, node, classes}: Props) {\n  return (\n    <Async\n      promise={Promise.all([\n        baseGraph && calculateTreeSize(baseGraph, getNode(baseGraph, node.id)),\n        calculateTreeSize(graph, node),\n      ])}\n      then={([baseTreeSize, treeSize]) => (\n        <>\n          {numeral(node.size).format('0[.]0b')}\n          {' + '}\n          {numeral(treeSize - node.size).format('0[.]0b')}\n          {baseTreeSize != null && treeSize !== baseTreeSize ? (\n            <span className={treeSize > baseTreeSize ? classes.bigger : classes.smaller}>\n              {' ('}\n              {treeSize > baseTreeSize ? '+' : '-'}\n              {numeral(Math.abs(treeSize - baseTreeSize)).format('0[.]0b')}\n              {')'}\n            </span>\n          ) : null}\n        </>\n      )}\n      pending={'...'}\n    />\n  )\n}\nexport default withStyles(styles)(NodeSize)\n","// @flow\n\nimport type {Node, NodeID} from './graph'\n\nexport type EdgePath = NodeID[]\n\n// https://regex101.com/r/yU5wqf/2\n// 1 - path to packages dir (null if no package)\n// 2 - package name (null if no package)\n// 3 - directory in package\n// 4 - filename\n// 5 - extension\nconst FILENAME_RE = /^(?:(.*\\/(?:node_modules|web_modules|packages|~)\\/)((?:@[^/]+?\\/)?[^/]+))?(.*?\\/)?([^/]+)?(\\.[^./]+)?$/\n\ntype ModuleInfo = {|\n  pathToPackage?: string,\n  packageName?: string,\n  path?: string,\n  name?: string,\n  extension?: string,\n|}\n\nexport function getModuleInfo({file, name, id}: Node): ModuleInfo {\n  if (!file) {\n    return {name: name || String(id) || '(unknown)'}\n  }\n  const found = file.match(FILENAME_RE)\n  if (!found) {\n    return {path: file}\n  }\n  return {\n    pathToPackage: found[1],\n    packageName: found[2],\n    path: found[3],\n    name: found[4],\n    extension: found[5],\n  }\n}\n\nexport function getPackageName({file}: Node): string {\n  if (!file) return ''\n  const found = file.match(FILENAME_RE)\n  return found ? found[2] : ''\n}\n\nexport function getPackageRelativeFilePath(node: Node): string {\n  const {file} = node\n  if (!file) return ''\n  const pkg = getPackageName(node)\n  if (!pkg) return ''\n  return file.slice(file.indexOf(pkg) + pkg.length + 1)\n}\n\nexport function isExternal({file}: Node): boolean {\n  if (!file) return false\n  return file.indexOf('/node_modules/') >= 0\n}\n\nexport function getFileExtension({file}: Node): string {\n  if (!file) return ''\n  const dot = file.lastIndexOf('.')\n  if (dot <= 0) return ''\n  return file.slice(dot + 1)\n}\n","// @flow\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {withStyles, ListItem, ListItemText, ListItemSecondaryAction} from '@material-ui/core'\nimport NodeSize from './NodeSize'\nimport NodeName from './NodeName'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  checked?: boolean,\n  node: Node,\n  secondaryActions?: React.Node[],\n  selectFromNode?: (node: NodeID) => void,\n  selectToNode?: (node: NodeID) => void,\n  onClick?: () => void,\n  style?: Object,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    paddingLeft: 16,\n  },\n})\n\nfunction NodeItem({\n  baseGraph,\n  graph,\n  checked,\n  onClick,\n  node,\n  selectFromNode,\n  selectToNode,\n  selectNode,\n  style,\n  children,\n  classes,\n  className,\n  secondaryActions = [],\n}: Props) {\n  // {selectFromNode && <a onClick={() => selectFromNode(node.id)}>From</a>}\n  // {selectToNode && <a onClick={() => selectToNode(node.id)}>To</a>}\n\n  return (\n    <div style={style}>\n      <ListItem\n        dense\n        disableGutters\n        ContainerComponent=\"div\"\n        button={!!onClick}\n        onClick={onClick}\n        className={classNames(className, classes.root)}\n      >\n        <ListItemText\n          primary={<NodeName node={node} hidePackage tooltip />}\n          primaryTypographyProps={{noWrap: true, color: checked ? 'secondary' : 'default'}}\n          secondary={<NodeSize baseGraph={baseGraph} graph={graph} node={node} />}\n        />\n        {secondaryActions.map((action, index) => (\n          <ListItemSecondaryAction key={index}>{action}</ListItemSecondaryAction>\n        ))}\n      </ListItem>\n    </div>\n  )\n}\nexport default withStyles(styles)(NodeItem)\n","// @flow\n\ntype TreeState = {\n  expanded: $ReadOnlyArray<any>,\n}\n\ntype TreeOptions = {\n  getChildren?: any => $ReadOnlyArray<any>,\n  getKey?: any => any,\n}\n\nconst defaultGetChildren = row => row.children\nconst defaultGetKey = row => row\n\nexport function isTreeExpanded(state: TreeState, row: any, options?: TreeOptions = {}): boolean {\n  const {getKey = defaultGetKey} = options\n  return state.expanded.indexOf(getKey(row)) >= 0\n}\n\n// Flattens a tree of items into a flat set of rows, which can be then used in any list rendering lib\nexport function flattenTreeToRows(\n  tree: any,\n  state: TreeState,\n  options?: TreeOptions = {},\n): $ReadOnlyArray<any> {\n  const result = []\n  const {getChildren = defaultGetChildren} = options\n  for (const row of tree) {\n    result.push(row)\n    if (isTreeExpanded(state, row, options)) {\n      const children = getChildren(row)\n      result.push(...flattenTreeToRows(children, state, options))\n    }\n  }\n  return result\n}\n\nexport function toggleTreeRow(\n  state: TreeState,\n  row: any,\n  options?: TreeOptions = {},\n  expand?: boolean,\n): TreeState {\n  const current = isTreeExpanded(state, row, options)\n  if (expand == null) {\n    expand = !current\n  }\n  if (expand === current) return state\n  const {getKey = defaultGetKey} = options\n  const key = getKey(row)\n  if (expand) {\n    return {...state, expanded: [...state.expanded, key]}\n  } else {\n    return {...state, expanded: state.expanded.filter(e => e !== key)}\n  }\n}\n\nexport const toggleTreeRowState = (row: any, options?: TreeOptions = {}) => (state: TreeState) =>\n  toggleTreeRow(state, row, options)\n","// @flow\n\nimport numeral from 'numeral'\n\nimport * as React from 'react'\nimport Fuse from 'fuse.js'\nimport {groupBy, map, sortBy, sumBy} from 'lodash'\n\nimport {List, AutoSizer} from 'react-virtualized'\nimport {\n  withStyles,\n  Input,\n  InputAdornment,\n  IconButton,\n  Icon,\n  ListItem,\n  ListItemText,\n  LinearProgress,\n} from '@material-ui/core'\nimport classNames from 'classnames'\nimport {createSelector} from 'reselect'\n\nimport type {Node, Graph} from '../../analysis/graph'\nimport {flattenTreeToRows, toggleTreeRowState, isTreeExpanded} from '../tree'\nimport {getPackageName} from '../../analysis/info'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  nodes: $ReadOnlyArray<Node>,\n  renderItem: any => React.Node,\n  renderEmpty: any => React.Node,\n  search?: string,\n  selected?: ?Node,\n  sortGroupsBySize?: boolean,\n  loading?: boolean,\n  classes: Object,\n  className?: string,\n|}\n\ntype State = {\n  search: string,\n  expanded: $ReadOnlyArray<any>,\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n  },\n  search: {},\n  listContainer: {\n    flexGrow: 1,\n    position: 'relative',\n  },\n  list: {\n    outline: 0,\n  },\n})\n\nconst treeOptions = {getKey: group => group.name}\n\nclass NodeList extends React.PureComponent<Props, State> {\n  state = {\n    search: '',\n    expanded: [],\n  }\n  fuseSelector = createSelector(\n    (_, p) => p.nodes,\n    nodes => {\n      return new Fuse(nodes, {\n        keys: ['name', 'id', 'kind'],\n      })\n    },\n  )\n  searchSelector = createSelector(\n    this.fuseSelector,\n    s => s.search,\n    (fuse, search) => {\n      return search ? fuse.search(search) : fuse.list\n    },\n  )\n  groupSelector = createSelector(\n    this.searchSelector,\n    (_, p) => p.sortGroupsBySize,\n    (nodes, sortGroupsBySize) => {\n      const groups = groupBy(nodes, node => {\n        if (node.kind === 'module') {\n          return getPackageName(node) || '(root modules)'\n        }\n        return `(${node.kind}s)`\n      })\n      return sortBy(\n        map(groups, (children, name) => ({\n          name,\n          children: sortBy(children, 'file'),\n          size: sumBy(children, 'size'),\n          group: true,\n        })),\n        sortGroupsBySize ? group => -group.size : 'name',\n      )\n    },\n  )\n  nodesSelector = createSelector(\n    this.groupSelector,\n    s => s.expanded,\n    (tree, expanded) => {\n      return flattenTreeToRows(tree, {expanded}, treeOptions)\n    },\n  )\n\n  renderList() {\n    const {classes, baseGraph, graph, renderItem, renderEmpty} = this.props\n    const nodes = this.nodesSelector(this.state, this.props)\n\n    return (\n      <div className={classes.listContainer}>\n        <AutoSizer>\n          {({width, height}) => (\n            <List\n              className={classes.list}\n              width={width}\n              height={height}\n              rowCount={nodes.length}\n              rowHeight={54}\n              rowRenderer={({index, style}) => {\n                const node = nodes[index]\n                if (node.group) {\n                  return (\n                    <ListItem\n                      dense\n                      ContainerComponent=\"div\"\n                      button\n                      onClick={() => this.setState(toggleTreeRowState(node, treeOptions))}\n                      disableGutters\n                      style={style}\n                      key={node.name}\n                      divider\n                    >\n                      <ListItemText\n                        primary={node.name}\n                        secondary={`${numeral(node.size).format('0.0b')} in ${\n                          node.children.length\n                        }`}\n                      />\n                      <Icon>\n                        {isTreeExpanded(this.state, node, treeOptions)\n                          ? 'expand_less'\n                          : 'expand_more'}\n                      </Icon>\n                    </ListItem>\n                  )\n                }\n                return renderItem({node, key: node.id, baseGraph, graph, style})\n              }}\n              noRowsRenderer={renderEmpty}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    )\n  }\n\n  render() {\n    const {classes, className, loading} = this.props\n    const {search} = this.state\n    return (\n      <div className={classNames(className, classes.root)}>\n        <Input\n          className={classes.search}\n          id=\"adornment-password\"\n          type=\"text\"\n          value={search}\n          onChange={el => this.setState({search: el.target.value})}\n          endAdornment={\n            search && (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"Clear search\"\n                  onClick={() => this.setState({search: ''})}\n                >\n                  <Icon color=\"inherit\">clear</Icon>\n                </IconButton>\n              </InputAdornment>\n            )\n          }\n          placeholder=\"Search\"\n        />\n        {loading ? <LinearProgress className={classes.listProgress} /> : this.renderList()}\n      </div>\n    )\n  }\n}\n//scrollToIndex={scrollToIndex >= 0 ? scrollToIndex : null}\nexport default withStyles(styles)(NodeList)\n","// @flow\n\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {createSelector} from 'reselect'\nimport Async from 'react-promise'\nimport {withStyles, Icon} from '@material-ui/core'\n\nimport {getDeepNodeChildren, getDeepNodeParents} from '../../analysis/dependencies'\nimport {getNodes} from '../../analysis/graph'\nimport EmptyBox from '../EmptyBox'\nimport NodeItem from './NodeItem'\nimport NodeList from './NodeList'\n\nexport type Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  header: React.Node,\n  node: ?Node,\n  selected: ?Node,\n  walkParents?: boolean,\n  emptyMessage?: string,\n  onNodeSelect: NodeID => void,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n  },\n  list: {\n    flexGrow: 1,\n  },\n  listProgress: {\n    marginTop: 16,\n  },\n})\n\nclass GraphExplorer extends React.PureComponent<Props> {\n  nodesSelector = createSelector(\n    (_, p) => p.graph,\n    (_, p) => p.node,\n    (_, p) => p.walkParents,\n    (graph, node, walkParents) => {\n      if (!node) {\n        return Promise.resolve(Object.values(graph.nodes))\n      }\n      const promise = walkParents\n        ? getDeepNodeParents(graph, node)\n        : getDeepNodeChildren(graph, node)\n      return promise.then(ids => getNodes(graph, ids))\n    },\n  )\n\n  renderList(nodes) {\n    const {\n      classes,\n      baseGraph,\n      graph,\n      selected,\n      emptyMessage = 'No nodes found',\n      onNodeSelect,\n    } = this.props\n    return (\n      <NodeList\n        className={classes.list}\n        nodes={nodes || []}\n        loading={nodes == null}\n        baseGraph={baseGraph}\n        graph={graph}\n        selected={selected}\n        sortGroupsBySize\n        renderItem={itemProps => (\n          <NodeItem\n            {...itemProps}\n            onClick={() => onNodeSelect(itemProps.node.id)}\n            checked={selected ? selected.id === itemProps.node.id : false}\n          />\n        )}\n        renderEmpty={() => <EmptyBox icon={<Icon>block</Icon>}>{emptyMessage}</EmptyBox>}\n      />\n    )\n  }\n\n  render() {\n    const {header, className, classes} = this.props\n\n    const dependenciesPromise = this.nodesSelector(null, this.props)\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        {header}\n        <Async\n          promise={dependenciesPromise}\n          then={nodes => this.renderList(nodes)}\n          pending={() => this.renderList(null)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(GraphExplorer)\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles} from '@material-ui/core'\n\ntype Props = {|\n  classes: Object,\n  children: React.Node,\n|}\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.primary.dark,\n    color: theme.palette.primary.contrastText,\n    width: '1em',\n    height: '1em',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexShrink: 0,\n    borderRadius: '100%',\n    textAlign: 'center',\n  },\n})\n\nconst Dot = ({classes, children}: Props) => <div className={classes.root}>{children}</div>\n\nexport default withStyles(styles)(Dot)\n","// @flow\nimport {throttle} from 'lodash'\n\nexport const ABORTED = Symbol('Aborted')\n\n//\nexport const backgroundProcessor = () => {\n  let abort\n  let idleReject\n  const fn = throttle(\n    () =>\n      new Promise((resolve, reject) => {\n        if (abort) reject(abort())\n        idleReject = reject\n        setTimeout(resolve, 0)\n        // requestIdleCallback(resolve)\n      }),\n    16,\n  )\n  fn.abort = (err = ABORTED) => {\n    return new Promise(resolve => {\n      abort = () => {\n        resolve()\n        return err\n      }\n      if (idleReject) idleReject(abort())\n    })\n  }\n  return fn\n}\n","// @flow\n\nimport {mapValues} from 'lodash'\nimport {backgroundProcessor} from './utils'\n\nexport type NodeID = string\nexport type EdgeID = string\nexport type NodeKind = string\nexport type EdgeKind = string\n\nexport type EdgeSpec = {|\n  name?: string,\n  from: NodeID,\n  to: NodeID,\n  kind: EdgeKind,\n  async?: boolean,\n  enabled?: boolean,\n  // Original source object\n  original?: any,\n|}\n\nexport type Edge = {\n  ...EdgeSpec,\n  enabled: boolean,\n}\n\nexport type NodeSpec = {|\n  id: NodeID,\n  name?: string,\n  kind: NodeKind,\n  size: number,\n  file?: string,\n  // Original source object\n  original?: any,\n|}\n\nexport type Node = {\n  ...NodeSpec,\n  parents: Array<NodeID>,\n  children: Array<NodeID>,\n}\n\nexport type Graph = {|\n  nodes: {[NodeID]: Node},\n  edges: {[EdgeID]: Edge},\n  errors: Array<any>,\n  cache: Object,\n  idle: $Call<typeof backgroundProcessor>,\n|}\n\nexport function createGraph(): Graph {\n  return {\n    nodes: {},\n    edges: {},\n    errors: [],\n    cache: {},\n    idle: backgroundProcessor(),\n  }\n}\n\nexport function getNodeId(kind: string, id: string): NodeID {\n  return `${kind}:${id}`\n}\nexport function getEdgeId(from: NodeID, to: NodeID): EdgeID {\n  return `${from}->${to}`\n}\n\nexport function getNode(graph: Graph, id: NodeID): Node {\n  const node = graph.nodes[id]\n  if (!node) throw new Error(`Node ${id} not found`)\n  return node\n}\n\nexport function resolveNode(graph: Graph, id: ?NodeID): ?Node {\n  if (!id) return null\n  return graph.nodes[id] || null\n}\n\nexport function getEdge(graph: Graph, id: EdgeID): Edge {\n  const edge = graph.edges[id]\n  if (!edge) throw new Error(`Edge ${id} not found`)\n  return edge\n}\n\nexport function resolveEdge(graph: Graph, id: ?EdgeID): ?Edge {\n  if (!id) return null\n  return graph.edges[id] || null\n}\n\nexport function resolveEdgeForNodes(graph: Graph, from: ?NodeID, to: ?NodeID): ?Edge {\n  if (!from || !to) return null\n  return graph.edges[getEdgeId(from, to)]\n}\n\nexport function getNodes(graph: Graph, ids: $ReadOnlyArray<NodeID>): $ReadOnlyArray<Node> {\n  return ids.map(getNode.bind(null, graph))\n}\n\nexport function getEdges(graph: Graph, ids: $ReadOnlyArray<EdgeID>): $ReadOnlyArray<Edge> {\n  return ids.map(getEdge.bind(null, graph))\n}\n\nexport function getChildren(graph: Graph, node: Node): $ReadOnlyArray<Edge> {\n  return getEdges(graph, node.children.map(to => getEdgeId(node.id, to)))\n}\n\nexport function getParents(graph: Graph, node: Node): $ReadOnlyArray<Edge> {\n  return getEdges(graph, node.parents.map(from => getEdgeId(from, node.id)))\n}\n\nexport function addNode(graph: Graph, _node: NodeSpec): Node {\n  const node = {parents: [], children: [], ..._node}\n  if (graph.nodes[node.id]) throw new Error(`Node ${node.id} already in graph`)\n  graph.nodes[node.id] = node\n  return node\n}\n\nexport function addEdge(graph: Graph, _edge: EdgeSpec): Edge {\n  const edge = {enabled: true, ..._edge}\n  const id = getEdgeId(edge.from, edge.to)\n  if (graph.edges[id]) {\n    // graph.errors.push({\n    // message: 'Edge already in graph',\n    // edge,\n    // graphEdge: graph.edges[id],\n    // })\n    return graph.edges[id]\n  }\n  graph.edges[id] = edge\n  const from = getNode(graph, edge.from)\n  const to = getNode(graph, edge.to)\n  if (edge.enabled) {\n    from.children.push(edge.to)\n    to.parents.push(edge.from)\n  }\n  return edge\n}\n\nexport function toggleEdge(graph: Graph, edge: Edge, enabled: boolean) {\n  if (edge.enabled === enabled) return\n  const from = getNode(graph, edge.from)\n  const to = getNode(graph, edge.to)\n  if (enabled) {\n    from.children.push(edge.to)\n    to.parents.push(edge.from)\n  } else {\n    from.children = from.children.filter(id => id !== edge.to)\n    to.parents = to.parents.filter(id => id !== edge.from)\n  }\n  edge.enabled = enabled\n}\n\nexport function abortGraph(graph: Graph) {\n  return graph.idle.abort()\n}\n\nexport function cloneGraph(graph: Graph): Graph {\n  const newGraph = {\n    nodes: mapValues(graph.nodes, node => ({\n      ...node,\n      parents: [...node.parents],\n      children: [...node.children],\n    })),\n    edges: mapValues(graph.edges, edge => ({...edge})),\n    errors: [...graph.errors],\n    cache: {},\n    idle: backgroundProcessor(),\n  }\n  return newGraph\n}\n","// @flow\n\nimport type {Graph, NodeID} from './graph'\n\nimport {reject, pick} from 'lodash'\nimport {toggleEdge, addEdge, resolveEdgeForNodes} from './graph'\n\nexport type EdgeChange = {|\n  change: 'edge',\n  from: NodeID,\n  to: NodeID,\n  enabled: boolean,\n|}\n\nexport type Change = EdgeChange\n\nexport const MOCKED_EDGE_KIND = 'mocked'\n\nexport function addChange(graph: Graph, changes: $ReadOnlyArray<Change>, change: Change) {\n  // Remove same changes from queue\n  const newChanges = reject(changes, pick(change, ['change', 'from', 'to']))\n  if (change.change === 'edge') {\n    const edge = resolveEdgeForNodes(graph, change.from, change.to)\n    const wasOriginallyEnabled = edge ? edge.kind !== MOCKED_EDGE_KIND : false\n    // Add to queue only if it's a different state than originally\n    if (change.enabled !== wasOriginallyEnabled) {\n      newChanges.push(change)\n    }\n  }\n  return newChanges\n}\n\nexport function applyChanges(graph: Graph, changes: $ReadOnlyArray<Change>) {\n  for (const change of changes) {\n    if (change.change === 'edge') {\n      const fromNode = graph.nodes[change.from]\n      const toNode = graph.nodes[change.to]\n      if (!fromNode || !toNode) {\n        graph.errors.push({message: `One of the nodes is missing, cannot apply the change`, change})\n        continue\n      }\n\n      let edge = resolveEdgeForNodes(graph, change.from, change.to)\n      if (!edge) {\n        edge = addEdge(graph, {\n          from: change.from,\n          to: change.to,\n          enabled: change.enabled,\n          kind: MOCKED_EDGE_KIND,\n        })\n      }\n      toggleEdge(graph, edge, change.enabled)\n    }\n  }\n}\n","// @flow\n\nimport type {Graph, Node, NodeID} from './graph'\nimport {getNode} from './graph'\n\nexport type EdgeChain = NodeID[]\n\nasync function gatherChains(\n  graph: Graph,\n  node: Node,\n  toId: NodeID,\n  path: NodeID[],\n  visited: {[NodeID]: boolean},\n) {\n  const currentPath = [...path, node.id]\n  if (node.id === toId) return [currentPath]\n\n  visited[node.id] = true\n  const paths = []\n\n  // prefer shortes paths first\n  if (node.children.indexOf(toId) >= 0) {\n    paths.push([...currentPath, toId])\n  }\n\n  for (const childId of node.children) {\n    if (visited[childId]) continue\n    if (childId === toId) continue\n    const result = await gatherChains(graph, getNode(graph, childId), toId, currentPath, visited)\n    if (result.length > 0) {\n      paths.push(...result)\n    }\n    await graph.idle()\n  }\n  return paths\n}\n\nexport async function findChains(graph: Graph, fromNode: Node, toNode: Node): Promise<EdgeChain[]> {\n  return gatherChains(graph, fromNode, toNode.id, [], {})\n}\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles, Icon} from '@material-ui/core'\n\ntype Props = {|\n  error?: any,\n  children?: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.error.dark,\n    color: theme.palette.error.contrastText,\n    padding: 16,\n    display: 'flex',\n    'align-items': 'center',\n    'flex-shrink': 0,\n  },\n  icon: {\n    'margin-right': 8,\n  },\n})\n\nconst ErrorBox = ({classes, error, children}: Props) => {\n  if (children === undefined) children = String(error)\n  return (\n    <div className={classes.root}>\n      <Icon className={classes.icon}>error</Icon>\n      <span className={classes.label}>\n        {React.isValidElement(children) ? children : String(children)}\n      </span>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(ErrorBox)\n","// @flow\n\nimport type {Graph, Node, Edge} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {\n  withStyles,\n  Typography,\n  IconButton,\n  Icon,\n  Card,\n  CardContent,\n  Collapse,\n  CardActions,\n} from '@material-ui/core'\n\nimport NodeSize from './NodeSize'\nimport NodeName from './NodeName'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  node: Node,\n  edge?: ?Edge,\n  actions?: React.Node,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'column',\n    flexShrink: 0,\n    flexGrow: 0,\n    justifyContent: 'stretch',\n  },\n  card: {\n    marginBottom: 24,\n    position: 'relative',\n  },\n  edgeButton: {\n    position: 'absolute',\n    left: -32,\n    top: 12,\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    marginLeft: 'auto',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: -8,\n    },\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n})\n\ntype State = {\n  expanded: boolean,\n}\n\nclass NodeCard extends React.PureComponent<Props, State> {\n  state = {\n    expanded: false,\n  }\n  render() {\n    const {classes, className, baseGraph, graph, node, edge, actions} = this.props\n    const {expanded} = this.state\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"headline\" noWrap>\n              <NodeName node={node} hidePackage tooltip />\n            </Typography>\n            <Typography variant=\"subheading\">\n              <NodeName node={node} onlyPackage />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              <NodeSize baseGraph={baseGraph} graph={graph} node={node} />\n            </Typography>\n          </CardContent>\n          <CardActions className={classes.actions} disableActionSpacing>\n            {actions}\n            <IconButton\n              className={classNames(classes.expand, expanded && classes.expandOpen)}\n              onClick={() => this.setState({expanded: !expanded})}\n            >\n              <Icon>expand_more</Icon>\n            </IconButton>\n          </CardActions>\n          <Collapse in={expanded}>\n            <CardContent>\n              <Typography variant=\"caption\" color=\"textSecondary\">\n                Name\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                {node.name}\n              </Typography>\n              <Typography variant=\"caption\" color=\"textSecondary\">\n                ID\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                {String(node.id)}\n              </Typography>\n              {edge && (\n                <>\n                  <Typography variant=\"caption\" color=\"textSecondary\">\n                    Edge type\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    {edge.kind}\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"textSecondary\">\n                    Edge name\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    {edge.name || ''}\n                  </Typography>\n                </>\n              )}\n            </CardContent>\n          </Collapse>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NodeCard)\n","// @flow\n\nimport type {Edge} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {withStyles, Icon, IconButton, Tooltip} from '@material-ui/core'\n\ntype Props = {|\n  edge: Edge,\n  onClick: Function,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {},\n})\n\nclass EdgeLinkButton extends React.PureComponent<Props> {\n  render() {\n    const {classes, className, edge, onClick} = this.props\n\n    return (\n      <Tooltip\n        title={`${edge.enabled ? 'Unlink' : 'Link'} this node with above one`}\n        disableFocusListener\n        placement=\"top\"\n        enterDelay={500}\n      >\n        <IconButton\n          className={classNames(className, classes.root)}\n          aria-label=\"Unlink\"\n          color={edge.enabled ? 'secondary' : 'default'}\n          onClick={onClick}\n        >\n          <Icon>{edge.enabled ? 'link_off' : 'link'}</Icon>\n        </IconButton>\n      </Tooltip>\n    )\n  }\n}\n\nexport default withStyles(styles)(EdgeLinkButton)\n","// @flow\n\nimport type {Graph, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport {withStyles, ListItem, ListItemText} from '@material-ui/core'\n\nimport {getNode} from '../../analysis/graph'\nimport NodeName from './NodeName'\n\ntype Props = {|\n  graph: Graph,\n  chain: $ReadOnlyArray<NodeID>,\n  through: $ReadOnlyArray<NodeID>,\n  checked?: boolean,\n\n  onClick: Function,\n\n  style: Object,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {},\n  nodes: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  node: {\n    width: 300,\n    marginRight: 24,\n    position: 'relative',\n  },\n  link: {\n    position: 'absolute',\n    left: -24,\n    top: 0,\n  },\n})\n\nfunction ChainItem({graph, chain, through, onClick, style, classes, checked}: Props) {\n  return (\n    <div style={style}>\n      <ListItem dense ContainerComponent=\"div\" button onClick={onClick} disableGutters>\n        <ListItemText\n          primary={through.length ? <NodeName node={getNode(graph, through[0])} /> : 'Direct'}\n          secondary={`${chain.length - 1} nodes deep`}\n          primaryTypographyProps={{noWrap: true, color: checked ? 'secondary' : 'default'}}\n        />\n      </ListItem>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(ChainItem)\n","// @flow\n\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {difference} from 'lodash'\nimport {List, AutoSizer} from 'react-virtualized'\nimport {withStyles, Icon} from '@material-ui/core'\n\nimport ChainItem from './ChainItem'\nimport EmptyBox from '../EmptyBox'\n\ntype Props = {|\n  graph: Graph,\n  fromNode: Node,\n  toNode: Node,\n  chains: $ReadOnlyArray<$ReadOnlyArray<NodeID>>,\n  selectedChain: $ReadOnlyArray<NodeID>,\n  onChainSelect: (nodes: $ReadOnlyArray<NodeID>) => void,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n  },\n  list: {\n    outline: 0,\n  },\n})\n\nfunction ChainsList(props: Props) {\n  const {classes, className, graph, chains, fromNode, toNode, selectedChain, onChainSelect} = props\n  const usedIds = [fromNode.id, toNode.id]\n  const finalChains = chains.map(chain => {\n    const through = difference(chain, usedIds)\n    usedIds.push(...through)\n    return {through, chain}\n  })\n\n  return (\n    <div className={classNames(className, classes.root)}>\n      <AutoSizer>\n        {({width, height}) => (\n          <List\n            className={classes.list}\n            width={width}\n            height={height}\n            rowCount={finalChains.length}\n            rowHeight={54}\n            rowRenderer={({index, style}) => {\n              const {chain, through} = finalChains[index]\n              return (\n                <ChainItem\n                  key={index}\n                  graph={graph}\n                  chain={chain}\n                  through={through}\n                  onClick={() => onChainSelect(chain)}\n                  style={style}\n                  checked={selectedChain.every((id, index) => chain[index] === id)}\n                />\n              )\n            }}\n            noRowsRenderer={() => (\n              <EmptyBox icon={<Icon>link_off</Icon>}>\n                There is no connection between these nodes\n              </EmptyBox>\n            )}\n          />\n        )}\n      </AutoSizer>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(ChainsList)\n","// @flow\n\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\nimport type {Change} from '../../analysis/changes'\nimport classNames from 'classnames'\n\nimport * as React from 'react'\nimport {createSelector} from 'reselect'\nimport Async from 'react-promise'\nimport {withStyles, Typography, LinearProgress, IconButton, Icon, Tooltip} from '@material-ui/core'\n\nimport {findChains} from '../../analysis/chains'\nimport ErrorBox from '../ErrorBox'\nimport NodeCard from './NodeCard'\nimport {getNodes, resolveEdgeForNodes} from '../../analysis/graph'\nimport EdgeLinkButton from './EdgeLinkButton'\nimport ChainsList from './ChainsList'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  fromNode: ?Node,\n  toNode: ?Node,\n  onAddChange: Change => any,\n  onSelectFromNode: NodeID => any,\n  onSelectToNode: NodeID => any,\n  classes: Object,\n  className?: string,\n|}\n\ntype State = {\n  selectedChain: ?$ReadOnlyArray<NodeID>,\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'row',\n    justifyContent: 'stretch',\n  },\n\n  chains: {\n    width: 300,\n    flexGrow: 0.2,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n    marginRight: 24,\n  },\n  chainsList: {\n    flexGrow: 1,\n  },\n  selectedChain: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    position: 'relative',\n    width: 300,\n  },\n  selectedChainScroll: {\n    overflowY: 'auto',\n  },\n  listProgress: {\n    marginTop: 16,\n  },\n})\n\nclass ChainsExplorer extends React.PureComponent<Props, State> {\n  state = {\n    selectedChain: null,\n  }\n\n  chainsPromiseSelector = createSelector(\n    p => p.graph,\n    p => p.fromNode,\n    p => p.toNode,\n    (graph, fromNode, toNode) => {\n      if (!fromNode || !toNode) return null\n      return findChains(graph, fromNode, toNode)\n    },\n  )\n\n  componentDidMount() {\n    this.componentDidUpdate({})\n  }\n\n  _waitingForChainsPromise: any\n  componentDidUpdate(prevProps) {\n    const baseGraphChanged = this.props.baseGraph !== prevProps.baseGraph\n    const {fromNode: currentFrom, toNode: currentTo} = this.props\n    const {fromNode: prevFrom, toNode: prevTo} = prevProps\n    const fromToIdChanged =\n      (currentFrom && currentFrom.id) !== (prevFrom && prevFrom.id) ||\n      (currentTo && currentTo.id) !== (prevTo && prevTo.id)\n    if (baseGraphChanged || fromToIdChanged) {\n      // Select the first chain whenever nodes or base graph changes,\n      // but keep it if user edits the graph\n      const chainsPromise = this.chainsPromiseSelector(this.props)\n      this.setState({\n        selectedChain: null,\n      })\n      this._waitingForChainsPromise = chainsPromise\n      if (currentFrom && currentTo && chainsPromise) {\n        chainsPromise.then(chains => {\n          if (this._waitingForChainsPromise !== chainsPromise) return\n          this.setState({selectedChain: chains[0] || [currentFrom.id, currentTo.id]})\n        })\n      }\n    }\n  }\n\n  renderSelectedChain = () => {\n    const {baseGraph, graph, onAddChange, onSelectFromNode, onSelectToNode} = this.props\n    const {selectedChain} = this.state\n    if (!selectedChain) return null\n    const nodes = getNodes(graph, selectedChain)\n\n    return nodes.map((node: Node, index) => {\n      const isFirst = index === 0\n      const isLast = index === nodes.length - 1\n      if (isFirst) return null\n      const prevNode = nodes[index - 1]\n      const edge = resolveEdgeForNodes(graph, prevNode.id, node.id) || {\n        from: prevNode.id,\n        to: node.id,\n        kind: '',\n        enabled: false,\n      }\n\n      return (\n        <>\n          <NodeCard\n            baseGraph={baseGraph}\n            graph={graph}\n            node={node}\n            edge={edge}\n            actions={\n              <>\n                <EdgeLinkButton\n                  edge={edge}\n                  onClick={() =>\n                    onAddChange({\n                      change: 'edge',\n                      from: edge.from,\n                      to: edge.to,\n                      enabled: !edge.enabled,\n                    })\n                  }\n                />\n                <Tooltip\n                  title=\"Set as the first node\"\n                  disableFocusListener\n                  enterDelay={500}\n                  placement=\"top\"\n                >\n                  <IconButton onClick={() => onSelectFromNode(node.id)}>\n                    <Icon>vertical_align_top</Icon>\n                  </IconButton>\n                </Tooltip>\n                {!isLast && (\n                  <Tooltip\n                    title=\"Set as the last node\"\n                    disableFocusListener\n                    enterDelay={500}\n                    placement=\"top\"\n                  >\n                    <IconButton onClick={() => onSelectToNode(node.id)}>\n                      <Icon>vertical_align_bottom</Icon>\n                    </IconButton>\n                  </Tooltip>\n                )}\n              </>\n            }\n          />\n        </>\n      )\n    })\n  }\n\n  renderChains = chains => {\n    const {graph, fromNode, toNode, classes} = this.props\n    const {selectedChain} = this.state\n    if (!selectedChain || !fromNode || !toNode) return null\n    return (\n      <ChainsList\n        className={classes.chainsList}\n        graph={graph}\n        fromNode={fromNode}\n        toNode={toNode}\n        chains={chains}\n        selectedChain={selectedChain}\n        onChainSelect={chain => this.setState({selectedChain: chain})}\n      />\n    )\n  }\n\n  render() {\n    const {className, classes, baseGraph, graph, fromNode, toNode, onSelectToNode} = this.props\n    const chainsPromise = this.chainsPromiseSelector(this.props)\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        <div className={classes.chains}>\n          <Typography variant=\"headline\">Dependency chains</Typography>\n          <Typography variant=\"subheading\" gutterBottom>\n            Select one of the dependency chains between these two nodes. Try breaking the links\n            between them to see the impact of your changes.\n          </Typography>\n          <Async\n            promise={chainsPromise}\n            then={chains => this.renderChains(chains)}\n            catch={error => <ErrorBox>{error}</ErrorBox>}\n            pending={<LinearProgress className={classes.listProgress} />}\n          />\n        </div>\n        <div className={classes.selectedChain}>\n          {fromNode && (\n            <NodeCard\n              baseGraph={baseGraph}\n              graph={graph}\n              node={fromNode}\n              actions={\n                fromNode !== toNode && (\n                  <Tooltip\n                    title=\"Set as the last node\"\n                    disableFocusListener\n                    enterDelay={500}\n                    placement=\"top\"\n                  >\n                    <IconButton onClick={() => onSelectToNode(fromNode.id)}>\n                      <Icon>vertical_align_bottom</Icon>\n                    </IconButton>\n                  </Tooltip>\n                )\n              }\n            />\n          )}\n          <div className={classes.selectedChainScroll}>{this.renderSelectedChain()}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ChainsExplorer)\n","// @flow\n\nimport type {Graph} from '../../analysis/graph'\nimport type {Change} from '../../analysis/changes'\n\nimport * as React from 'react'\nimport {without} from 'lodash'\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\nimport {\n  withStyles,\n  IconButton,\n  Icon,\n  List,\n  Toolbar,\n  Button,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core'\nimport {resolveEdgeForNodes, getNode} from '../../analysis/graph'\nimport EmptyBox from '../EmptyBox'\n\ntype Props = {|\n  graph: Graph,\n  changes: $ReadOnlyArray<Change>,\n  onUpdateChanges: ($ReadOnlyArray<Change>) => void,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {},\n  list: {\n    maxHeight: '70vh',\n    overflowY: 'auto',\n  },\n  delete: {},\n})\n\nclass ChangesView extends React.PureComponent<Props> {\n  render() {\n    const {classes, graph, changes, onUpdateChanges} = this.props\n    const textsToCopy = []\n    return (\n      <div>\n        <List className={classes.list}>\n          {changes.map((change, index) => {\n            const edge = resolveEdgeForNodes(graph, change.from, change.to)\n            if (!edge) return null\n            const fromNode = getNode(graph, edge.from)\n            const toNode = getNode(graph, edge.to)\n            const fromName = fromNode.file || fromNode.name || fromNode.id\n            const toName = edge.name || toNode.name || toNode.id\n            textsToCopy.push(`Remove \"${toName}\" from \"${fromName}\"`)\n            return (\n              <ListItem key={index} graph={graph} change={change}>\n                <IconButton\n                  aria-label=\"Delete\"\n                  className={classes.delete}\n                  onClick={() => onUpdateChanges(without(changes, change))}\n                >\n                  <Icon>delete</Icon>\n                </IconButton>\n                <ListItemText\n                  primary={\n                    <>\n                      Remove \"<b>{toName}</b>\" from \"<b>{fromName}</b>\"\n                    </>\n                  }\n                />\n                <ListItemSecondaryAction />\n              </ListItem>\n            )\n          })}\n          {changes.length === 0 && (\n            <EmptyBox icon={<Icon>block</Icon>}>\n              No changes applied. Try breaking links between dependencies\n            </EmptyBox>\n          )}\n        </List>\n        <Toolbar>\n          <Button onClick={() => onUpdateChanges([])}>Reset changes</Button>\n          {textsToCopy.length > 0 ? (\n            <CopyToClipboard text={textsToCopy.join('\\n\\n')}>\n              <Button>Copy to clipboard</Button>\n            </CopyToClipboard>\n          ) : null}\n        </Toolbar>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ChangesView)\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles, Icon} from '@material-ui/core'\n\ntype Props = {|\n  children: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.error.dark,\n    color: theme.palette.error.contrastText,\n    padding: '8px 24px 8px 24px',\n    display: 'flex',\n    alignItems: 'center',\n    flexShrink: 0,\n    justifyContent: 'center',\n  },\n  icon: {\n    'margin-right': 8,\n  },\n})\n\nconst ErrorBar = ({classes, children}: Props) => (\n  <div className={classes.root}>\n    <Icon className={classes.icon}>error</Icon>\n    <span className={classes.label}>{children}</span>\n  </div>\n)\n\nexport default withStyles(styles)(ErrorBar)\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles, Icon} from '@material-ui/core'\nimport orange from '@material-ui/core/colors/amber'\n\ntype Props = {|\n  children: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    background: orange.A700,\n    padding: '8px 24px 8px 24px',\n    display: 'flex',\n    alignItems: 'center',\n    flexShrink: 0,\n    justifyContent: 'center',\n  },\n  icon: {\n    'margin-right': 8,\n  },\n})\n\nconst WarningBar = ({classes, children}: Props) => (\n  <div className={classes.root}>\n    <Icon className={classes.icon}>warning</Icon>\n    <span className={classes.label}>{children}</span>\n  </div>\n)\n\nexport default withStyles(styles)(WarningBar)\n","// @flow\n\nimport {createGraph, addNode, getNodeId, addEdge} from './graph'\n\nimport type {Graph} from './graph'\n\nexport async function readWebpackStats(\n  stats: Object,\n  options?: {\n    includeAsyncImports?: boolean,\n    includeChunks?: boolean,\n  } = {},\n): Promise<Graph> {\n  const graph = createGraph()\n  const {includeAsyncImports = false, includeChunks = false} = options\n\n  const {chunks = [], modules = []} = stats\n\n  // create chunks\n  if (includeChunks) {\n    for (const chunk of chunks) {\n      addNode(graph, {\n        id: getNodeId('chunk', chunk.id),\n        kind: chunk.reason && chunk.reason.indexOf('split chunk') ? 'split-chunk' : 'chunk',\n        name: chunk.names[0],\n        size: 0,\n        original: chunk,\n      })\n      await graph.idle()\n    }\n  }\n\n  // create modules\n  for (const module of modules) {\n    if (module.id == null) {\n      // module has been removed at optimization phase (concatenated, tree-shaken, etc)\n      continue\n    }\n    const isConcat = module.name.indexOf(' + ') > 0\n    addNode(graph, {\n      id: getNodeId('module', module.id),\n      kind: isConcat ? 'concat' : 'module',\n      name: module.name,\n      file: isConcat ? undefined : (module.name || '').replace(/^.*!/),\n      size: module.size,\n      original: module,\n    })\n    await graph.idle()\n  }\n\n  // create edges\n  for (const module of modules) {\n    if (includeChunks) {\n      for (const chunkId of module.chunks) {\n        addEdge(graph, {\n          from: getNodeId('chunk', chunkId),\n          to: getNodeId('module', module.id),\n          kind: 'chunk child',\n          original: module,\n        })\n      }\n    }\n    for (const reason of module.reasons) {\n      const type = reason.type || ''\n      if (reason.moduleId == null) {\n        // reason has been removed at optimization phase (concatenated, tree-shaken, etc)\n        continue\n      }\n      const async = type.indexOf('import()') >= 0 && type.indexOf('eager') < 0\n      if (async && includeAsyncImports === false) {\n        continue\n      }\n      addEdge(graph, {\n        from: getNodeId('module', reason.moduleId),\n        to: getNodeId('module', module.id),\n        kind: type,\n        name: reason.userRequest,\n        async,\n        original: reason,\n      })\n    }\n    await graph.idle()\n  }\n  return graph\n}\n","// @flow\n\nimport type {NodeID, Graph} from './analysis/graph'\nimport type {Change} from './analysis/changes'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {hot} from 'react-hot-loader'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Dropzone from 'react-dropzone'\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  CssBaseline,\n  withStyles,\n  Button,\n  Drawer,\n  Icon,\n} from '@material-ui/core'\n\nimport {readWebpackStats} from './analysis/webpack'\nimport {getNode, cloneGraph, resolveNode, abortGraph} from './analysis/graph'\nimport ChainsExplorer from './ui/graph/ChainsExplorer'\nimport {applyChanges, addChange} from './analysis/changes'\nimport WarningBar from './ui/WarningBar'\nimport ErrorBar from './ui/ErrorBar'\nimport GraphExplorer from './ui/graph/GraphExplorer'\nimport Dot from './ui/Dot'\nimport NodeName from './ui/graph/NodeName'\nimport ChangesView from './ui/graph/ChangesView'\nimport EmptyBox from './ui/EmptyBox'\n\ntype Props = {|\n  classes: Object,\n  theme: Object,\n|}\n\ntype State = {|\n  loading: boolean,\n  baseGraph: ?Graph,\n  graph: ?Graph,\n  error: any,\n\n  fromNodeId: ?NodeID,\n  toNodeId: ?NodeID,\n  changes: $ReadOnlyArray<Change>,\n  showChanges: boolean,\n|}\n\nconst styles = {\n  root: {\n    display: 'flex',\n    height: '100vh',\n    width: '100vw',\n    'flex-direction': 'column',\n    'justify-content': 'stretch',\n    'font-family': ['Roboto', 'Helvetica', 'Arial', 'sans-serif'],\n  },\n  container: {\n    maxWidth: 2000,\n    minWidth: 1200,\n    width: '100vw',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  panes: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    justifyContent: 'space-between',\n    padding: '24px 24px 0 24px',\n  },\n  parentsExplorer: {\n    width: 250,\n    flexShrink: 0,\n    flexGrow: 0.2,\n    marginRight: 48,\n  },\n  pathsExplorer: {\n    flexShrink: 1,\n    flexGrow: 1,\n    marginRight: 48,\n  },\n  childrenExplorer: {\n    width: 250,\n    flexShrink: 0,\n    flexGrow: 0.2,\n  },\n  title: {\n    marginLeft: 'auto',\n    textTransform: 'uppercase',\n  },\n  search: {\n    color: '#fff',\n    borderBottom: '2px solid #fff',\n    width: 300,\n  },\n  dropzone: {},\n  openButton: {},\n  openFileMessage: {\n    textAlign: 'center',\n    width: '30em',\n    alignSelf: 'center',\n    margin: 'auto',\n    cursor: 'pointer',\n  },\n}\n\nclass App extends React.Component<Props, State> {\n  state = {\n    loading: false,\n    error: null,\n    baseGraph: null,\n    graph: null,\n    fromNodeId: null,\n    toNodeId: null,\n    changes: [],\n    showChanges: false,\n  }\n\n  dropzone: any\n\n  async componentDidMount() {\n    if (process.env.NODE_ENV === 'development') {\n      this.openFile(async () => {\n        console.time('loading')\n        const result = await fetch('./stats/build-stats.json')\n        console.timeEnd('loading')\n        console.time('parsing')\n        const json = await result.json()\n        console.timeEnd('parsing')\n        return json\n      })\n    }\n  }\n\n  openFile = async callback => {\n    this.setState({\n      loading: true,\n      error: null,\n      baseGraph: null,\n      graph: null,\n      fromNodeId: null,\n      toNodeId: null,\n      changes: [],\n    })\n    try {\n      const json = await callback()\n      if (json === null) {\n        this.setState({loading: false})\n        return\n      }\n      console.time('conversion')\n      const graph = await readWebpackStats(json)\n      console.timeEnd('conversion')\n      console.log('Graph: ', graph)\n      console.warn('Errors found: ', graph.errors)\n      this.setState({loading: false, graph, baseGraph: graph})\n    } catch (error) {\n      console.error(error)\n      this.setState({loading: false, error})\n    }\n  }\n\n  handleDrop = ([file], [rejected]) => {\n    if (rejected) {\n      this.setState({error: 'Only webpack build stats in json format are accepted!'})\n      return\n    }\n    this.openFile(\n      () =>\n        new Promise((resolve, reject) => {\n          console.time('loading')\n          const reader = new FileReader()\n          reader.onload = () => {\n            console.timeEnd('loading')\n            console.time('parsing')\n            const json = JSON.parse((reader.result: any))\n            console.timeEnd('parsing')\n            resolve(json)\n          }\n          reader.onerror = () => {\n            console.timeEnd('loading')\n\n            reject('Could not read the file')\n          }\n          reader.readAsBinaryString(file)\n        }),\n    )\n  }\n\n  toggleShowChanges = () => {\n    this.setState({showChanges: !this.state.showChanges})\n  }\n\n  updateChanges = changes => {\n    const {baseGraph, graph} = this.state\n    if (!graph || !baseGraph) throw new Error('No graph available now')\n    const newGraph = cloneGraph(baseGraph)\n    // discard old graph\n    if (graph !== baseGraph) {\n      abortGraph(graph)\n    }\n    applyChanges(newGraph, changes)\n    this.setState({graph: newGraph, changes: changes})\n  }\n\n  addChange = (change: Change) => {\n    const {graph, changes} = this.state\n    if (!graph) throw new Error('No graph available now')\n    this.updateChanges(addChange(graph, changes, change))\n  }\n\n  resetNodesSelection = () => {\n    this.setState({fromNodeId: null, toNodeId: null})\n  }\n\n  selectFromNode = (fromNodeId: NodeID) => {\n    const {graph} = this.state\n    if (graph) console.log('Selected FROM node', getNode(graph, fromNodeId))\n    this.setState({fromNodeId})\n  }\n\n  selectToNode = (toNodeId: NodeID) => {\n    const {graph} = this.state\n    if (graph) console.log('Selected TO node', getNode(graph, toNodeId))\n    this.setState({toNodeId})\n  }\n\n  renderGraph() {\n    const {baseGraph, graph, fromNodeId, toNodeId} = this.state\n    const {classes} = this.props\n    if (!graph || !baseGraph) return null\n    const fromNode = resolveNode(graph, fromNodeId)\n    const toNode = resolveNode(graph, toNodeId)\n    return (\n      <div className={classNames(classes.container, classes.panes)}>\n        <GraphExplorer\n          className={classes.parentsExplorer}\n          header={\n            <>\n              <Typography variant=\"headline\">\n                {fromNode ? (\n                  <>Parents</>\n                ) : (\n                  <>\n                    First node <Dot>1</Dot>\n                  </>\n                )}\n              </Typography>\n              <Typography variant=\"subheading\" gutterBottom>\n                {toNode ? (\n                  <>\n                    Move up to one of the parents of <NodeName node={toNode} />\n                  </>\n                ) : (\n                  'Select node to start analysis from'\n                )}\n              </Typography>\n            </>\n          }\n          baseGraph={baseGraph}\n          graph={graph}\n          walkParents\n          onNodeSelect={this.selectFromNode}\n          node={toNode}\n          selected={fromNode}\n          emptyMessage=\"No parents found\"\n        />\n        {fromNode && toNode ? (\n          <ChainsExplorer\n            className={classes.pathsExplorer}\n            baseGraph={baseGraph}\n            graph={graph}\n            fromNode={fromNode}\n            toNode={toNode}\n            onSelectFromNode={this.selectFromNode}\n            onSelectToNode={this.selectToNode}\n            onAddChange={this.addChange}\n          />\n        ) : null}\n        {fromNode ? (\n          <GraphExplorer\n            className={classes.childrenExplorer}\n            header={\n              <>\n                <Typography variant=\"headline\">\n                  {toNodeId ? (\n                    <>Children</>\n                  ) : (\n                    <>\n                      Children <Dot>2</Dot>\n                    </>\n                  )}\n                </Typography>\n                <Typography variant=\"subheading\" gutterBottom>\n                  Move down to the children of <NodeName node={fromNode} />\n                </Typography>\n              </>\n            }\n            baseGraph={baseGraph}\n            graph={graph}\n            onNodeSelect={this.selectToNode}\n            node={fromNode}\n            selected={toNode}\n            emptyMessage=\"No children found\"\n          />\n        ) : null}\n      </div>\n    )\n  }\n\n  render() {\n    const {loading, error, graph, showChanges, changes, fromNodeId} = this.state\n    const {classes} = this.props\n    return (\n      <Dropzone\n        multiple={false}\n        activeClassName=\"\"\n        rejectClassName=\"\"\n        accept=\".json\"\n        onDrop={this.handleDrop}\n        className={classes.dropzone}\n        disableClick\n        ref={node => {\n          this.dropzone = node\n        }}\n      >\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"static\">\n            <Toolbar variant=\"regular\" className={classes.container}>\n              {!loading && (\n                <Button color=\"inherit\" onClick={() => this.dropzone.open()}>\n                  Open stats\n                </Button>\n              )}\n              {graph && (\n                <Button color=\"inherit\" onClick={this.toggleShowChanges}>\n                  See changes\n                  {changes.length ? ` (${changes.length})` : null}\n                </Button>\n              )}\n              {fromNodeId && (\n                <Button color=\"inherit\" onClick={this.resetNodesSelection}>\n                  Choose root node\n                </Button>\n              )}\n              <Typography variant=\"title\" color=\"inherit\" className={classes.title}>\n                Webpack Chop Shop\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {loading && <LinearProgress className={classes.progress} />}\n          {graph &&\n            graph.errors.length > 0 && (\n              <WarningBar>\n                There where {graph.errors.length} errors found. Check the console for more\n              </WarningBar>\n            )}\n          {error && <ErrorBar>{String(error)}</ErrorBar>}\n          {this.renderGraph()}\n          {!graph &&\n            !loading && (\n              <div onClick={() => this.dropzone.open()} className={classes.openFileMessage}>\n                <EmptyBox\n                  icon={\n                    <Icon color=\"inherit\" fontSize=\"default\">\n                      open_in_browser\n                    </Icon>\n                  }\n                >\n                  First,{' '}\n                  <a\n                    href=\"https://webpack.js.org/api/cli/#stats-options\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    generate the stats file in webpack\n                  </a>\n                  , then click here or drop it anywhere on the page to start\n                </EmptyBox>\n              </div>\n            )}\n          {graph && (\n            <Drawer anchor=\"top\" open={showChanges} onClose={this.toggleShowChanges}>\n              <div className={classes.container}>\n                <ChangesView graph={graph} changes={changes} onUpdateChanges={this.updateChanges} />\n              </div>\n            </Drawer>\n          )}\n        </div>\n      </Dropzone>\n    )\n  }\n}\n\nexport default hot(module)(withStyles(styles, {withTheme: true})(App))\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nconst rootEl = document.getElementById('root')\n\nregisterServiceWorker()\nReactDOM.render(<App />, rootEl)\n","// @flow\nimport type {Node} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {withStyles, Tooltip} from '@material-ui/core'\n\nimport {getModuleInfo} from '../../analysis/info'\n\ntype Props = {|\n  node: Node,\n  hidePackage?: boolean,\n  onlyPackage?: boolean,\n  tooltip?: boolean | string,\n  children?: React.Node,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    maxWidth: '100%',\n    display: 'inline-flex',\n    flexDirection: 'row',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  packageName: {\n    textOverflow: 'ellipsis',\n    flexShrink: 10,\n    overflow: 'hidden',\n  },\n  path: {\n    textOverflow: 'ellipsis',\n    flexShrink: 1000,\n    overflow: 'hidden',\n    minWidth: 10,\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    flexShrink: 1,\n    overflow: 'hidden',\n  },\n  extension: {\n    flexShrink: 0,\n  },\n})\n\nfunction NodeName({node, hidePackage, onlyPackage, tooltip, children, classes, className}: Props) {\n  // {selectFromNode && <a onClick={() => selectFromNode(node.id)}>From</a>}\n  // {selectToNode && <a onClick={() => selectToNode(node.id)}>To</a>}\n\n  const info = getModuleInfo(node)\n\n  const packageName = hidePackage ? '' : info.packageName\n  const path = onlyPackage ? '' : (info.path || '').replace(/^\\/|\\/$/g, '')\n  const name = onlyPackage ? '' : (info.name || '') + (info.extension || '')\n\n  const text = (\n    <span className={classNames(className, classes.root)}>\n      {packageName && <span className={classes.packageName}>{packageName}</span>}\n      {packageName && path ? '/' : ''}\n      {path && <span className={classes.path}>{path}</span>}\n      {(packageName || path) && name ? '/' : ''}\n      {name && <span className={classes.name}>{name}</span>}\n      {(packageName || name) && children ? <span>,&nbsp;</span> : ''}\n      {children && <span className={classes.children}>{children}</span>}\n    </span>\n  )\n\n  if (tooltip) {\n    return (\n      <Tooltip\n        title={typeof tooltip === 'boolean' ? `${node.name || ''} (${String(node.id)})` : tooltip}\n        placement=\"top\"\n        enterDelay={100}\n        disableFocusListener\n      >\n        {text}\n      </Tooltip>\n    )\n  }\n\n  return text\n}\nexport default withStyles(styles)(NodeName)\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles} from '@material-ui/core'\n\ntype Props = {|\n  children: React.Node,\n  icon: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.text.secondary,\n    padding: 24,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexShrink: 0,\n    textAlign: 'center',\n  },\n  icon: {\n    'margin-bottom': 8,\n  },\n})\n\nconst EmptyBox = ({classes, children, icon}: Props) => (\n  <div className={classes.root}>\n    <div className={classes.icon}>{icon}</div>\n    <div>{children}</div>\n  </div>\n)\n\nexport default withStyles(styles)(EmptyBox)\n","// @flow\n\nimport type {Graph, Node, NodeID} from './graph'\nimport {getNode} from './graph'\n\nasync function walkGraph(\n  graph: Graph,\n  node: Node,\n  options: {visited: {[NodeID]: boolean}, nodesKey: string},\n) {\n  options.visited[node.id] = true\n\n  for (const childId of node[options.nodesKey]) {\n    if (options.visited[childId]) continue\n    await walkGraph(graph, getNode(graph, childId), options)\n    await graph.idle()\n  }\n}\n\nexport function getDeepNodeChildren(graph: Graph, node: Node): Promise<$ReadOnlyArray<NodeID>> {\n  const key = `getDeepNodeChildren:${node.id}`\n  if (!graph.cache[key]) {\n    const visited = {}\n    graph.cache[key] = walkGraph(graph, node, {visited, nodesKey: 'children'}).then(() => {\n      // $FlowFixMe\n      delete visited[node.id]\n      return Object.keys(visited)\n    })\n  }\n  return graph.cache[key]\n}\n\nexport function getDeepNodeParents(graph: Graph, node: Node): Promise<$ReadOnlyArray<NodeID>> {\n  const key = `getDeepNodeParents:${node.id}`\n  if (!graph.cache[key]) {\n    const visited = {}\n    graph.cache[key] = walkGraph(graph, node, {visited, nodesKey: 'parents'}).then(() => {\n      // $FlowFixMe\n      delete visited[node.id]\n      return Object.keys(visited)\n    })\n  }\n  return graph.cache[key]\n}\n"],"sourceRoot":""}