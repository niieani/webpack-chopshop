{"version":3,"sources":["analysis/changes.js","analysis/chains.js","ui/ErrorBox.js","analysis/dependencies.js","analysis/size.js","ui/graph/NodeSize.js","analysis/info.js","ui/graph/NodeName.js","ui/graph/NodeCard.js","ui/graph/EdgeLinkButton.js","ui/graph/ChainItem.js","ui/EmptyBox.js","ui/graph/ChainsList.js","ui/graph/ChainsExplorer.js","ui/WarningBar.js","ui/ErrorBar.js","ui/graph/ChangesView.js","ui/graph/NodeItem.js","ui/tree.js","ui/graph/NodeList.js","ui/graph/GraphExplorer.js","ui/graph/ParentsExplorer.js","ui/graph/ChildrenExplorer.js","AppUI.js","analysis/webpack.js","App.js","registerServiceWorker.js","index.js","analysis/utils.js","analysis/graph.js"],"names":["MOCKED_EDGE_KIND","addChange","graph","changes","change","newChanges","Object","lodash__WEBPACK_IMPORTED_MODULE_0__","edge","_graph__WEBPACK_IMPORTED_MODULE_1__","from","to","wasOriginallyEnabled","kind","enabled","push","applyChanges","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","fromNode","nodes","toNode","errors","message","err","return","gatherChains","_callee","node","toId","path","visited","currentPath","paths","childId","result","regenerator_default","a","wrap","_context","prev","_toConsumableArray","concat","id","abrupt","children","indexOf","analysis_graph","sent","length","apply","idle","t0","finish","stop","this","_callee2","_context2","ui_ErrorBox","core_styles","theme","root","background","palette","error","dark","color","contrastText","padding","display","align-items","flex-shrink","icon","margin-right","_ref","classes","String","react","className","index_es","label","walkGraph","options","nodesKey","getDeepNodeChildren","key","cache","then","keys","keepOnlyEntryModules","filter","parents","every","parentId","keepOnlyLeafModules","calculateTreeSize","tree","reduce","sum","size","graph_NodeSize","bigger","red_default","A700","smaller","green_default","baseGraph","react_promise_es","promise","Promise","all","_ref2","_ref3","_slicedToArray","baseTreeSize","treeSize","numeral_default","format","Math","abs","pending","FILENAME_RE","getPackageName","file","found","match","graph_NodeName","maxWidth","flexDirection","whiteSpace","overflow","packageName","textOverflow","flexShrink","minWidth","name","extension","hidePackage","onlyPackage","tooltip","info","pathToPackage","getModuleInfo","replace","text","classnames_default","title","originalId","placement","enterDelay","disableFocusListener","NodeCard_NodeCard","state","expanded","_this2","_this$props","props","actions","card","variant","noWrap","disableActionSpacing","expand","expandOpen","onClick","setState","in","gutterBottom","graph_NodeCard","position","flexGrow","justifyContent","marginBottom","edgeButton","left","top","transform","transition","transitions","create","duration","shortest","marginLeft","breakpoints","up","marginRight","EdgeLinkButton_EdgeLinkButton","aria-label","graph_EdgeLinkButton","graph_ChainItem","width","link","chain","through","style","checked","dense","ContainerComponent","button","disableGutters","primary","secondary","primaryTypographyProps","ui_EmptyBox","alignItems","textAlign","margin-bottom","graph_ChainsList","list","outline","chains","selectedChain","onChainSelect","usedIds","finalChains","map","lodash","ChainsList_toConsumableArray","dist_es","height","rowCount","rowHeight","rowRenderer","index","_finalChains$index","noRowsRenderer","ChainsExplorer_ChainsExplorer","chainsPromiseSelector","lib","p","_x6","_x7","_x8","_findChains","arguments","findChains","_waitingForChainsPromise","renderSelectedChain","_this","pinned","onAddChange","onFromNodeSelect","onToNodeSelect","onPinnedToggle","isFirst","isLast","prevNode","renderChains","_this$props2","chainsList","componentDidUpdate","prevProps","baseGraphChanged","_this$props3","currentFrom","currentTo","prevFrom","prevTo","fromToIdChanged","chainsPromise","_this3","_this$props4","catch","listProgress","selectedChainScroll","graph_ChainsExplorer","overflowY","marginTop","ui_WarningBar","amber_default","ui_ErrorBar","ChangesView_ChangesView","onChangesUpdate","textsToCopy","fromName","toName","delete","react_copy_to_clipboard_lib","join","graph_ChangesView","maxHeight","graph_NodeItem","selectFromNode","selectToNode","selectNode","_ref$secondaryActions","secondaryActions","action","defaultGetChildren","row","defaultGetKey","isTreeExpanded","_options$getKey","getKey","toggleTreeRowState","current","_options$getKey2","_objectSpread","tree_toConsumableArray","e","toggleTreeRow","treeOptions","group","NodeList_NodeList","search","fuseSelector","_","fuse_default","searchSelector","s","fuse","pinnedSelector","groupSelector","sortGroupsBySize","groups","rows","unshift","NodeList_toConsumableArray","nodesSelector","flattenTreeToRows","_options$getChildren","getChildren","renderItem","renderEmpty","listContainer","divider","loading","type","onChange","el","target","endAdornment","placeholder","renderList","graph_NodeList","GraphExplorer_GraphExplorer","modeId","modeMenuAnchor","modeSelector","modes","defaultMode","getNodes","nodesPromiseSelector","resolve","handleModeMenuOpen","event","currentTarget","handleModeMenuClose","_ref$modes","selected","onNodeSelect","mode","itemProps","assign","_this$state","currentModeId","anchorEl","open","Boolean","onClose","modeMenuItem","renderTitle","nodesPromise","header","renderInfo","headerMore","renderModeMenu","graph_GraphExplorer","ParentsExplorer_ParentsExplorer","allNodesSelector","getAllNodes","entryNodesSelector","getEntryNodes","leafNodesSelector","getLeafNodes","directParentNodesSelector","getDirectParentNodes","parentNodesSelector","getDeepNodeParents","ids","getParentNodes","parentEntryNodesSelector","mark","t1","t2","_x","_x2","getParentEntryNodes","directParents","parentEntries","entries","initialModes","initialAll","initialEntries","initialLeafs","graph_ParentsExplorer","ChildrenExplorer_ChildrenExplorer","directChildrenNodesSelector","getDirectChildrenNodes","childrenNodesSelector","getChildrenNodes","childLeafNodesSelector","getChildLeafNodes","directChildren","childLeafs","leafs","graph_ChildrenExplorer","AppUI_AppUI","dropzone","container","panes","parentsExplorer","pathsExplorer","childrenExplorer","showChanges","onNodesSelectionReset","onFileDrop","onShowChangesToggle","es","multiple","activeClassName","rejectClassName","accept","onDrop","disableClick","ref","LinearProgress_default","progress","renderGraph","openFileMessage","fontSize","href","rel","anchor","__webpack_exports__","fontFamily","textTransform","borderBottom","openButton","alignSelf","margin","cursor","readWebpackStats","_readWebpackStats","stats","_args2","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_asyncToGenerator","_options$includeAsync","includeAsyncImports","_options$includeChunk","includeChunks","_stats$chunks","chunks","_stats$modules","modules","chunk","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","module","isConcat","isNamespace","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_module","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","chunkId","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","reason","async","names","original","identifier","reasons","moduleId","moduleIdentifier","userRequest","t3","t4","App","fromNodeId","toNodeId","handleStorageEvent","newValue","JSON","parse","handleHistoryChange","_JSON$parse","atob","window","location","hash","slice","_JSON$parse$fromNodeI","_JSON$parse$toNodeId","pushHistory","history","pushState","btoa","stringify","openFile","callback","json","_graph","console","time","_analysis_webpack__WEBPACK_IMPORTED_MODULE_3__","timeEnd","log","warn","handleDrop","reject","reader","FileReader","onload","onerror","readAsBinaryString","toggleShowChanges","updateChanges","_this$state2","Error","newGraph","_analysis_graph__WEBPACK_IMPORTED_MODULE_4__","_analysis_changes__WEBPACK_IMPORTED_MODULE_5__","localStorage","setItem","_this$state3","setNodesSelection","resetNodesSelection","_this$state4","_this$state5","togglePinned","wasPinned","pin","initLocalStorage","initHistory","NODE_ENV","PUBLIC_URL","REACT_APP_STATS","fetch","getItem","addEventListener","_this$state6","react__WEBPACK_IMPORTED_MODULE_1__","_AppUI__WEBPACK_IMPORTED_MODULE_6__","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","rootEl","document","getElementById","URL","origin","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","react_dom_default","render","react_default","createElement","ABORTED","utils_backgroundProcessor","abort","idleReject","fn","setTimeout","createGraph","edges","getNodeId","getEdgeId","getNode","resolveNode","resolveEdgeForNodes","bind","values","addNode","_node","addEdge","_edge","toggleEdge","abortGraph","cloneGraph"],"mappings":"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","file":"static/js/main.32c7a52e.chunk.js","sourcesContent":["// @flow\n\nimport type {Graph, NodeID} from './graph'\n\nimport {reject, pick} from 'lodash'\nimport {toggleEdge, addEdge, resolveEdgeForNodes} from './graph'\n\nexport type EdgeChange = {|\n  change: 'edge',\n  from: NodeID,\n  to: NodeID,\n  enabled: boolean,\n|}\n\nexport type Change = EdgeChange\n\nexport const MOCKED_EDGE_KIND = 'mocked'\n\nexport function addChange(graph: Graph, changes: $ReadOnlyArray<Change>, change: Change) {\n  // Remove same changes from queue\n  const newChanges = reject(changes, pick(change, ['change', 'from', 'to']))\n  if (change.change === 'edge') {\n    const edge = resolveEdgeForNodes(graph, change.from, change.to)\n    const wasOriginallyEnabled = edge ? edge.kind !== MOCKED_EDGE_KIND : false\n    // Add to queue only if it's a different state than originally\n    if (change.enabled !== wasOriginallyEnabled) {\n      newChanges.push(change)\n    }\n  }\n  return newChanges\n}\n\nexport function applyChanges(graph: Graph, changes: $ReadOnlyArray<Change>) {\n  for (const change of changes) {\n    if (change.change === 'edge') {\n      const fromNode = graph.nodes[change.from]\n      const toNode = graph.nodes[change.to]\n      if (!fromNode || !toNode) {\n        graph.errors.push({message: `One of the nodes is missing, cannot apply the change`, change})\n        continue\n      }\n\n      let edge = resolveEdgeForNodes(graph, change.from, change.to)\n      if (!edge) {\n        edge = addEdge(graph, {\n          from: change.from,\n          to: change.to,\n          enabled: change.enabled,\n          kind: MOCKED_EDGE_KIND,\n        })\n      }\n      toggleEdge(graph, edge, change.enabled)\n    }\n  }\n}\n","// @flow\n\nimport type {Graph, Node, NodeID} from './graph'\nimport {getNode} from './graph'\n\nexport type EdgeChain = NodeID[]\n\nasync function gatherChains(\n  graph: Graph,\n  node: Node,\n  toId: NodeID,\n  path: NodeID[],\n  visited: {[NodeID]: boolean},\n) {\n  const currentPath = [...path, node.id]\n  if (node.id === toId) return [currentPath]\n\n  visited[node.id] = true\n  const paths = []\n\n  // prefer shortes paths first\n  if (node.children.indexOf(toId) >= 0) {\n    paths.push([...currentPath, toId])\n  }\n\n  for (const childId of node.children) {\n    if (visited[childId]) continue\n    if (childId === toId) continue\n    const result = await gatherChains(graph, getNode(graph, childId), toId, currentPath, visited)\n    if (result.length > 0) {\n      paths.push(...result)\n    }\n    await graph.idle()\n  }\n  return paths\n}\n\nexport async function findChains(graph: Graph, fromNode: Node, toNode: Node): Promise<EdgeChain[]> {\n  return gatherChains(graph, fromNode, toNode.id, [], {})\n}\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles, Icon} from '@material-ui/core'\n\ntype Props = {|\n  error?: any,\n  children?: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.error.dark,\n    color: theme.palette.error.contrastText,\n    padding: 16,\n    display: 'flex',\n    'align-items': 'center',\n    'flex-shrink': 0,\n  },\n  icon: {\n    'margin-right': 8,\n  },\n})\n\nconst ErrorBox = ({classes, error, children}: Props) => {\n  if (children === undefined) children = String(error)\n  return (\n    <div className={classes.root}>\n      <Icon className={classes.icon}>error</Icon>\n      <span className={classes.label}>\n        {React.isValidElement(children) ? children : String(children)}\n      </span>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(ErrorBox)\n","// @flow\n\nimport type {Graph, Node, NodeID} from './graph'\nimport {getNode} from './graph'\n\nasync function walkGraph(\n  graph: Graph,\n  node: Node,\n  options: {visited: {[NodeID]: boolean}, nodesKey: string},\n) {\n  options.visited[node.id] = true\n\n  for (const childId of node[options.nodesKey]) {\n    if (options.visited[childId]) continue\n    await walkGraph(graph, getNode(graph, childId), options)\n    await graph.idle()\n  }\n}\n\nexport function getDeepNodeChildren(graph: Graph, node: Node): Promise<$ReadOnlyArray<NodeID>> {\n  const key = `getDeepNodeChildren:${node.id}`\n  if (!graph.cache[key]) {\n    const visited = {}\n    graph.cache[key] = walkGraph(graph, node, {visited, nodesKey: 'children'}).then(() => {\n      // $FlowFixMe\n      delete visited[node.id]\n      return Object.keys(visited)\n    })\n  }\n  return graph.cache[key]\n}\n\nexport function getDeepNodeParents(graph: Graph, node: Node): Promise<$ReadOnlyArray<NodeID>> {\n  const key = `getDeepNodeParents:${node.id}`\n  if (!graph.cache[key]) {\n    const visited = {}\n    graph.cache[key] = walkGraph(graph, node, {visited, nodesKey: 'parents'}).then(() => {\n      // $FlowFixMe\n      delete visited[node.id]\n      return Object.keys(visited)\n    })\n  }\n  return graph.cache[key]\n}\n\nexport function keepOnlyEntryModules(graph: Graph, nodes: $ReadOnlyArray<Node>) {\n  return nodes.filter((node: Node) => {\n    if (node.kind !== 'module') return false\n    return node.parents.every(parentId => getNode(graph, parentId).kind !== 'module')\n  })\n}\n\nexport function keepOnlyLeafModules(graph: Graph, nodes: $ReadOnlyArray<Node>) {\n  return nodes.filter((node: Node) => {\n    if (node.kind !== 'module') return false\n    return node.children.length === 0\n  })\n}\n","// @flow\n\nimport type {Graph, Node, NodeID} from './graph'\nimport {getNode} from './graph'\nimport {getDeepNodeChildren} from './dependencies'\n\nexport type EdgePath = NodeID[]\n\nexport function calculateTreeSize(graph: Graph, node: Node): Promise<number> {\n  const key = `calculateTreeSize:${node.id}`\n\n  if (!graph.cache[key]) {\n    graph.cache[key] = getDeepNodeChildren(graph, node).then(tree =>\n      tree.reduce((sum, id) => sum + getNode(graph, id).size, node.size),\n    )\n  }\n  return graph.cache[key]\n}\n","// @flow\nimport type {Graph, Node} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport numeral from 'numeral'\nimport Async from 'react-promise'\nimport {withStyles} from '@material-ui/core'\nimport red from '@material-ui/core/colors/red'\nimport green from '@material-ui/core/colors/green'\n\nimport {calculateTreeSize} from '../../analysis/size'\nimport {getNode} from '../../analysis/graph'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  node: Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  bigger: {\n    color: red.A700,\n  },\n  smaller: {\n    color: green.A700,\n  },\n})\n\nfunction NodeSize({baseGraph, graph, node, classes}: Props) {\n  return (\n    <Async\n      promise={Promise.all([\n        baseGraph && calculateTreeSize(baseGraph, getNode(baseGraph, node.id)),\n        calculateTreeSize(graph, node),\n      ])}\n      then={([baseTreeSize, treeSize]) => (\n        <>\n          {numeral(node.size).format('0[.]0b')}\n          {' + '}\n          {numeral(treeSize - node.size).format('0[.]0b')}\n          {baseTreeSize != null && treeSize !== baseTreeSize ? (\n            <span className={treeSize > baseTreeSize ? classes.bigger : classes.smaller}>\n              {' ('}\n              {treeSize > baseTreeSize ? '+' : '-'}\n              {numeral(Math.abs(treeSize - baseTreeSize)).format('0[.]0b')}\n              {')'}\n            </span>\n          ) : null}\n        </>\n      )}\n      pending={'...'}\n    />\n  )\n}\nexport default withStyles(styles)(NodeSize)\n","// @flow\n\nimport type {Node, NodeID} from './graph'\n\nexport type EdgePath = NodeID[]\n\n// https://regex101.com/r/yU5wqf/2\n// 1 - path to packages dir (null if no package)\n// 2 - package name (null if no package)\n// 3 - directory in package\n// 4 - filename\n// 5 - extension\nconst FILENAME_RE = /^(?:(.*\\/(?:node_modules|web_modules|packages|~)\\/)((?:@[^/]+?\\/)?[^/]+))?(.*?\\/)?([^/]+)?(\\.[^./]+)?$/\n\ntype ModuleInfo = {|\n  pathToPackage?: string,\n  packageName?: string,\n  path?: string,\n  name?: string,\n  extension?: string,\n|}\n\nexport function getModuleInfo({file, name, id}: Node): ModuleInfo {\n  if (!file) {\n    return {name: name || String(id) || '(unknown)'}\n  }\n  const found = file.match(FILENAME_RE)\n  if (!found) {\n    return {path: file}\n  }\n  return {\n    pathToPackage: found[1],\n    packageName: found[2],\n    path: found[3],\n    name: found[4],\n    extension: found[5],\n  }\n}\n\nexport function getPackageName({file}: Node): string {\n  if (!file) return ''\n  const found = file.match(FILENAME_RE)\n  return found ? found[2] : ''\n}\n\nexport function getPackageRelativeFilePath(node: Node): string {\n  const {file} = node\n  if (!file) return ''\n  const pkg = getPackageName(node)\n  if (!pkg) return ''\n  return file.slice(file.indexOf(pkg) + pkg.length + 1)\n}\n\nexport function isExternal({file}: Node): boolean {\n  if (!file) return false\n  return file.indexOf('/node_modules/') >= 0\n}\n\nexport function getFileExtension({file}: Node): string {\n  if (!file) return ''\n  const dot = file.lastIndexOf('.')\n  if (dot <= 0) return ''\n  return file.slice(dot + 1)\n}\n","// @flow\nimport type {Node} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {withStyles, Tooltip} from '@material-ui/core'\n\nimport {getModuleInfo} from '../../analysis/info'\n\ntype Props = {|\n  node: Node,\n  hidePackage?: boolean,\n  onlyPackage?: boolean,\n  tooltip?: boolean | string,\n  children?: React.Node,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    maxWidth: '100%',\n    display: 'inline-flex',\n    flexDirection: 'row',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  packageName: {\n    textOverflow: 'ellipsis',\n    flexShrink: 10,\n    overflow: 'hidden',\n  },\n  path: {\n    textOverflow: 'ellipsis',\n    flexShrink: 1000,\n    overflow: 'hidden',\n    minWidth: 10,\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    flexShrink: 1,\n    overflow: 'hidden',\n  },\n  extension: {\n    flexShrink: 0,\n  },\n})\n\nfunction NodeName({node, hidePackage, onlyPackage, tooltip, children, classes, className}: Props) {\n  // {selectFromNode && <a onClick={() => selectFromNode(node.id)}>From</a>}\n  // {selectToNode && <a onClick={() => selectToNode(node.id)}>To</a>}\n\n  const info = getModuleInfo(node)\n\n  const packageName = hidePackage ? '' : info.packageName\n  const path = onlyPackage ? '' : (info.path || '').replace(/^\\/|\\/$/g, '')\n  const name = onlyPackage ? '' : (info.name || '') + (info.extension || '')\n\n  const text = (\n    <span className={classNames(className, classes.root)}>\n      {packageName && <span className={classes.packageName}>{packageName}</span>}\n      {packageName && path ? '/' : ''}\n      {path && <span className={classes.path}>{path}</span>}\n      {(packageName || path) && name ? '/' : ''}\n      {name && <span className={classes.name}>{name}</span>}\n      {(packageName || name) && children ? <span>,&nbsp;</span> : ''}\n      {children && <span className={classes.children}>{children}</span>}\n    </span>\n  )\n\n  if (tooltip) {\n    return (\n      <Tooltip\n        title={\n          typeof tooltip === 'boolean'\n            ? `${node.kind}: ${node.name || ''} (${String(node.originalId)})`\n            : tooltip\n        }\n        placement=\"top\"\n        enterDelay={100}\n        disableFocusListener\n      >\n        {text}\n      </Tooltip>\n    )\n  }\n\n  return text\n}\nexport default withStyles(styles)(NodeName)\n","// @flow\n\nimport type {Graph, Node, Edge} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {\n  withStyles,\n  Typography,\n  IconButton,\n  Icon,\n  Card,\n  CardContent,\n  Collapse,\n  CardActions,\n} from '@material-ui/core'\n\nimport NodeSize from './NodeSize'\nimport NodeName from './NodeName'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  node: Node,\n  edge?: ?Edge,\n  actions?: React.Node,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'column',\n    flexShrink: 0,\n    flexGrow: 0,\n    justifyContent: 'stretch',\n  },\n  card: {\n    marginBottom: 24,\n    position: 'relative',\n  },\n  edgeButton: {\n    position: 'absolute',\n    left: -32,\n    top: 12,\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    marginLeft: 'auto',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: -8,\n    },\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n})\n\ntype State = {\n  expanded: boolean,\n}\n\nclass NodeCard extends React.PureComponent<Props, State> {\n  state = {\n    expanded: false,\n  }\n  render() {\n    const {classes, className, baseGraph, graph, node, edge, actions} = this.props\n    const {expanded} = this.state\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"headline\" noWrap>\n              <NodeName node={node} hidePackage tooltip />\n            </Typography>\n            <Typography variant=\"subheading\">\n              <NodeName node={node} onlyPackage />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              <NodeSize baseGraph={baseGraph} graph={graph} node={node} />\n            </Typography>\n          </CardContent>\n          <CardActions className={classes.actions} disableActionSpacing>\n            {actions}\n            <IconButton\n              className={classNames(classes.expand, expanded && classes.expandOpen)}\n              onClick={() => this.setState({expanded: !expanded})}\n            >\n              <Icon>expand_more</Icon>\n            </IconButton>\n          </CardActions>\n          <Collapse in={expanded}>\n            <CardContent>\n              <Typography variant=\"caption\" color=\"textSecondary\">\n                Name\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                {node.name}\n              </Typography>\n              <Typography variant=\"caption\" color=\"textSecondary\">\n                Kind\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                {String(node.kind)}\n              </Typography>\n              <Typography variant=\"caption\" color=\"textSecondary\">\n                ID\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                {String(node.originalId)}\n              </Typography>\n              {edge && (\n                <>\n                  <Typography variant=\"caption\" color=\"textSecondary\">\n                    Edge type\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    {edge.kind}\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"textSecondary\">\n                    Edge name\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    {edge.name || ''}\n                  </Typography>\n                </>\n              )}\n            </CardContent>\n          </Collapse>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NodeCard)\n","// @flow\n\nimport type {Edge} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {withStyles, Icon, IconButton, Tooltip} from '@material-ui/core'\n\ntype Props = {|\n  edge: Edge,\n  onClick: Function,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {},\n})\n\nclass EdgeLinkButton extends React.PureComponent<Props> {\n  render() {\n    const {classes, className, edge, onClick} = this.props\n\n    return (\n      <Tooltip\n        title={`${edge.enabled ? 'Unlink' : 'Link'} this node with above one`}\n        disableFocusListener\n        placement=\"top\"\n        enterDelay={500}\n      >\n        <IconButton\n          className={classNames(className, classes.root)}\n          aria-label=\"Unlink\"\n          color={edge.enabled ? 'secondary' : 'default'}\n          onClick={onClick}\n        >\n          <Icon>{edge.enabled ? 'link_off' : 'link'}</Icon>\n        </IconButton>\n      </Tooltip>\n    )\n  }\n}\n\nexport default withStyles(styles)(EdgeLinkButton)\n","// @flow\n\nimport type {Graph, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport {withStyles, ListItem, ListItemText} from '@material-ui/core'\n\nimport {getNode} from '../../analysis/graph'\nimport NodeName from './NodeName'\n\ntype Props = {|\n  graph: Graph,\n  chain: $ReadOnlyArray<NodeID>,\n  through: $ReadOnlyArray<NodeID>,\n  checked?: boolean,\n\n  onClick: Function,\n\n  style: Object,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {},\n  nodes: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  node: {\n    width: 300,\n    marginRight: 24,\n    position: 'relative',\n  },\n  link: {\n    position: 'absolute',\n    left: -24,\n    top: 0,\n  },\n})\n\nfunction ChainItem({graph, chain, through, onClick, style, classes, checked}: Props) {\n  return (\n    <div style={style}>\n      <ListItem dense ContainerComponent=\"div\" button onClick={onClick} disableGutters>\n        <ListItemText\n          primary={through.length ? <NodeName node={getNode(graph, through[0])} /> : 'Direct'}\n          secondary={`${chain.length - 1} nodes deep`}\n          primaryTypographyProps={{noWrap: true, color: checked ? 'secondary' : 'default'}}\n        />\n      </ListItem>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(ChainItem)\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles} from '@material-ui/core'\n\ntype Props = {|\n  children: React.Node,\n  icon: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.text.secondary,\n    padding: 24,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexShrink: 0,\n    textAlign: 'center',\n  },\n  icon: {\n    'margin-bottom': 8,\n  },\n})\n\nconst EmptyBox = ({classes, children, icon}: Props) => (\n  <div className={classes.root}>\n    <div className={classes.icon}>{icon}</div>\n    <div>{children}</div>\n  </div>\n)\n\nexport default withStyles(styles)(EmptyBox)\n","// @flow\n\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {difference} from 'lodash'\nimport {List, AutoSizer} from 'react-virtualized'\nimport {withStyles, Icon} from '@material-ui/core'\n\nimport ChainItem from './ChainItem'\nimport EmptyBox from '../EmptyBox'\n\ntype Props = {|\n  graph: Graph,\n  fromNode: Node,\n  toNode: Node,\n  chains: $ReadOnlyArray<$ReadOnlyArray<NodeID>>,\n  selectedChain: $ReadOnlyArray<NodeID>,\n  onChainSelect: (nodes: $ReadOnlyArray<NodeID>) => void,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n  },\n  list: {\n    outline: 0,\n  },\n})\n\nfunction ChainsList(props: Props) {\n  const {classes, className, graph, chains, fromNode, toNode, selectedChain, onChainSelect} = props\n  const usedIds = [fromNode.id, toNode.id]\n  const finalChains = chains.map(chain => {\n    const through = difference(chain, usedIds)\n    usedIds.push(...through)\n    return {through, chain}\n  })\n\n  return (\n    <div className={classNames(className, classes.root)}>\n      <AutoSizer>\n        {({width, height}) => (\n          <List\n            className={classes.list}\n            width={width}\n            height={height}\n            rowCount={finalChains.length}\n            rowHeight={54}\n            rowRenderer={({index, style}) => {\n              const {chain, through} = finalChains[index]\n              return (\n                <ChainItem\n                  key={index}\n                  graph={graph}\n                  chain={chain}\n                  through={through}\n                  onClick={() => onChainSelect(chain)}\n                  style={style}\n                  checked={selectedChain.every((id, index) => chain[index] === id)}\n                />\n              )\n            }}\n            noRowsRenderer={() => (\n              <EmptyBox icon={<Icon>link_off</Icon>}>\n                There is no connection between these nodes\n              </EmptyBox>\n            )}\n          />\n        )}\n      </AutoSizer>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(ChainsList)\n","// @flow\n\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\nimport type {Change} from '../../analysis/changes'\nimport classNames from 'classnames'\n\nimport * as React from 'react'\nimport {createSelector} from 'reselect'\nimport Async from 'react-promise'\nimport {withStyles, Typography, LinearProgress, IconButton, Icon, Tooltip} from '@material-ui/core'\n\nimport {findChains} from '../../analysis/chains'\nimport ErrorBox from '../ErrorBox'\nimport NodeCard from './NodeCard'\nimport {getNodes, resolveEdgeForNodes} from '../../analysis/graph'\nimport EdgeLinkButton from './EdgeLinkButton'\nimport ChainsList from './ChainsList'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  fromNode: ?Node,\n  toNode: ?Node,\n  pinned: $ReadOnlyArray<NodeID>,\n  onPinnedToggle: NodeID => any,\n  onAddChange: Change => any,\n  onFromNodeSelect: NodeID => any,\n  onToNodeSelect: NodeID => any,\n  classes: Object,\n  className?: string,\n|}\n\ntype State = {\n  selectedChain: ?$ReadOnlyArray<NodeID>,\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'row',\n    justifyContent: 'stretch',\n  },\n\n  chains: {\n    width: 300,\n    flexGrow: 0.2,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n    marginRight: 24,\n  },\n  chainsList: {\n    flexGrow: 1,\n  },\n  selectedChain: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    position: 'relative',\n    width: 300,\n  },\n  selectedChainScroll: {\n    overflowY: 'auto',\n  },\n  listProgress: {\n    marginTop: 16,\n  },\n})\n\nclass ChainsExplorer extends React.PureComponent<Props, State> {\n  state = {\n    selectedChain: null,\n  }\n\n  chainsPromiseSelector = createSelector(\n    p => p.graph,\n    p => p.fromNode,\n    p => p.toNode,\n    (graph, fromNode, toNode) => {\n      if (!fromNode || !toNode) return null\n      return findChains(graph, fromNode, toNode)\n    },\n  )\n\n  componentDidMount() {\n    this.componentDidUpdate({})\n  }\n\n  _waitingForChainsPromise: any\n  componentDidUpdate(prevProps) {\n    const baseGraphChanged = this.props.baseGraph !== prevProps.baseGraph\n    const {fromNode: currentFrom, toNode: currentTo} = this.props\n    const {fromNode: prevFrom, toNode: prevTo} = prevProps\n    const fromToIdChanged =\n      (currentFrom && currentFrom.id) !== (prevFrom && prevFrom.id) ||\n      (currentTo && currentTo.id) !== (prevTo && prevTo.id)\n    if (baseGraphChanged || fromToIdChanged) {\n      // Select the first chain whenever nodes or base graph changes,\n      // but keep it if user edits the graph\n      const chainsPromise = this.chainsPromiseSelector(this.props)\n      this.setState({\n        selectedChain: null,\n      })\n      this._waitingForChainsPromise = chainsPromise\n      if (currentFrom && currentTo && chainsPromise) {\n        chainsPromise.then(chains => {\n          if (this._waitingForChainsPromise !== chainsPromise) return\n          this.setState({selectedChain: chains[0] || [currentFrom.id, currentTo.id]})\n        })\n      }\n    }\n  }\n\n  renderSelectedChain = () => {\n    const {\n      baseGraph,\n      graph,\n      pinned,\n      onAddChange,\n      onFromNodeSelect,\n      onToNodeSelect,\n      onPinnedToggle,\n    } = this.props\n    const {selectedChain} = this.state\n    if (!selectedChain) return null\n    const nodes = getNodes(graph, selectedChain)\n\n    return nodes.map((node: Node, index) => {\n      const isFirst = index === 0\n      const isLast = index === nodes.length - 1\n      if (isFirst) return null\n      const prevNode = nodes[index - 1]\n      const edge = resolveEdgeForNodes(graph, prevNode.id, node.id) || {\n        from: prevNode.id,\n        to: node.id,\n        kind: '',\n        enabled: false,\n      }\n\n      return (\n        <>\n          <NodeCard\n            baseGraph={baseGraph}\n            graph={graph}\n            node={node}\n            edge={edge}\n            actions={\n              <>\n                <EdgeLinkButton\n                  edge={edge}\n                  onClick={() =>\n                    onAddChange({\n                      change: 'edge',\n                      from: edge.from,\n                      to: edge.to,\n                      enabled: !edge.enabled,\n                    })\n                  }\n                />\n                <Tooltip\n                  title=\"Set as the first node\"\n                  disableFocusListener\n                  enterDelay={500}\n                  placement=\"top\"\n                >\n                  <IconButton onClick={() => onFromNodeSelect(node.id)}>\n                    <Icon>vertical_align_top</Icon>\n                  </IconButton>\n                </Tooltip>\n                {!isLast && (\n                  <Tooltip\n                    title=\"Set as the last node\"\n                    disableFocusListener\n                    enterDelay={500}\n                    placement=\"top\"\n                  >\n                    <IconButton onClick={() => onToNodeSelect(node.id)}>\n                      <Icon>vertical_align_bottom</Icon>\n                    </IconButton>\n                  </Tooltip>\n                )}\n                <IconButton onClick={() => onPinnedToggle(node.id)}>\n                  <Icon>{pinned.indexOf(node.id) >= 0 ? 'star' : 'star_border'}</Icon>\n                </IconButton>\n              </>\n            }\n          />\n        </>\n      )\n    })\n  }\n\n  renderChains = chains => {\n    const {graph, fromNode, toNode, classes} = this.props\n    const {selectedChain} = this.state\n    if (!selectedChain || !fromNode || !toNode) return null\n    return (\n      <ChainsList\n        className={classes.chainsList}\n        graph={graph}\n        fromNode={fromNode}\n        toNode={toNode}\n        chains={chains}\n        selectedChain={selectedChain}\n        onChainSelect={chain => this.setState({selectedChain: chain})}\n      />\n    )\n  }\n\n  render() {\n    const {\n      className,\n      classes,\n      baseGraph,\n      graph,\n      fromNode,\n      toNode,\n      pinned,\n      onPinnedToggle,\n      onToNodeSelect,\n    } = this.props\n    const chainsPromise = this.chainsPromiseSelector(this.props)\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        <div className={classes.chains}>\n          <Typography variant=\"headline\">Dependency chains</Typography>\n          <Typography variant=\"subheading\" gutterBottom>\n            Select one of the dependency chains between these two nodes. Try breaking the links\n            between them to see the impact of your changes.\n          </Typography>\n          <Async\n            promise={chainsPromise}\n            then={chains => this.renderChains(chains)}\n            catch={error => <ErrorBox>{error}</ErrorBox>}\n            pending={<LinearProgress className={classes.listProgress} />}\n          />\n        </div>\n        <div className={classes.selectedChain}>\n          {fromNode && (\n            <NodeCard\n              baseGraph={baseGraph}\n              graph={graph}\n              node={fromNode}\n              actions={\n                <>\n                  {fromNode !== toNode && (\n                    <Tooltip\n                      title=\"Set as the last node\"\n                      disableFocusListener\n                      enterDelay={500}\n                      placement=\"top\"\n                    >\n                      <IconButton onClick={() => onToNodeSelect(fromNode.id)}>\n                        <Icon>vertical_align_bottom</Icon>\n                      </IconButton>\n                    </Tooltip>\n                  )}\n                  <IconButton onClick={() => onPinnedToggle(fromNode.id)}>\n                    <Icon>{pinned.indexOf(fromNode.id) >= 0 ? 'star' : 'star_border'}</Icon>\n                  </IconButton>\n                </>\n              }\n            />\n          )}\n          <div className={classes.selectedChainScroll}>{this.renderSelectedChain()}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ChainsExplorer)\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles, Icon} from '@material-ui/core'\nimport orange from '@material-ui/core/colors/amber'\n\ntype Props = {|\n  children: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    background: orange.A700,\n    padding: '8px 24px 8px 24px',\n    display: 'flex',\n    alignItems: 'center',\n    flexShrink: 0,\n    justifyContent: 'center',\n  },\n  icon: {\n    'margin-right': 8,\n  },\n})\n\nconst WarningBar = ({classes, children}: Props) => (\n  <div className={classes.root}>\n    <Icon className={classes.icon}>warning</Icon>\n    <span className={classes.label}>{children}</span>\n  </div>\n)\n\nexport default withStyles(styles)(WarningBar)\n","// @flow\n\nimport * as React from 'react'\nimport {withStyles, Icon} from '@material-ui/core'\n\ntype Props = {|\n  children: React.Node,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.error.dark,\n    color: theme.palette.error.contrastText,\n    padding: '8px 24px 8px 24px',\n    display: 'flex',\n    alignItems: 'center',\n    flexShrink: 0,\n    justifyContent: 'center',\n  },\n  icon: {\n    'margin-right': 8,\n  },\n})\n\nconst ErrorBar = ({classes, children}: Props) => (\n  <div className={classes.root}>\n    <Icon className={classes.icon}>error</Icon>\n    <span className={classes.label}>{children}</span>\n  </div>\n)\n\nexport default withStyles(styles)(ErrorBar)\n","// @flow\n\nimport type {Graph} from '../../analysis/graph'\nimport type {Change} from '../../analysis/changes'\n\nimport * as React from 'react'\nimport {without} from 'lodash'\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\nimport {\n  withStyles,\n  IconButton,\n  Icon,\n  List,\n  Toolbar,\n  Button,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core'\nimport {resolveEdgeForNodes, getNode} from '../../analysis/graph'\nimport EmptyBox from '../EmptyBox'\n\ntype Props = {|\n  graph: Graph,\n  changes: $ReadOnlyArray<Change>,\n  onChangesUpdate: ($ReadOnlyArray<Change>) => void,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {},\n  list: {\n    maxHeight: '70vh',\n    overflowY: 'auto',\n  },\n  delete: {},\n})\n\nclass ChangesView extends React.PureComponent<Props> {\n  render() {\n    const {classes, graph, changes, onChangesUpdate} = this.props\n    const textsToCopy = []\n    return (\n      <div>\n        <List className={classes.list}>\n          {changes.map((change, index) => {\n            const edge = resolveEdgeForNodes(graph, change.from, change.to)\n            if (!edge) return null\n            const fromNode = getNode(graph, edge.from)\n            const toNode = getNode(graph, edge.to)\n            const fromName = fromNode.file || fromNode.name || fromNode.id\n            const toName = edge.name || toNode.name || toNode.id\n            textsToCopy.push(`${edge.enabled ? 'Add' : 'Remove'} \"${toName}\" from \"${fromName}\"`)\n            return (\n              <ListItem key={index} graph={graph} change={change}>\n                <IconButton\n                  aria-label=\"Delete\"\n                  className={classes.delete}\n                  onClick={() => onChangesUpdate(without(changes, change))}\n                >\n                  <Icon>delete</Icon>\n                </IconButton>\n                <ListItemText\n                  primary={\n                    <>\n                      {edge.enabled ? 'Add' : 'Remove'} \"<b>{toName}</b>\" from \"<b>{fromName}</b>\"\n                    </>\n                  }\n                />\n                <ListItemSecondaryAction />\n              </ListItem>\n            )\n          })}\n          {changes.length === 0 && (\n            <EmptyBox icon={<Icon>block</Icon>}>\n              No changes applied. Try breaking links between dependencies\n            </EmptyBox>\n          )}\n        </List>\n        <Toolbar>\n          <Button onClick={() => onChangesUpdate([])}>Reset changes</Button>\n          {textsToCopy.length > 0 ? (\n            <CopyToClipboard text={textsToCopy.join('\\n\\n')}>\n              <Button>Copy to clipboard</Button>\n            </CopyToClipboard>\n          ) : null}\n        </Toolbar>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ChangesView)\n","// @flow\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {withStyles, ListItem, ListItemText, ListItemSecondaryAction} from '@material-ui/core'\nimport NodeSize from './NodeSize'\nimport NodeName from './NodeName'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  checked?: boolean,\n  node: Node,\n  secondaryActions?: React.Node[],\n  selectFromNode?: (node: NodeID) => void,\n  selectToNode?: (node: NodeID) => void,\n  onClick?: () => void,\n  style?: Object,\n  classes: Object,\n  className?: string,\n|}\n\nconst styles = theme => ({\n  root: {\n    // paddingLeft: 16,\n  },\n})\n\nfunction NodeItem({\n  baseGraph,\n  graph,\n  checked,\n  onClick,\n  node,\n  selectFromNode,\n  selectToNode,\n  selectNode,\n  style,\n  children,\n  classes,\n  className,\n  secondaryActions = [],\n}: Props) {\n  // {selectFromNode && <a onClick={() => selectFromNode(node.id)}>From</a>}\n  // {selectToNode && <a onClick={() => selectToNode(node.id)}>To</a>}\n\n  return (\n    <div style={style}>\n      <ListItem\n        dense\n        disableGutters\n        ContainerComponent=\"div\"\n        button={!!onClick}\n        onClick={onClick}\n        className={classNames(className, classes.root)}\n      >\n        <ListItemText\n          primary={<NodeName node={node} hidePackage tooltip />}\n          primaryTypographyProps={{noWrap: true, color: checked ? 'secondary' : 'default'}}\n          secondary={<NodeSize baseGraph={baseGraph} graph={graph} node={node} />}\n        />\n        {secondaryActions.map((action, index) => (\n          <ListItemSecondaryAction key={index}>{action}</ListItemSecondaryAction>\n        ))}\n      </ListItem>\n    </div>\n  )\n}\nexport default withStyles(styles)(NodeItem)\n","// @flow\n\ntype TreeState = {\n  expanded: $ReadOnlyArray<any>,\n}\n\ntype TreeOptions = {\n  getChildren?: any => $ReadOnlyArray<any>,\n  getKey?: any => any,\n}\n\nconst defaultGetChildren = row => row.children\nconst defaultGetKey = row => row\n\nexport function isTreeExpanded(state: TreeState, row: any, options?: TreeOptions = {}): boolean {\n  const {getKey = defaultGetKey} = options\n  return state.expanded.indexOf(getKey(row)) >= 0\n}\n\n// Flattens a tree of items into a flat set of rows, which can be then used in any list rendering lib\nexport function flattenTreeToRows(\n  tree: any,\n  state: TreeState,\n  options?: TreeOptions = {},\n): $ReadOnlyArray<any> {\n  const result = []\n  const {getChildren = defaultGetChildren} = options\n  for (const row of tree) {\n    result.push(row)\n    if (isTreeExpanded(state, row, options)) {\n      const children = getChildren(row)\n      result.push(...flattenTreeToRows(children, state, options))\n    }\n  }\n  return result\n}\n\nexport function toggleTreeRow(\n  state: TreeState,\n  row: any,\n  options?: TreeOptions = {},\n  expand?: boolean,\n): TreeState {\n  const current = isTreeExpanded(state, row, options)\n  if (expand == null) {\n    expand = !current\n  }\n  if (expand === current) return state\n  const {getKey = defaultGetKey} = options\n  const key = getKey(row)\n  if (expand) {\n    return {...state, expanded: [...state.expanded, key]}\n  } else {\n    return {...state, expanded: state.expanded.filter(e => e !== key)}\n  }\n}\n\nexport const toggleTreeRowState = (row: any, options?: TreeOptions = {}) => (state: TreeState) =>\n  toggleTreeRow(state, row, options)\n","// @flow\n\nimport numeral from 'numeral'\n\nimport * as React from 'react'\nimport Fuse from 'fuse.js'\nimport {groupBy, map, sortBy, sumBy} from 'lodash'\n\nimport {List, AutoSizer} from 'react-virtualized'\nimport {\n  withStyles,\n  Input,\n  InputAdornment,\n  IconButton,\n  Icon,\n  ListItem,\n  ListItemText,\n  LinearProgress,\n} from '@material-ui/core'\nimport classNames from 'classnames'\nimport {createSelector} from 'reselect'\n\nimport type {Node, Graph, NodeID} from '../../analysis/graph'\nimport {flattenTreeToRows, toggleTreeRowState, isTreeExpanded} from '../tree'\nimport {getPackageName} from '../../analysis/info'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  nodes: $ReadOnlyArray<Node>,\n  renderItem: any => React.Node,\n  renderEmpty: any => React.Node,\n  search?: string,\n  selected?: ?Node,\n  pinned: $ReadOnlyArray<NodeID>,\n  sortGroupsBySize?: boolean,\n  loading?: boolean,\n  classes: Object,\n  className?: string,\n|}\n\ntype State = {\n  search: string,\n  expanded: $ReadOnlyArray<any>,\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n  },\n  search: {},\n  listContainer: {\n    flexGrow: 1,\n    position: 'relative',\n  },\n  list: {\n    outline: 0,\n  },\n})\n\nconst treeOptions = {getKey: group => group.name}\n\nclass NodeList extends React.PureComponent<Props, State> {\n  state = {\n    search: '',\n    expanded: [],\n  }\n  fuseSelector = createSelector(\n    (_, p) => p.nodes,\n    nodes => {\n      return new Fuse(nodes, {\n        keys: ['name', 'id', 'kind'],\n      })\n    },\n  )\n  searchSelector = createSelector(\n    this.fuseSelector,\n    s => s.search,\n    (fuse, search) => {\n      return search ? fuse.search(search) : fuse.list\n    },\n  )\n  pinnedSelector = createSelector(\n    this.searchSelector,\n    (_, p) => p.pinned,\n    (nodes, pinned) => {\n      return nodes.filter(node => pinned.indexOf(node.id) >= 0)\n    },\n  )\n  groupSelector = createSelector(\n    this.searchSelector,\n    this.pinnedSelector,\n    (_, p) => p.sortGroupsBySize,\n    (nodes, pinned, sortGroupsBySize) => {\n      const groups = groupBy(nodes, node => {\n        if (node.kind === 'module') {\n          return getPackageName(node) || '(root modules)'\n        }\n        return `(${node.kind}s)`\n      })\n      const rows = sortBy(\n        map(groups, (children, name) => ({\n          name,\n          children: sortBy(children, 'file'),\n          size: sumBy(children, 'size'),\n          group: true,\n        })),\n        sortGroupsBySize ? group => -group.size : 'name',\n      )\n      rows.unshift(...pinned)\n      return rows\n    },\n  )\n  nodesSelector = createSelector(\n    this.groupSelector,\n    s => s.expanded,\n    (tree, expanded) => {\n      return flattenTreeToRows(tree, {expanded}, treeOptions)\n    },\n  )\n\n  renderList() {\n    const {classes, baseGraph, graph, renderItem, renderEmpty} = this.props\n    const nodes = this.nodesSelector(this.state, this.props)\n\n    return (\n      <div className={classes.listContainer}>\n        <AutoSizer>\n          {({width, height}) => (\n            <List\n              className={classes.list}\n              width={width}\n              height={height}\n              rowCount={nodes.length}\n              rowHeight={54}\n              rowRenderer={({index, style}) => {\n                const node = nodes[index]\n                if (node.group) {\n                  return (\n                    <ListItem\n                      dense\n                      ContainerComponent=\"div\"\n                      button\n                      onClick={() => this.setState(toggleTreeRowState(node, treeOptions))}\n                      disableGutters\n                      style={style}\n                      key={index}\n                      divider\n                    >\n                      <ListItemText\n                        primary={node.name}\n                        secondary={`${numeral(node.size).format('0.0b')} in ${\n                          node.children.length\n                        }`}\n                      />\n                      <Icon>\n                        {isTreeExpanded(this.state, node, treeOptions)\n                          ? 'expand_less'\n                          : 'expand_more'}\n                      </Icon>\n                    </ListItem>\n                  )\n                }\n                return renderItem({node, key: node.id, baseGraph, graph, style})\n              }}\n              noRowsRenderer={renderEmpty}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    )\n  }\n\n  render() {\n    const {classes, className, loading} = this.props\n    const {search} = this.state\n    return (\n      <div className={classNames(className, classes.root)}>\n        <Input\n          className={classes.search}\n          id=\"adornment-password\"\n          type=\"text\"\n          value={search}\n          onChange={el => this.setState({search: el.target.value})}\n          endAdornment={\n            search && (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"Clear search\"\n                  onClick={() => this.setState({search: ''})}\n                >\n                  <Icon color=\"inherit\">clear</Icon>\n                </IconButton>\n              </InputAdornment>\n            )\n          }\n          placeholder=\"Search\"\n        />\n        {loading ? <LinearProgress className={classes.listProgress} /> : this.renderList()}\n      </div>\n    )\n  }\n}\n//scrollToIndex={scrollToIndex >= 0 ? scrollToIndex : null}\nexport default withStyles(styles)(NodeList)\n","// @flow\n\nimport type {Graph, Node, NodeID} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {map} from 'lodash'\nimport {createSelector} from 'reselect'\nimport Async from 'react-promise'\nimport {\n  withStyles,\n  Icon,\n  Typography,\n  Menu,\n  MenuItem,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\n\nimport EmptyBox from '../EmptyBox'\nimport NodeItem from './NodeItem'\nimport NodeList from './NodeList'\n\ntype Mode = {\n  getNodes: () => $ReadOnlyArray<Node> | Promise<$ReadOnlyArray<Node>>,\n  renderTitle: () => React.Node,\n  renderInfo: () => React.Node,\n  renderEmpty: () => string,\n}\n\nexport type Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  pinned: $ReadOnlyArray<NodeID>,\n  selected: ?Node,\n  modes: {\n    [string]: Mode,\n  },\n  defaultMode: string,\n  onNodeSelect: NodeID => void,\n  classes: Object,\n  className?: string,\n|}\n\ntype State = {|\n  modeId: ?string,\n  modeMenuAnchor: any,\n|}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n  },\n  list: {\n    flexGrow: 1,\n  },\n  listProgress: {\n    marginTop: 16,\n  },\n  modeMenuItem: {\n    width: 300,\n  },\n})\n\nclass GraphExplorer extends React.Component<Props, State> {\n  state = {modeId: null, modeMenuAnchor: null}\n\n  modeSelector = (s, p) => p.modes[s.modeId || ''] || p.modes[p.defaultMode]\n  nodesSelector = (s, p) => this.modeSelector(s, p).getNodes()\n\n  nodesPromiseSelector = createSelector(\n    this.nodesSelector,\n    // Needed so we don't recreate the promise on every render\n    nodes => Promise.resolve(nodes),\n  )\n\n  static getDerivedStateFromProps({modes = {}}, state = {}) {\n    if (!modes[state.modeId]) {\n      // If selected mode is not available anymore, switch to default\n      return {modeId: null}\n    }\n    return null\n  }\n\n  handleModeMenuOpen = event => {\n    this.setState({modeMenuAnchor: event.currentTarget})\n  }\n  handleModeMenuClose = () => {\n    this.setState({modeMenuAnchor: null})\n  }\n\n  renderList(nodes) {\n    const {classes, baseGraph, graph, selected, pinned, onNodeSelect} = this.props\n    const mode = this.modeSelector(this.state, this.props)\n\n    return (\n      <NodeList\n        className={classes.list}\n        nodes={nodes || []}\n        loading={nodes == null}\n        baseGraph={baseGraph}\n        graph={graph}\n        pinned={pinned}\n        selected={selected}\n        sortGroupsBySize\n        renderItem={itemProps => (\n          <NodeItem\n            {...itemProps}\n            onClick={() => onNodeSelect(itemProps.node.id)}\n            checked={selected ? selected.id === itemProps.node.id : false}\n          />\n        )}\n        renderEmpty={() => <EmptyBox icon={<Icon>block</Icon>}>{mode.renderEmpty()}</EmptyBox>}\n      />\n    )\n  }\n\n  renderModeMenu() {\n    const {classes, modes, defaultMode} = this.props\n    const {modeMenuAnchor, modeId} = this.state\n    const currentModeId = modeId || defaultMode\n    return (\n      <Menu\n        id=\"lock-menu\"\n        anchorEl={modeMenuAnchor}\n        open={Boolean(modeMenuAnchor)}\n        onClose={this.handleModeMenuClose}\n      >\n        {map(modes, (mode: Mode, id) => (\n          <MenuItem\n            className={classes.modeMenuItem}\n            key={id}\n            selected={id === currentModeId}\n            onClick={() => this.setState({modeId: id, modeMenuAnchor: null})}\n          >\n            {mode.renderTitle()}\n          </MenuItem>\n        ))}\n      </Menu>\n    )\n  }\n\n  render() {\n    const {className, classes} = this.props\n\n    const mode = this.modeSelector(this.state, this.props)\n    const nodesPromise = this.nodesPromiseSelector(this.state, this.props)\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        <ListItem\n          button\n          disableGutters\n          className={classes.header}\n          onClick={this.handleModeMenuOpen}\n        >\n          <ListItemText>\n            <Typography variant=\"headline\">{mode.renderTitle()}</Typography>\n            <Typography variant=\"subheading\" gutterBottom>\n              {mode.renderInfo()}\n            </Typography>\n          </ListItemText>\n          <Icon color=\"action\" className={classes.headerMore}>\n            more_vert\n          </Icon>\n        </ListItem>\n        {this.renderModeMenu()}\n        <Async\n          promise={nodesPromise}\n          then={nodes => this.renderList(nodes)}\n          pending={() => this.renderList(null)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(GraphExplorer)\n","// @flow\n\nimport type {Node, NodeID, Graph} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {createSelector} from 'reselect'\nimport {withStyles} from '@material-ui/core'\n\nimport {getNodes, getAllNodes} from '../../analysis/graph'\nimport GraphExplorer from './GraphExplorer'\nimport NodeName from './NodeName'\nimport {\n  getDeepNodeParents,\n  keepOnlyEntryModules,\n  keepOnlyLeafModules,\n} from '../../analysis/dependencies'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  fromNode: ?Node,\n  pinned: $ReadOnlyArray<NodeID>,\n  toNode: ?Node,\n  onNodeSelect: NodeID => void,\n\n  className?: string,\n  classes: Object,\n|}\n\nconst styles = {\n  root: {},\n}\n\nclass ParentsExplorer extends React.PureComponent<Props> {\n  allNodesSelector = createSelector((_, p) => p.graph, graph => getAllNodes(graph))\n  getAllNodes = () => this.allNodesSelector(this.state, this.props)\n\n  entryNodesSelector = createSelector(\n    (_, p) => p.graph,\n    graph => keepOnlyEntryModules(graph, getAllNodes(graph)),\n  )\n  getEntryNodes = () => this.entryNodesSelector(this.state, this.props)\n\n  leafNodesSelector = createSelector(\n    (_, p) => p.graph,\n    graph => keepOnlyLeafModules(graph, getAllNodes(graph)),\n  )\n  getLeafNodes = () => this.leafNodesSelector(this.state, this.props)\n\n  directParentNodesSelector = createSelector(\n    (_, p) => p.graph,\n    (_, p) => p.fromNode,\n    (graph, fromNode) => {\n      if (!fromNode) return []\n      return getNodes(graph, fromNode.parents)\n    },\n  )\n  getDirectParentNodes = () => this.directParentNodesSelector(this.state, this.props)\n\n  parentNodesSelector = createSelector(\n    (_, p) => p.graph,\n    (_, p) => p.toNode,\n    (graph, toNode) => {\n      if (!toNode) return []\n      return getDeepNodeParents(graph, toNode).then(ids => getNodes(graph, ids))\n    },\n  )\n  getParentNodes = () => this.parentNodesSelector(this.state, this.props)\n\n  parentEntryNodesSelector = createSelector(\n    (_, p) => p.graph,\n    this.parentNodesSelector,\n    async (graph, nodes) => {\n      return keepOnlyEntryModules(graph, await nodes)\n    },\n  )\n  getParentEntryNodes = () => this.parentEntryNodesSelector(this.state, this.props)\n\n  modes = {\n    all: {\n      getNodes: this.getAllNodes,\n      renderTitle: () => 'All Nodes',\n      renderInfo: () => 'Select node to start from',\n      renderEmpty: () => 'Nothing found',\n    },\n    directParents: {\n      getNodes: this.getDirectParentNodes,\n      renderTitle: () => 'Direct Parents',\n      renderInfo: () => {\n        const {fromNode} = this.props\n        if (!fromNode) return null\n        return (\n          <>\n            Move up to direct parents of <NodeName node={fromNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No parents found',\n    },\n    parents: {\n      getNodes: this.getParentNodes,\n      renderTitle: () => 'All Parents',\n      renderInfo: () => {\n        const {toNode} = this.props\n        if (!toNode) return null\n        return (\n          <>\n            Move up to parents of <NodeName node={toNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No parents found',\n    },\n    parentEntries: {\n      getNodes: this.getParentEntryNodes,\n      renderTitle: () => 'Parent Entry Points',\n      renderInfo: () => {\n        const {toNode} = this.props\n        if (!toNode) return null\n        return (\n          <>\n            Move up to parent entries of <NodeName node={toNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No entries found',\n    },\n    entries: {\n      getNodes: this.getEntryNodes,\n      renderTitle: () => 'Entry Modules',\n      renderInfo: () => 'Select entry module to start from',\n      renderEmpty: () => 'No modules found',\n    },\n  }\n\n  initialModes = {\n    initialAll: this.modes.all,\n    initialEntries: this.modes.entries,\n    initialLeafs: {\n      getNodes: this.getLeafNodes,\n      renderTitle: () => 'Leaf Modules',\n      renderInfo: () => 'Select modules without children',\n      renderEmpty: () => 'No modules found',\n    },\n  }\n\n  render() {\n    // const {} = this.state\n    const {\n      classes,\n      className,\n      fromNode,\n      toNode,\n      baseGraph,\n      graph,\n      pinned,\n      onNodeSelect,\n    } = this.props\n\n    return (\n      <GraphExplorer\n        className={classNames(classes.root, className)}\n        modes={fromNode && toNode ? this.modes : this.initialModes}\n        defaultMode={fromNode && toNode ? 'parents' : 'initialAll'}\n        baseGraph={baseGraph}\n        graph={graph}\n        pinned={pinned}\n        onNodeSelect={onNodeSelect}\n        selected={fromNode}\n      />\n    )\n  }\n}\n\nexport default withStyles(styles)(ParentsExplorer)\n","// @flow\n\nimport type {Node, NodeID, Graph} from '../../analysis/graph'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport {createSelector} from 'reselect'\nimport {withStyles} from '@material-ui/core'\n\nimport {getNodes, getAllNodes} from '../../analysis/graph'\nimport GraphExplorer from './GraphExplorer'\nimport NodeName from './NodeName'\nimport {keepOnlyLeafModules, getDeepNodeChildren} from '../../analysis/dependencies'\n\ntype Props = {|\n  baseGraph: Graph,\n  graph: Graph,\n  pinned: $ReadOnlyArray<NodeID>,\n  fromNode: ?Node,\n  toNode: ?Node,\n  onNodeSelect: NodeID => void,\n\n  className?: string,\n  classes: Object,\n|}\n\nconst styles = {\n  root: {},\n}\n\nclass ChildrenExplorer extends React.PureComponent<Props> {\n  allNodesSelector = createSelector((_, p) => p.graph, graph => getAllNodes(graph))\n  getAllNodes = () => this.allNodesSelector(this.state, this.props)\n\n  leafNodesSelector = createSelector(\n    (_, p) => p.graph,\n    graph => keepOnlyLeafModules(graph, getAllNodes(graph)),\n  )\n  getLeafNodes = () => this.leafNodesSelector(this.state, this.props)\n\n  directChildrenNodesSelector = createSelector(\n    (_, p) => p.graph,\n    (_, p) => p.toNode,\n    (graph, toNode) => {\n      if (!toNode) return []\n      return getNodes(graph, toNode.children)\n    },\n  )\n  getDirectChildrenNodes = () => this.directChildrenNodesSelector(this.state, this.props)\n\n  childrenNodesSelector = createSelector(\n    (_, p) => p.graph,\n    (_, p) => p.fromNode,\n    (graph, fromNode) => {\n      if (!fromNode) return []\n      return getDeepNodeChildren(graph, fromNode).then(ids => getNodes(graph, ids))\n    },\n  )\n  getChildrenNodes = () => this.childrenNodesSelector(this.state, this.props)\n\n  childLeafNodesSelector = createSelector(\n    (_, p) => p.graph,\n    this.childrenNodesSelector,\n    async (graph, nodes) => {\n      return keepOnlyLeafModules(graph, await nodes)\n    },\n  )\n  getChildLeafNodes = () => this.childLeafNodesSelector(this.state, this.props)\n\n  modes = {\n    all: {\n      getNodes: this.getAllNodes,\n      renderTitle: () => 'All Nodes',\n      renderInfo: () => 'Select node to start from',\n      renderEmpty: () => 'Nothing found',\n    },\n    directChildren: {\n      getNodes: this.getDirectChildrenNodes,\n      renderTitle: () => 'Direct Children',\n      renderInfo: () => {\n        const {toNode} = this.props\n        if (!toNode) return null\n        return (\n          <>\n            Move down to direct children of <NodeName node={toNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No children found',\n    },\n    children: {\n      getNodes: this.getChildrenNodes,\n      renderTitle: () => 'All Children',\n      renderInfo: () => {\n        const {fromNode} = this.props\n        if (!fromNode) return null\n        return (\n          <>\n            Move down to children of <NodeName node={fromNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No children found',\n    },\n    childLeafs: {\n      getNodes: this.getChildLeafNodes,\n      renderTitle: () => 'Child Leaf Modules',\n      renderInfo: () => {\n        const {fromNode} = this.props\n        if (!fromNode) return null\n        return (\n          <>\n            Move down to child leaf modules of <NodeName node={fromNode} />\n          </>\n        )\n      },\n      renderEmpty: () => 'No modules found',\n    },\n    leafs: {\n      getNodes: this.getLeafNodes,\n      renderTitle: () => 'Leaf Modules',\n      renderInfo: () => 'Select leaf module to finish at',\n      renderEmpty: () => 'No modules found',\n    },\n  }\n\n  render() {\n    const {classes, className, toNode, baseGraph, graph, pinned, onNodeSelect} = this.props\n\n    return (\n      <GraphExplorer\n        className={classNames(classes.root, className)}\n        modes={this.modes}\n        defaultMode={'children'}\n        baseGraph={baseGraph}\n        graph={graph}\n        pinned={pinned}\n        onNodeSelect={onNodeSelect}\n        selected={toNode}\n      />\n    )\n  }\n}\n\nexport default withStyles(styles)(ChildrenExplorer)\n","// @flow\n\nimport type {NodeID, Node, Graph} from './analysis/graph'\nimport type {Change} from './analysis/changes'\n\nimport * as React from 'react'\nimport classNames from 'classnames'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Dropzone from 'react-dropzone'\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  CssBaseline,\n  withStyles,\n  Button,\n  Drawer,\n  Icon,\n} from '@material-ui/core'\n\nimport ChainsExplorer from './ui/graph/ChainsExplorer'\nimport WarningBar from './ui/WarningBar'\nimport ErrorBar from './ui/ErrorBar'\nimport ChangesView from './ui/graph/ChangesView'\nimport EmptyBox from './ui/EmptyBox'\nimport ParentsExplorer from './ui/graph/ParentsExplorer'\nimport ChildrenExplorer from './ui/graph/ChildrenExplorer'\n\ntype Props = {|\n  loading: boolean,\n  baseGraph: ?Graph,\n  graph: ?Graph,\n  error: any,\n\n  fromNode: ?Node,\n  toNode: ?Node,\n  changes: $ReadOnlyArray<Change>,\n  showChanges: boolean,\n  pinned: $ReadOnlyArray<NodeID>,\n\n  onAddChange: Change => any,\n  onFromNodeSelect: NodeID => any,\n  onToNodeSelect: NodeID => any,\n  onNodesSelectionReset: () => any,\n  onChangesUpdate: ($ReadOnlyArray<Change>) => any,\n  onFileDrop: (files: File[], rejectedFiles: File[]) => any,\n  onShowChangesToggle: () => any,\n  onPinnedToggle: NodeID => any,\n  classes: Object,\n|}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n    minWidth: 1200,\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n    fontFamily: ['Roboto', 'Helvetica', 'Arial', 'sans-serif'],\n  },\n  container: {\n    maxWidth: 2000,\n    minWidth: 1200,\n    width: '100vw',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  panes: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    justifyContent: 'space-between',\n    padding: '24px 24px 0 24px',\n  },\n  parentsExplorer: {\n    width: 250,\n    flexShrink: 0,\n    flexGrow: 0.2,\n    marginRight: 48,\n  },\n  pathsExplorer: {\n    flexShrink: 1,\n    flexGrow: 1,\n    marginRight: 48,\n  },\n  childrenExplorer: {\n    width: 250,\n    flexShrink: 0,\n    flexGrow: 0.2,\n  },\n  title: {\n    marginLeft: 'auto',\n    textTransform: 'uppercase',\n  },\n  search: {\n    color: '#fff',\n    borderBottom: '2px solid #fff',\n    width: 300,\n  },\n  dropzone: {},\n  openButton: {},\n  openFileMessage: {\n    textAlign: 'center',\n    width: '30em',\n    alignSelf: 'center',\n    margin: 'auto',\n    cursor: 'pointer',\n  },\n})\n\nclass AppUI extends React.Component<Props> {\n  dropzone: any\n\n  renderGraph() {\n    const {\n      baseGraph,\n      graph,\n      fromNode,\n      toNode,\n      pinned,\n      classes,\n      onFromNodeSelect,\n      onToNodeSelect,\n      onAddChange,\n      onPinnedToggle,\n    } = this.props\n    if (!graph || !baseGraph) return null\n    return (\n      <div className={classNames(classes.container, classes.panes)}>\n        <ParentsExplorer\n          className={classes.parentsExplorer}\n          baseGraph={baseGraph}\n          graph={graph}\n          pinned={pinned}\n          toNode={toNode}\n          fromNode={fromNode}\n          onNodeSelect={onFromNodeSelect}\n        />\n        {fromNode && toNode ? (\n          <ChainsExplorer\n            className={classes.pathsExplorer}\n            baseGraph={baseGraph}\n            graph={graph}\n            pinned={pinned}\n            fromNode={fromNode}\n            toNode={toNode}\n            onFromNodeSelect={onFromNodeSelect}\n            onToNodeSelect={onToNodeSelect}\n            onAddChange={onAddChange}\n            onPinnedToggle={onPinnedToggle}\n          />\n        ) : null}\n        {fromNode ? (\n          <ChildrenExplorer\n            className={classes.childrenExplorer}\n            baseGraph={baseGraph}\n            graph={graph}\n            pinned={pinned}\n            toNode={toNode}\n            fromNode={fromNode}\n            onNodeSelect={onToNodeSelect}\n          />\n        ) : null}\n      </div>\n    )\n  }\n\n  render() {\n    const {\n      loading,\n      error,\n      graph,\n      showChanges,\n      changes,\n      fromNode,\n      classes,\n      onNodesSelectionReset,\n      onChangesUpdate,\n      onFileDrop,\n      onShowChangesToggle,\n    } = this.props\n    return (\n      <Dropzone\n        multiple={false}\n        activeClassName=\"\"\n        rejectClassName=\"\"\n        accept=\".json\"\n        onDrop={onFileDrop}\n        className={classes.dropzone}\n        disableClick\n        ref={node => {\n          this.dropzone = node\n        }}\n      >\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"static\">\n            <Toolbar variant=\"regular\" className={classes.container}>\n              {!loading && (\n                <Button color=\"inherit\" onClick={() => this.dropzone.open()}>\n                  Open stats\n                </Button>\n              )}\n              {graph && (\n                <Button color=\"inherit\" onClick={onShowChangesToggle}>\n                  See changes\n                  {changes.length ? ` (${changes.length})` : null}\n                </Button>\n              )}\n              {fromNode && (\n                <Button color=\"inherit\" onClick={onNodesSelectionReset}>\n                  Choose root node\n                </Button>\n              )}\n              <Typography variant=\"title\" color=\"inherit\" className={classes.title}>\n                Webpack Chop Shop\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {loading && <LinearProgress className={classes.progress} />}\n          {graph &&\n            graph.errors.length > 0 && (\n              <WarningBar>\n                There where {graph.errors.length} errors found. Check the console for more\n              </WarningBar>\n            )}\n          {error && <ErrorBar>{String(error)}</ErrorBar>}\n          {this.renderGraph()}\n          {!graph &&\n            !loading && (\n              <div onClick={() => this.dropzone.open()} className={classes.openFileMessage}>\n                <EmptyBox\n                  icon={\n                    <Icon color=\"inherit\" fontSize=\"default\">\n                      open_in_browser\n                    </Icon>\n                  }\n                >\n                  First,{' '}\n                  <a\n                    href=\"https://webpack.js.org/api/cli/#stats-options\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    generate the stats file in webpack\n                  </a>\n                  , then click here or drop it anywhere on the page to start\n                </EmptyBox>\n              </div>\n            )}\n          {graph && (\n            <Drawer anchor=\"top\" open={showChanges} onClose={onShowChangesToggle}>\n              <div className={classes.container}>\n                <ChangesView graph={graph} changes={changes} onChangesUpdate={onChangesUpdate} />\n              </div>\n            </Drawer>\n          )}\n        </div>\n      </Dropzone>\n    )\n  }\n}\n\nexport default withStyles(styles)(AppUI)\n","// @flow\n\nimport {createGraph, addNode, getNodeId, addEdge} from './graph'\n\nimport type {Graph} from './graph'\n\nexport async function readWebpackStats(\n  stats: Object,\n  options?: {\n    includeAsyncImports?: boolean,\n    includeChunks?: boolean,\n  } = {},\n): Promise<Graph> {\n  const graph = createGraph()\n  const {includeAsyncImports = false, includeChunks = false} = options\n\n  const {chunks = [], modules = []} = stats\n\n  // create chunks\n  if (includeChunks) {\n    for (const chunk of chunks) {\n      addNode(graph, {\n        id: getNodeId('chunk', chunk.id),\n        originalId: chunk.id,\n        kind: chunk.reason && chunk.reason.indexOf('split chunk') ? 'split-chunk' : 'chunk',\n        name: chunk.names[0],\n        size: 0,\n        original: chunk,\n      })\n      await graph.idle()\n    }\n  }\n\n  // create modules\n  for (const module of modules) {\n    if (module.id == null) {\n      // module has been removed at optimization phase (concatenated, tree-shaken, etc)\n      continue\n    }\n    const isConcat = module.name.indexOf(' + ') > 0\n    const isNamespace = module.name.indexOf(' namespace object') > 0\n    const kind = isConcat ? 'concat' : isNamespace ? 'namespace' : 'module'\n    addNode(graph, {\n      id: getNodeId('module', module.identifier),\n      originalId: module.id,\n      kind,\n      name: module.name,\n      file: isConcat ? undefined : (module.name || '').replace(/^.*!/),\n      size: module.size,\n      original: module,\n    })\n    await graph.idle()\n  }\n\n  // create edges\n  for (const module of modules) {\n    if (includeChunks) {\n      for (const chunkId of module.chunks) {\n        addEdge(graph, {\n          from: getNodeId('chunk', chunkId),\n          to: getNodeId('module', module.id),\n          kind: 'chunk child',\n          original: module,\n        })\n      }\n    }\n    for (const reason of module.reasons) {\n      const type = reason.type || ''\n      if (reason.moduleId == null) {\n        // reason has been removed at optimization phase (concatenated, tree-shaken, etc)\n        continue\n      }\n      const async = type.indexOf('import()') >= 0 && type.indexOf('eager') < 0\n      if (async && includeAsyncImports === false) {\n        continue\n      }\n      addEdge(graph, {\n        from: getNodeId('module', reason.moduleIdentifier),\n        to: getNodeId('module', module.identifier),\n        kind: type,\n        name: reason.userRequest,\n        async,\n        original: reason,\n      })\n    }\n    await graph.idle()\n  }\n  return graph\n}\n","// @flow\n\nimport type {NodeID, Graph} from './analysis/graph'\nimport type {Change} from './analysis/changes'\n\nimport * as React from 'react'\nimport {hot} from 'react-hot-loader'\n\nimport {readWebpackStats} from './analysis/webpack'\nimport {getNode, cloneGraph, abortGraph, resolveNode} from './analysis/graph'\nimport {applyChanges, addChange} from './analysis/changes'\nimport AppUI from './AppUI'\n\nexport type AppState = {|\n  loading: boolean,\n  baseGraph: ?Graph,\n  graph: ?Graph,\n  error: any,\n\n  fromNodeId: ?NodeID,\n  toNodeId: ?NodeID,\n  changes: $ReadOnlyArray<Change>,\n  showChanges: boolean,\n  pinned: $ReadOnlyArray<NodeID>,\n|}\n\nclass App extends React.Component<{}, AppState> {\n  state = {\n    loading: false,\n    error: null,\n    baseGraph: null,\n    graph: null,\n    fromNodeId: null,\n    toNodeId: null,\n    changes: [],\n    showChanges: false,\n    pinned: [],\n  }\n\n  async componentDidMount() {\n    this.initLocalStorage()\n    this.initHistory()\n    if (process.env.REACT_APP_STATS) {\n      this.openFile(async () => {\n        console.time('loading')\n        const result = await fetch(`./${process.env.REACT_APP_STATS || ''}`)\n        console.timeEnd('loading')\n        console.time('parsing')\n        const json = await result.json()\n        console.timeEnd('parsing')\n        return json\n      })\n    }\n  }\n\n  initLocalStorage() {\n    try {\n      const pinned = JSON.parse(window.localStorage.getItem('pinned') || '[]')\n      const changes = JSON.parse(window.localStorage.getItem('changes') || '[]')\n      this.setState({pinned, changes})\n      window.addEventListener('storage', this.handleStorageEvent)\n    } catch (error) {\n      console.error('Local storage failed to initialize', error)\n    }\n  }\n\n  handleStorageEvent = (event: StorageEvent) => {\n    if (event.key === 'pinned' && event.newValue) {\n      const pinned = JSON.parse(event.newValue)\n      if (pinned !== this.state.pinned) {\n        this.setState({pinned})\n      }\n    }\n  }\n\n  initHistory() {\n    try {\n      window.addEventListener('popstate', this.handleHistoryChange)\n      this.handleHistoryChange()\n    } catch (error) {\n      console.error('History failed to initialize', error)\n    }\n  }\n\n  handleHistoryChange = () => {\n    const {fromNodeId = null, toNodeId = null} = JSON.parse(\n      atob((window.location.hash || '#').slice(1)) || '{}',\n    )\n    this.setState({\n      fromNodeId,\n      toNodeId,\n    })\n  }\n\n  pushHistory = () => {\n    const {fromNodeId, toNodeId} = this.state\n    window.history.pushState(null, null, `/#${btoa(JSON.stringify({fromNodeId, toNodeId}))}`)\n  }\n\n  openFile = async callback => {\n    this.setState({\n      loading: true,\n      error: null,\n      baseGraph: null,\n      graph: null,\n    })\n    try {\n      const json = await callback()\n      if (json === null) {\n        this.setState({loading: false})\n        return\n      }\n      console.time('conversion')\n      const graph = await readWebpackStats(json)\n      console.timeEnd('conversion')\n      console.log('Graph: ', graph)\n      console.warn('Errors found: ', graph.errors)\n      this.setState({loading: false, graph, baseGraph: graph})\n    } catch (error) {\n      console.error(error)\n      this.setState({loading: false, error})\n    }\n  }\n\n  handleDrop = ([file], [rejected]) => {\n    if (rejected) {\n      this.setState({error: 'Only webpack build stats in json format are accepted!'})\n      return\n    }\n    this.openFile(\n      () =>\n        new Promise((resolve, reject) => {\n          console.time('loading')\n          const reader = new FileReader()\n          reader.onload = () => {\n            console.timeEnd('loading')\n            console.time('parsing')\n            const json = JSON.parse((reader.result: any))\n            console.timeEnd('parsing')\n            resolve(json)\n          }\n          reader.onerror = () => {\n            console.timeEnd('loading')\n\n            reject('Could not read the file')\n          }\n          reader.readAsBinaryString(file)\n        }),\n    )\n  }\n\n  toggleShowChanges = () => {\n    this.setState({showChanges: !this.state.showChanges})\n  }\n\n  updateChanges = changes => {\n    const {baseGraph, graph} = this.state\n    if (!graph || !baseGraph) throw new Error('No graph available now')\n    const newGraph = cloneGraph(baseGraph)\n    // discard old graph\n    if (graph !== baseGraph) {\n      abortGraph(graph)\n    }\n    applyChanges(newGraph, changes)\n    this.setState({graph: newGraph, changes: changes})\n    window.localStorage.setItem('changes', JSON.stringify(changes))\n  }\n\n  addChange = (change: Change) => {\n    const {graph, changes} = this.state\n    if (!graph) throw new Error('No graph available now')\n    this.updateChanges(addChange(graph, changes, change))\n  }\n\n  setNodesSelection = (fromNodeId: ?NodeID, toNodeId: ?NodeID) => {\n    this.setState({fromNodeId, toNodeId}, this.pushHistory)\n  }\n\n  resetNodesSelection = () => {\n    this.setNodesSelection(null, null)\n  }\n\n  selectFromNode = (fromNodeId: NodeID) => {\n    const {graph, toNodeId} = this.state\n    if (graph) console.log('Selected FROM node', getNode(graph, fromNodeId))\n    this.setNodesSelection(fromNodeId, toNodeId || fromNodeId)\n  }\n\n  selectToNode = (toNodeId: NodeID) => {\n    const {graph, fromNodeId} = this.state\n    if (graph) console.log('Selected TO node', getNode(graph, toNodeId))\n    this.setNodesSelection(fromNodeId || toNodeId, toNodeId)\n  }\n\n  togglePinned = (id: NodeID) => {\n    let {pinned} = this.state\n    const wasPinned = pinned.indexOf(id) >= 0\n    pinned = pinned.filter(pin => pin !== id)\n    if (!wasPinned) {\n      pinned = [id, ...pinned]\n    }\n    this.setState({pinned})\n    window.localStorage.setItem('pinned', JSON.stringify(pinned))\n  }\n\n  render() {\n    const {\n      graph,\n      baseGraph,\n      loading,\n      error,\n      fromNodeId,\n      toNodeId,\n      changes,\n      showChanges,\n      pinned,\n    } = this.state\n    return (\n      <AppUI\n        baseGraph={baseGraph}\n        graph={graph}\n        loading={loading}\n        error={error}\n        fromNode={graph && resolveNode(graph, fromNodeId)}\n        toNode={graph && resolveNode(graph, toNodeId)}\n        changes={changes}\n        showChanges={showChanges}\n        pinned={pinned}\n        onAddChange={this.addChange}\n        onFromNodeSelect={this.selectFromNode}\n        onToNodeSelect={this.selectToNode}\n        onNodesSelectionReset={this.resetNodesSelection}\n        onChangesUpdate={this.updateChanges}\n        onFileDrop={this.handleDrop}\n        onShowChangesToggle={this.toggleShowChanges}\n        onPinnedToggle={this.togglePinned}\n      />\n    )\n  }\n}\n\nexport default hot(module)(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nconst rootEl = document.getElementById('root')\n\nregisterServiceWorker()\nReactDOM.render(<App />, rootEl)\n","// @flow\nimport {throttle} from 'lodash'\n\nexport const ABORTED = Symbol('Aborted')\n\n//\nexport const backgroundProcessor = () => {\n  let abort\n  let idleReject\n  const fn = throttle(\n    () =>\n      new Promise((resolve, reject) => {\n        if (abort) reject(abort())\n        idleReject = reject\n        setTimeout(resolve, 0)\n        // requestIdleCallback(resolve)\n      }),\n    16,\n  )\n  fn.abort = (err = ABORTED) => {\n    return new Promise(resolve => {\n      abort = () => {\n        resolve()\n        return err\n      }\n      if (idleReject) idleReject(abort())\n    })\n  }\n  return fn\n}\n","// @flow\n\nimport {mapValues} from 'lodash'\nimport {backgroundProcessor} from './utils'\n\nexport type NodeID = string\nexport type EdgeID = string\nexport type NodeKind = string\nexport type EdgeKind = string\n\nexport type EdgeSpec = {|\n  name?: string,\n  from: NodeID,\n  to: NodeID,\n  kind: EdgeKind,\n  async?: boolean,\n  enabled?: boolean,\n  // Original source object\n  original?: any,\n|}\n\nexport type Edge = {\n  ...EdgeSpec,\n  enabled: boolean,\n}\n\nexport type NodeSpec = {|\n  id: NodeID,\n  originalId: string,\n  name?: string,\n  kind: NodeKind,\n  size: number,\n  file?: string,\n  // Original source object\n  original?: any,\n|}\n\nexport type Node = {\n  ...NodeSpec,\n  parents: Array<NodeID>,\n  children: Array<NodeID>,\n}\n\nexport type Graph = {|\n  nodes: {[NodeID]: Node},\n  edges: {[EdgeID]: Edge},\n  errors: Array<any>,\n  cache: Object,\n  idle: $Call<typeof backgroundProcessor>,\n|}\n\nexport function createGraph(): Graph {\n  return {\n    nodes: {},\n    edges: {},\n    errors: [],\n    cache: {},\n    idle: backgroundProcessor(),\n  }\n}\n\nexport function getNodeId(kind: string, id: string): NodeID {\n  return `${kind}:${id}`\n}\nexport function getEdgeId(from: NodeID, to: NodeID): EdgeID {\n  return `${from}->${to}`\n}\n\nexport function getNode(graph: Graph, id: NodeID): Node {\n  const node = graph.nodes[id]\n  if (!node) throw new Error(`Node ${id} not found`)\n  return node\n}\n\nexport function resolveNode(graph: Graph, id: ?NodeID): ?Node {\n  if (!id) return null\n  return graph.nodes[id] || null\n}\n\nexport function getEdge(graph: Graph, id: EdgeID): Edge {\n  const edge = graph.edges[id]\n  if (!edge) throw new Error(`Edge ${id} not found`)\n  return edge\n}\n\nexport function resolveEdge(graph: Graph, id: ?EdgeID): ?Edge {\n  if (!id) return null\n  return graph.edges[id] || null\n}\n\nexport function resolveEdgeForNodes(graph: Graph, from: ?NodeID, to: ?NodeID): ?Edge {\n  if (!from || !to) return null\n  return graph.edges[getEdgeId(from, to)]\n}\n\nexport function getNodes(graph: Graph, ids: $ReadOnlyArray<NodeID>): $ReadOnlyArray<Node> {\n  return ids.map(getNode.bind(null, graph))\n}\n\nexport function getAllNodes(graph: Graph): $ReadOnlyArray<Node> {\n  return (Object.values(graph.nodes): any)\n}\n\nexport function getEdges(graph: Graph, ids: $ReadOnlyArray<EdgeID>): $ReadOnlyArray<Edge> {\n  return ids.map(getEdge.bind(null, graph))\n}\n\nexport function getChildren(graph: Graph, node: Node): $ReadOnlyArray<Edge> {\n  return getEdges(graph, node.children.map(to => getEdgeId(node.id, to)))\n}\n\nexport function getParents(graph: Graph, node: Node): $ReadOnlyArray<Edge> {\n  return getEdges(graph, node.parents.map(from => getEdgeId(from, node.id)))\n}\n\nexport function addNode(graph: Graph, _node: NodeSpec): Node {\n  const node = {parents: [], children: [], ..._node}\n  if (graph.nodes[node.id]) throw new Error(`Node ${node.id} already in graph`)\n  graph.nodes[node.id] = node\n  return node\n}\n\nexport function addEdge(graph: Graph, _edge: EdgeSpec): Edge {\n  const edge = {enabled: true, ..._edge}\n  const id = getEdgeId(edge.from, edge.to)\n  if (graph.edges[id]) {\n    // graph.errors.push({\n    // message: 'Edge already in graph',\n    // edge,\n    // graphEdge: graph.edges[id],\n    // })\n    return graph.edges[id]\n  }\n  graph.edges[id] = edge\n  const from = getNode(graph, edge.from)\n  const to = getNode(graph, edge.to)\n  if (edge.enabled) {\n    from.children.push(edge.to)\n    to.parents.push(edge.from)\n  }\n  return edge\n}\n\nexport function toggleEdge(graph: Graph, edge: Edge, enabled: boolean) {\n  if (edge.enabled === enabled) return\n  const from = getNode(graph, edge.from)\n  const to = getNode(graph, edge.to)\n  if (enabled) {\n    from.children.push(edge.to)\n    to.parents.push(edge.from)\n  } else {\n    from.children = from.children.filter(id => id !== edge.to)\n    to.parents = to.parents.filter(id => id !== edge.from)\n  }\n  edge.enabled = enabled\n}\n\nexport function abortGraph(graph: Graph) {\n  return graph.idle.abort()\n}\n\nexport function cloneGraph(graph: Graph): Graph {\n  const newGraph = {\n    nodes: mapValues(graph.nodes, node => ({\n      ...node,\n      parents: [...node.parents],\n      children: [...node.children],\n    })),\n    edges: mapValues(graph.edges, edge => ({...edge})),\n    errors: [...graph.errors],\n    cache: {},\n    idle: backgroundProcessor(),\n  }\n  return newGraph\n}\n"],"sourceRoot":""}